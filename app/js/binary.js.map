{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions_drawer_card.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/switch_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/helpers.js","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native_select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range_slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick_steps.jsx","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/button_toggle_menu.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number_selector.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_positions.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/deposit_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/upgrade_button.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_calendar_today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_double_left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_double_right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_chevron_right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_clock.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_minimize.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_plus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_tooltip.jsx","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_positions.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon_barrier_down.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon_barrier_up.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Categories/trade_categories.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon_price_move.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Constants/date_time.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/advanced_duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration_toggle.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration_wrapper.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/simple_duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow_equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade_type_info_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade_type_info_item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js","webpack:///./src/javascript/app_2/index.js","webpack:///./src/javascript/config.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_ref","styles","props","React","createElement","xmlns","width","height","viewBox","fill","d","Calendar","date_format","start_date","value","current_date","format","state","calendar_date","selected_date","calendar_view","footer","has_today_btn","holidays","weekends","isPeriodDisabled","navigateTo","switchView","updateSelected","setToday","PureComponent","view","setState","new_date","onChangeCalendarMonth","start_of_month","updateSelectedDate","e","max_date","min_date","onSelect","moment_date","dataset","date","startOf","is_before","isBefore","is_after","isAfter","formatted_date","type","stopPropagation","view_map","month","year","decade","split","resetCalendar","default_date","now","unit","start_of_period","clone","end_of_period","endOf","defaultProps","add","propTypes","PropTypes","string","bool","arrayOf","shape","dates","array","descrip","oneOfType","object","func","number","CalendarBody","calendar_body","CalendarButton","children","className","is_hidden","label","onClick","CalendarFooter","CalendarHeader","disable_month_selector","disable_year_selector","is_date_view","is_month_view","is_year_view","is_decade_view","num_of_years","century","end_of_decade","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","undefined","month_headers","getDecade","getCentury","default","getDays","day_offset","days","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","moment_selected","end_of_prev_month","day","push","idx","replace","start_of_next_month","moment_start_date","map","is_active","isSame","is_today","events","filter","event","find","has_events","is_closes_early","match","message","is_before_min_or_after_max_date","is_disabled","some","is_other_month","CalendarDays","week_headers_abbr","item","CommonPropTypes","CalendarDecades","start_year","decades","min_year","start_of_decade","is_other_century","CalendarMonths","moment_selected_date","CalendarYears","years","is_other_decade","Drawer","is_this_drawer_on","setRef","node","ref","hide","scrollToggle","hideDrawers","handleClickOutside","contains","is_open","document","body","classList","toggle","alignment","closeBtn","drawer_bg_class","drawer_class","is_main_drawer_on","is_notifications_drawer_on","Component","icon_class","icon_link","drawer_component","ui","DrawerHeader","drawer_header_class","DrawerItem","drawerItemClicked","collapseItems","link_to","text","icon","custom_action","href","drawer_item_component","DrawerItems","is_collapsed","items","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","to_toggle","ToggleDrawer","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","ErrorBoundary","componentDidCatch","error","info","hasError","render","ErrorComponent","msg","str","replacers","FullPageModal","cancel_button_text","confirm_button_text","onConfirm","onCancel","is_visible","title","Notifications","list","PopConfirm","setWrapperRef","wrapper_ref","handleClose","handleOpen","addEventListener","removeEventListener","popconfirm_element","cancel_text","confirm_text","Children","cloneElement","child","PopConfirmElement","onClose","wrapperRef","popconfirm_class","PositionsDrawer","onMount","onUnmount","active_positions","currency","is_empty","is_positions_drawer_on","toggleDrawer","body_content","portfolio_position","id","MobxPropTypes","arrayOrObservableArray","any","is_loading","modules","client","portfolio","togglePositionsDrawer","PositionsDrawerCard","expiry_time","indicative","status","underlying","LanguageDialog","is_settings_on","language_dialog_class","toLowerCase","SettingsControl","name","style","SettingsDialog","footer_settings_btn","toggleDialog","settings_dialog_class","settings_dialog_container_class","is_language_dialog_visible","settings_content","header","content","GeneralSettings","ChartSettings","Tabs","active_tab_index","setActiveTab","index","TabContents","tab_container_class","tab_header_class","icon_name","active","TabsItem","elements","onChange","tab_class","el","TabsWrapper","getSizes","rootBounds","root","getBoundingClientRect","sizes","els","forEach","bounds","left","right","getUnderlineStyle","size","transition","window","CloseButton","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","Toast","data","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","setTimeout","delay","position","toUpperCase","Localize","localized","test","LoginPrompt","IconComponent","onLogin","onSignup","Money","amount","has_sign","is_formatted","sign","abs_value","Math","abs","final_amount","SwitchButton","toggled","toggle_style","Tooltip","classNameIcon","UILoader","classNameBlock","loading_class","block_class","DatePicker","is_datepicker_visible","is_clear_btn_visible","handleVisibility","onClickOutside","mainNode","mode","updateDatePickerValue","onMouseEnter","is_clearable","onMouseLeave","onSelectCalendar","onChangeInput","clearDatePickerInput","updateStore","calendar","renderInputField","is_read_only","validation_errors","placeholder","disable_trading_events","trading_events","is_nativepicker","nativeEvent","iosClearDefault","defaultValue","enter","enterDone","exit","bind","getTradingEvents","WS","getTradingTimes","trading_times_response","trading_times","markets","submarkets","j","symbols","k","symbol","echo_req","Dropdown","list_ref","createRef","curr_index","is_list_visible","handleSelect","onKeyPressed","is_single_option","keyCode","preventDefault","handleToggle","prev_index","next_index","is_alignment_left","char","firstChars","x","left_alignment_style","transform","list_width","setListWidth","current","offsetWidth","display","getDisplayText","findInArray","arr_list","getItemFromValue","findIndex","getValueFromIndex","result","getPrevIndex","getNextIndex","Items","highlightedIdx","NativeSelect","Array","isArray","RangeSlider","ticks","max_value","min_value","handleChange","handleClick","first_tick","is_error","TickSteps","arr_ticks","parseInt","Button","classNameSpan","has_effect","tabIndex","wrapperClassName","classes","effect","button","wrapper","ButtonToggleMenu","buttons_arr","changeValue","selected_value","menu","val","Fieldset","is_center","fieldset_header_class","fieldset_info_class","InputField","checked","classNameInput","classNamePrefix","data_tip","data_value","error_messages","fractional_digits","helper","is_autocomplete_disabled","is_float","is_incrementable","is_signed","is_unit_at_right","max_length","prefix","required","has_error","has_valid_length","max_is_disabled","min_is_disabled","trim","signed_regex","is_number","RegExp","is_not_completed_number","has_zero_at_end","is_scientific_notation","incrementValue","increment_value","decrementValue","decrement_value","display_value","input","input_increment","NumberSelector","arr_arr_numbers","selected_number","getAttribute","arr_numbers","TimePickerDropdown","selectOption","is_enabled","prev_hour","prev_minute","is_type_selected","last_updated_type","clear","resetValues","hours","a","slice","minutes","is_hour_selected","is_minute_selected","prevProps","prevState","preClass","sessions","start_moment","start_moment_clone","minute","second","hour","saveHourRef","h","saveMinuteRef","mm","TimePicker","toggleDropDown","arg","saveRef","nodeName","target_element","prefix_class","is_align_right","padding","value_split","NetworkStatus","tooltip","class","ToggleFullScreen","onFullScreen","is_full_screen","fullscreen_map","element","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","TogglePositions","toggle_positions_class","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","toggle_settings_class","AccountInfo","balance","loginid","is_dialog_on","is_upgrade_enabled","is_virtual","onClickUpgrade","account_type","DepositButton","InstallPWAButton","prompt_event","showPrompt","prompt","userChoice","then","choice_result","outcome","LoginButton","redirectToLogin","MenuLinks","ToggleMenuDrawer","ToggleNotificationsDrawer","UpgradeButton","BinaryLink","to","path","route","Error","exact","BinaryRoutes","ButtonLink","normalizePath","findRouteByPath","routes_config","route_info","routes","isRouteVisible","is_logged_in","is_authenticated","getPath","route_path","params","reduce","p","getContractPath","contract_id","contract","RouteWithSubRoutes","renderFactory","component","Redirect","location","pathname","icon_component","default_title","GTM","pushDataLayer","website_name","header_links","trade","statement","ContractDetails","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","initRoutesConfig","IconPortfolio","IconStatement","Trade","settings","personal","financial","account_password","cashier_password","exclusion","limits","history","token","apps","error404","route_default","getRoutesConfig","AccountSwitcher","accounts_toggle_btn","handleLogout","account_loginid","switchAccount","main_account_title","account_list","accounts","account","doSwitch","upgrade_info","can_open_multi","virtual_loginid","account_switcher","virtual_account_loginid","URL","urlFor","DenialOfServiceModal","denial_of_service","is_client_allowed_to_visit","MenuDrawer","is_dark_mode","is_mobile","is_purchase_locked","toggleDarkMode","togglePurchaseLock","is_purchase_confirmed","togglePurchaseConfirmation","is_dark_mode_on","is_purchase_confirm_on","is_purchase_lock_on","AppContents","is_contract_mode","ProptTypes","smart_chart","Footer","is_settings_dialog_on","network_status","toggleSettingsDialog","common","is_language_dialog_on","Header","can_upgrade","can_upgrade_to","hideInstallButton","is_acc_switcher_on","is_install_button_visible","pwa_prompt_event","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","console","log","is_accounts_switcher_on","Routes","objectOrObservableObject","LanguageSettings","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","is_chart_layout_default","is_chart_asset_info_visible","is_chart_countdown_visible","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","showLanguage","current_language","showLanguageDialog","hideLanguageDialog","RemainingTime","end_time","start_time","unix","remaining_time","isRequired","server_time","ServerTime","gmt_time","ToastMessage","toast_messages","toast","enforceActions","initApp","Client","init","root_store","RootStore","NetworkMonitor","OutdatedBrowser","app","getElementById","App","IconArrow","classNamePath","IconBack","IconCalendar","IconCalendarToday","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","IconClock","IconClose","IconError","IconExclamation","IconMinimize","IconMinus","disabled","IconPlus","IconTooltip","IconEntrySpot","color","IconFlag","IconTick","circle_color","tick_color","IconMaximize","IconPositions","IconType","IconSettings","IconLogout","IconBell","IconCashier","IconHamburger","IconTrade","IconBarrierDown","IconBarrierUp","IconTradeCategory","category","IconCategory","TradeCategories","TradeTypeTemplate","IconTradeType","IconLock","IconPriceMove","getContractTypeDisplay","ASIANU","ASIAND","CALL","CALLE","PUT","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYMISS","EXPIRYRANGE","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","getDaysOfTheWeek","days_of_the_week","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","DetailsContents","buy_id","details_expiry","details_info","longcode","DetailsGroup","DetailsHeader","header_config","title_purchased","purchased","title_result","icon_purchased","icon_result","oneOf","DigitDisplay","digit_info","digit_number","digit_class","is_win","last","is_last","digit","InfoBoxDigit","InfoBoxExpired","InfoBoxGeneral","contract_info","digits_info","is_ended","digits_array","sort","spot_time","count","tick_count","latest_digit","display_array","last_item","has_flag","has_percentage","sell_info","profit","profit_percentage","percentage_text","transaction_id","buy_price","date_expiry","indicative_price","is_started","onClickSell","SellButton","is_sell_requested","is_valid_to_sell","sell_message","validation_error","SellInfo","sell_price","ContractError","onClickClose","transaction_ids","display_status","buy","onClickNewTrade","error_message","ContractSell","InfoBox","is_trade_page","removeError","is_digit","contract_type","box_class","Contents","removeSellError","ContractTypeCell","EmptyPortfolioMessage","MarkerLine","line_style","MarkerSpot","align","spot_value","FullScreenDialog","visible","checkVisibility","remove","scrollToElement","parent","viewport_offset","hidden","top","clientHeight","innerHeight","new_el_top","scrollTop","tagName","scrollToTarget","currentTarget","MobileWidget","open","handleDialogClose","handleWidgetClick","ContractTypeDialog","ContractTypeItem","contracts","handleInfoClick","ContractTypeList","includes","ContractTypeWidget","onSubmitButtonClick","handleInfoVisibility","handleNavigationClick","handleNextClick","navigationList","navigationLength","currentIndex","list_item","nextIndex","handlePrevClick","prevIndex","is_dialog_open","is_info_dialog_open","onWidgetClick","onBackButtonClick","getStyles","container_classes","getNavigationList","join","ErrorBalance","ErrorGeneral","ErrorLogin","MessageBox","purchase_info","error_code","PurchaseResult","payout","PurchaseLock","ContractInfo","has_increased","proposal_info","obj_contract_basis","AdvancedDuration","advanced_duration_unit","advanced_expiry_type","duration_min_max","duration_units_list","changeDurationUnit","getDurationFromUnit","expiry_date","expiry_list","expiry_type","number_input_props","shared_input_props","market_close_times","onChangeUiStore","duration_t","moment_expiry","is_24_hours_contract","expiry_time_sessions","max_date_duration","min_date_expiry","max_daily_duration","daily","max","moment_contract_start_date_time","has_intraday_duration_unit","expiry_date_time","expiry_date_market_close","is_expired_next_day","diff","close","subtract","endtime_container_class","changeExpiry","Duration","hasDurationUnit","contract_expiry_type","duration","duration_unit","onChangeMultiple","is_advanced_duration","is_minimized","simple_duration_unit","has_end_time","expiry","pop","duration_unit_text","o","duration_value","changeDurationValue","duration_name","onToggleDurationType","current_duration_unit","new_trade_store_values","min","shared_input","number_input","has_toggle","DurationToggle","icon_className","DurationWrapper","duration_list","du","new_duration_unit","new_duration_value","current_unit","current_duration","simple_is_missing_duration_unit","has_missing_duration_unit","simple_is_not_type_duration","advanced_has_wrong_expiry","setDurationUnit","duration_d","duration_h","duration_m","duration_s","SimpleDuration","filterMinutesAndTicks","arr","filtered_arr","has_label","AllowEquals","is_allow_equal","Amount","basis","basis_list","currencies_list","is_equal_checked","is_single_currency","amount_container_class","observableObject","Barrier","barrier_1","barrier_2","barrier_count","barrier_title","input_class","LastDigit","last_digit","arr_five","TradeTypeInfoDialog","TradeTypeInfoItem","FormLayout","is_contract_visible","is_trade_enabled","ScreenLarge","ScreenSmall","Contract","contract_types_list","Purchase","is_purchase_enabled","onClickPurchase","onHoverPurchase","resetPurchase","trade_types","purchase_button","stake","returns","is_purchase_error","onPurchase","requestProposal","Test","setVisibility","stateVisibility","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","v","JSON","stringify","SmartChart","lazy","form_wrapper_class","chart_id","onSymbolChange","chart_type","granularity","updateChartType","updateGranularity","TradeParams","component_name","form_components","isVisible","trade_store","client_store","ui_store","renderCards","BinarySocketGeneral","requestLogout","logout","doLogout","response","clearAllAccounts","set","SocketCache","reload","common_store","store","NetworkMonitorBase","is_online","is_network_online","src","querySelector","$buoop","vs","f","s","c","api","url","noclose","reminder","onshow","nomessage","insecure","script","setAttribute","appendChild","showError","rel","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","get","onMessage","handleError","msg_type","is_active_tab","sessionStorage","getItem","removeItem","State","authorize","responseAuthorize","subscribeBalance","getSettings","getAccountStatus","payoutCurrencies","mt5LoginList","setResidence","country","residence","getSelfExclusion","BinarySocket","sendBuffered","accepted_bch","get_settings","country_code","setEmail","email","responsePayoutCurrencies","payout_currencies","pushTransactionData","bom_ui","landingCompany","setBalance","wait","setError","is_available","website_status","site_status","availability","activeSymbols","send","active_symbols","proposal_id","price","contractsFor","contracts_for","get_account_status","get_self_exclusion","landing_company","mt5_login_list","oauthApps","oauth_apps","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","Promise","resolve","limit","offset","date_boundaries","description","forget","cb","match_values","SubscriptionManager","forgetAll","is_forced","subscribe","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","subscribeTicksHistory","subscribeTransaction","transaction","getHeaderConfig","won","lost","createChartBarrier","SmartChartStore","removeBarriers","barrier","high_barrier","low_barrier","createBarriers","BARRIER_LINE_STYLES","SOLID","not_draggable","updateBarrierShade","createChartMarkers","ContractStore","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerEndTime","LINE_PURCHASE","createMarkerPurchaseTime","LINE_START","createMarkerStartTime","SPOT_ENTRY","createMarkerSpotEntry","SPOT_EXIT","createMarkerSpotExit","createMarkerConfig","purchase_time","date_start","entry_tick_time","is_sold_before_start","entry_tick","end_spot_time","end_spot","y","content_config","detailsProps","details_props","initDetailsProps","entry_spot","purchase_price","exit_spot","exit_spot_time","getDetailsInfo","sell_time","txt_start_time","txt_entry_spot","getDetailsExpiry","is_user_sold","isDigitContract","getDigitInfo","entry","createDigitInfo","current_spot_time","exit_time","exit_tick_time","is_after_expiry","current_spot","spot","isWin","win_checker","getChartConfig","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","m","getDisplayStatus","isEnded","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","getFinalPrice","bid_price","getIndicativePrice","is_expired","is_settleable","isSoldBeforeStart","isStarted","is_forward_starting","isUserSold","isValidToSell","action","bound","chart_config","onSwitchAccount","accountSwitcherListener","setContractMode","updateProposal","disposeSwitchAccount","forgetProposalOpenContract","removeMarkers","handleDigits","handleSell","proposal_response","sold_for","BaseStore","observable","computed","formatPortfolioPosition","portfolio_pos","purchase","parseFloat","reference","details","PortfolioStore","pos","pos1","pos2","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","prev_indicative","new_indicative","display_name","unshift","splice","initializePortfolio","clearTable","server_epoch","portfolioHandler","transactionHandler","CONTRACT_SHADES","DEFAULT_SHADES","BARRIER_COLORS","GREEN","RED","DASHED","DOTTED","tick_chart_types","MARKER_X_POSITIONER","EPOCH","NONE","MARKER_Y_POSITIONER","VALUE","MARKER_CONTENT_TYPES","LINE","ContentComponent","xPositioner","yPositioner","SPOT","isBarrierSupported","barriersToString","is_relative","barriers_list","barriersObjectToArray","barriers","ChartBarrierStore","onChartBarrierChange","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","should_display","updateBarriers","ChartMarkerStore","store_name","local_storage_properties","wsSubscribe","callback","wsForget","wsSendRequest","time","timePromise","is_title_enabled","main","config","assetInformation","countdown","lang","theme","main_barrier","formatStatementTransaction","moment_obj","transaction_time","date_str","time_str","balance_after","should_exclude_currency","action_type","refid","isNaN","desc","app_id","batch_size","StatementStore","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","fetchNextBatch","scrollHeight","left_to_scroll","clearDateFilter","onChangeContractTypeList","ContractType","getContractType","onChangeContractType","getContractValues","onChangeExpiry","obj_barriers","getBarriers","processPurchase","onChangeStartDate","obj_contract_start_type","getStartType","contract_start_type","obj_sessions","getSessions","obj_start_time","getStartTime","obj_duration_units_list","getDurationUnitsList","obj_duration_unit","getDurationUnit","obj_expiry_type","getExpiryType","obj_expiry_date","getExpiryDate","obj_market_close_times","obj_expiry_time","getExpiryTime","obj_duration_min_max","getDurationMinMax","onChangeSymbolAsync","buildContractTypesConfig","getLocalizedBasis","multiplier","getContractTypesConfig","rise_fall","components","rise_fall_equal","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","barrier2","removable_proposal_properties","getValidationRules","rules","condition","options","inputs","trigger","buildBarriersConfig","obj_barrier","field","setChartBarrier","available_contract_types","available_categories","contract_types","contract_categories","r","available","sub_cats","has_spot","start_type","durations","buildTradeTypesConfig","forward_starting_dates","contract_display","getArrayDefaultValue","arr_new_values","getComponents","obj_basis","getBasis","obj_trade_types","getTradeTypes","obj_start_dates","getStartDates","obj_start_type","obj_duration_units_min_max","l","ct","c_type","duration_units","arr_units","getFullContractTypes","Number","current_start_date","start_dates_list","option","getValidTime","compare_moment","buildMoment","times","proper_expiry_date","moment_start","is_invalid","isSameOrBefore","market_close_time","end_moment","expiry_sessions","is_end_of_day","is_end_of_session","barrier_values","toString","arr_basis","localized_basis","cur","bas","getContractCategories","buildCurrenciesList","fiat","crypto","getDefaultCurrency","supported_currencies","values","b","default_currency","getDurationMaps","t","order","to_second","buildDurationConfig","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","u","from_unit","to_unit","duration_string","duration_is_day","expiry_is_after_today","hasIntradayDurationUnit","convertDurationLimit","isInteger","floor","StartDate","processTradeParams","new_state","snapshot","getSnapshot","functions","getMethodsList","extendOrReplace","ContractTypeHelper","new_values","to_replace","getProposalInfo","obj_prev_contract_basis","ask_price","contract_basis","is_stake","toFixed","createProposalRequests","requests","new_req","createProposalRequestForContract","current_req","proposal_requests","type_of_contract","obj_expiry","getProposalParametersName","proper_param_name","alternative_name","buildForwardStartingConfig","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","isSessionAvailable","isBetween","session","pickDefaultSymbol","symbol_info","submarket","Symbol","TradeStore","URLHelper","pruneQueryString","session_storage_properties","validation_rules","debouncedProposal","defineProperty","enumerable","writable","changeDurationValidationRules","changeAllowEquals","query_string_values","updateQueryString","is_invalid_symbol","addToastMessage","setQueryParam","processNewValuesAsync","selectCurrency","is_over","contract_data","pushPurchaseData","is_trade_component_mounted","obj_new_values","is_changed_by_user","is_barrier_changed","is_query_string_applied","validateAllProperties","proper_proposal_params_for_query_string","onProposalResponse","prev_proposal_info","query_params","param","duration_options","validateProperty","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_list","contract_duration_list","check_callput_equal_duration","refresh","prepareTradeStore","ModulesStore","switchAccountDisposer","switch_account_listener","has_local_or_session_storage","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","localStorage","setItem","local_storage_snapshot","parse","session_storage_snapshot","propertyName","messages","addRule","property","change","newValue","validator","Validator","isPassed","setValidationErrorMessages","errors","listener","switch_broadcast","switchEndSignal","freeze","storage_key","ClientStore","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","landing_company_shortcode","canUpgrade","landing_companies","session_start","valueOf","landing_company_name","updateAccountList","getBasicUpgradeInfo","excluded_until","param_to_set","value_to_set","switched","getObject","registerReactions","getAccount","all_loginids","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","valid_login_ids_regex","every","acc","CommonStore","is_socket_opened","moment","utc","currentLanguage","SPECIAL_REACT_KEYS","MobxProvider","stores","baseStores","context","mobxStores","Provider","childContextTypes","connect_global_store","mapper","connect","StoreClass","observed","StoredComponent","wrappedDisplayName","displayName","constructor","UIStore","handleResize","screen_width","innerWidth","toast_message","epochToMoment","epoch","toMoment","isValid","isUTC","Date","setTime","convertToUnix","toGMTFormat","formatDate","daysFromTodayTo","getDiffDuration","formatDuration","asDays","seconds","formatted_str","isTimeValid","isHourValid","isMinuteValid","isDateValid","addDays","addMonths","num_of_months","addYears","subDays","subMonths","subYears","minDate","date_1","date_2","getStartOfMonth","setStorageEvents","evt","is_logging_in","convertObjectToReactElement","other_props","fillTemplate","template","open_tag_id","tag","tag_id","before","pair_code","isValidElement","getAllowedLanguages","exclude_languages","language_list","EN","getURL","getComponentProperties","getOwnPropertyNames","prop","getPropFromStores","getBaseName","regex_string","basename","exec","query_string","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","validRequired","String","validEmail","validPassword","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","$","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","format_money","isMoreThanMax","getPreBuildDVRs","initPreBuildDVRs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","pre_build_dvrs","getPasswordLengthConfig","Errors","attribute","has","error_count","rule","name1","name2","ruleObject","getRuleObject","is_valid","addFailure","check","is_rule_string","rule_object","barrier1","positions_drawer","purchase_confirm","chart","toolbar_position","chart_asset_info","GTMBase","unregister","register","navigator","path_name","sw_url","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready","check_new_release","checkNewRelease","domain_app_ids","getCurrentBinaryDomain","domain","hostname","isProduction","all_domains","binary_desktop_app_id","getAppId","user_app_id","config_app_id","is_new_app","isBinaryApp","getSocketURL","server_url","is_real","server","module","exports"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iDAAyC,4eAA4e,6BAA6B,smBAAsmB;AACxpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,yCAAiC;;AAEjC;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAwB,kCAAkC;AAC1D,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA,kDAA0C,oBAAoB,WAAW;;AAEzE;AACA;AACA;AACA;AACA,wBAAgB,u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","file":"binary.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"1f20d1cb6ffbf53419ed\",\"account_password\":\"67c66084bc424d34b10b\",\"api_toke\":\"7c72ca04a060c6e8363d\",\"authorized_application\":\"97635409ac3488b8a4dc\",\"cashier_password\":\"0061f340e2203b85c4de\",\"contract\":\"c3b74a127c727ed8b4fd\",\"financial_assessment\":\"fa615b65ab7d51a072e8\",\"limits\":\"6122a66075b7120f5152\",\"login_history\":\"f73b0e94430bafb6dff4\",\"personal_details\":\"8c2c516db1200e2e67f1\",\"portfolio\":\"dcfcf75f0048e5d379cb\",\"self_exclusion\":\"10c70715aab8e89cdf0f\",\"settings\":\"b65a79071afa6712cab7\",\"statement\":\"df0f87e87ef416986955\",\"vendors~smart_chart\":\"90a0463c2d7edd3d8556\",\"smart_chart\":\"7332318ac688f4c6e8d5\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/javascript/app_2/index.js\",\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ja\";","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport CalendarBody   from './calendar_body.jsx';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, footer, has_today_btn, start_date, holidays, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    weekends={weekends}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    has_today_btn={has_today_btn}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    holidays     : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon calendar__icon--today'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport { month_headers }    from 'Constants/date_time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar_button.jsx';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date         : PropTypes.string,\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export default from './calendar.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { padLeft }      from '_common/string_util';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr } from 'Constants/date_time';\nimport {\n    addDays,\n    addMonths,\n    subDays,\n    subMonths,\n    toMoment }          from 'Utils/Date';\nimport CommonPropTypes  from './types';\nimport Tooltip          from '../../tooltip.jsx';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    holidays,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date = toMoment(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events      = !!events.length;\n        const is_closes_early = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message         = events.map(event => event.descrip)[0] || '';\n\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date)\n            || moment_date.isAfter(addDays(moment_start_date, 1)))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'  : is_active && !is_disabled,\n                    'calendar__cell--today'   : is_today,\n                    'calendar__cell--disabled': is_disabled,\n                    'calendar__cell--other'   : is_other_month,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day') }\n                data-date={date}\n            >\n                { ((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Tooltip\n                        alignment='top'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format: PropTypes.string,\n    holidays   : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date_time';\nimport { toMoment }      from 'Utils/Date';\nimport CommonPropTypes   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.string,\n    updateSelected  : PropTypes.func,\n};\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <SwitchButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","export default from './error_component.jsx';\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    })\n                ))}\n                {popconfirm_element}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","export default from './positions_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconMinimize }               from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions_drawer_card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_positions_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PositionsDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('positions-drawer', { 'positions-drawer--open': is_positions_drawer_on })}>\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconMinimize />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        toggleDrawer          : ui.togglePositionsDrawer,\n    })\n)(PositionsDrawer);\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PositionsDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink\n        className='positions-drawer-card'\n        to={getContractPath(id)}\n    >\n        <React.Fragment>\n            <div className='positions-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`positions-drawer-card__indicative positions-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='positions-drawer-card__symbol'>{underlying}</span>\n            <span className='positions-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPositionsDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <SwitchButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","export default from './toast.jsx';\nexport * from './constants.js';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={classNames(className, 'symbols', currency.toLowerCase())} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst SwitchButton = ({ style, toggled }) => {\n    const toggle_style = style || 'switch-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nSwitchButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default SwitchButton;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    alignment,\n    children,\n    className,\n    classNameIcon,\n    icon, // only question or info accepted\n    message,\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info' || icon === 'dot') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className={classNames(className, 'tooltip')} data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={classNames(classNameIcon, icon_class)} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const loading_class = classNames('loading', className);\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }             from 'Assets/Common';\nimport InputField           from 'App/Components/Form/input_field.jsx';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from '_common/localize';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        value                : this.props.value,\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        holidays             : [],\n        weekends             : [],\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        if (mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value));\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value));\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? addDays(toMoment(), value) : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        this.setState({\n            holidays,\n            weekends,\n        });\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, validation_errors } = this.props;\n        let { placeholder } = this.props;\n        let type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                placeholder = placeholder || localize('Select a duration');\n                type = 'number';\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n        }\n\n        return (\n            <InputField\n                className='datepicker__input'\n                classNameInput='trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={validation_errors}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={this.state.value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden': this.state.is_clear_btn_visible,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                { this.props.is_clearable &&\n                    <IconClear\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : 'datepicker__picker--enter',\n                        enterDone: 'datepicker__picker--enter-done',\n                        exit     : 'datepicker__picker--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n};\n\nexport default observer(DatePicker);\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","export default from './date_picker.jsx';\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native_select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown-container--left'    : this.props.is_alignment_left,\n                    'dropdown-container--show'    : this.state.is_list_visible,\n                    'dropdown-container--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', {\n                        'dropdown__display--clicked': this.state.is_list_visible,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('select-arrow', {\n                        'select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : 'dropdown__list--enter',\n                        enterDone: 'dropdown__list--enter--done',\n                        exit     : 'dropdown__list--exit',\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","export default from './dropdown.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected'   : value === item.value,\n                    'list__item--highlighted': highlightedIdx === idx,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect  : PropTypes.func,\n    highlightedIdx: PropTypes.number,\n    name          : PropTypes.string,\n    value         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","export default from './range_slider.jsx';\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick_steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    const is_error = ((value < min_value) || (value > max_value)) ? 'error' : '';\n\n    return (\n        <div className={classNames('range-slider', className, { 'error': is_error })}>\n            <label htmlFor='range'>\n                <input\n                    id='range'\n                    className='trade-container__input range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '0.8rem' : '0.5rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('ticks__step', {\n                        'ticks__step--active': (idx + 1) === parseInt(value),\n                        'ticks__step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            <span className={classNameSpan || undefined}>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Button     from './button.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={val.text}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return <div className='button-menu'>{menu}</div>;\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { IconMinus }             from 'Assets/Common/icon_minus.jsx'; // implicit import here { IconMinus, IconPlus } from 'Assets/Common' breaks compilation\nimport { IconPlus }              from 'Assets/Common/icon_plus.jsx';\nimport Button                    from './button.jsx';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    classNameInput,\n    classNamePrefix,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_read_only = false,\n    is_signed = false,\n    is_unit_at_right = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    unit,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (unit) {\n            e.target.value = e.target.value.replace(unit, '').trim();\n        }\n\n        if (e.target.value === value && type !== 'checkbox') {\n            return;\n        }\n\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n            const signed_regex = is_signed ? '[\\+\\-\\.0-9]$' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const incrementValue = () => {\n        if  (max_is_disabled) return;\n\n        const increment_value = (+value) + 1;\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n\n        const decrement_value = (+value) - 1;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    let display_value = value;\n\n    if (unit) {\n        display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n    }\n\n    const input =\n        <input\n            checked={checked ? 'checked' : ''}\n            className={classNames({ error: has_error }, classNameInput)}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-value={data_value}\n            data-tip={data_tip}\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={display_value || ''}\n            autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n        />;\n\n    const input_increment =\n        <div className='input-wrapper'>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--increment'}\n                is_disabled={max_is_disabled}\n                onClick={incrementValue}\n                tabIndex='-1'\n            >\n                <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n            </Button>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--decrement'}\n                is_disabled={min_is_disabled}\n                onClick={decrementValue}\n                tabIndex='-1'\n            >\n                <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n            </Button>\n            { input }\n        </div>;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <span className={classNames(classNamePrefix, 'symbols', prefix.toLowerCase())} />\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                {is_incrementable  &&  type === 'number' ? input_increment : input}\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked                 : PropTypes.number,\n    className               : PropTypes.string,\n    classNameInput          : PropTypes.string,\n    classNamePrefix         : PropTypes.string,\n    error_messages          : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits       : PropTypes.number,\n    helper                  : PropTypes.string,\n    id                      : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={`number-selector__selection${selected_number === i ? ' selected' : ''}`}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { localize }              from '_common/localize';\nimport { IconClock }             from 'Assets/Common';\nimport { isSessionAvailable }    from 'Stores/Modules/Trading/Helpers/start_date';\nimport { toMoment }              from 'Utils/Date';\nimport InputField                from './input_field.jsx';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled && this.props.value) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = toMoment(start_date);\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            className='trade-container__input'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    is_unit_at_right\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`, this.state.is_open ? 'active' : '')}\n                                    classNameInput='trade-container__input'\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                    unit='GMT'\n                                />\n                                <IconClock className={`${prefix_class}-icon`} />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_positions.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPositions } from 'Assets/Footer';\n\nconst TogglePositions = ({\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames('ic-positions', {\n        'active': is_positions_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n        >\n            <IconPositions />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    is_virtual,\n    onClickUpgrade,\n    toggleDialog,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div\n                className={classNames('acc-info', {\n                    'acc-info--show'      : is_dialog_on,\n                    'acc-info--is-virtual': is_virtual,\n                })}\n                onClick={toggleDialog}\n            >\n                <p\n                    className='acc-balance-id'\n                    title={loginid}\n                >\n                    {loginid}\n                </p>\n                {\n                    typeof balance !== 'undefined' &&\n                    <p className='acc-balance-amount'>\n                        <span\n                            className={classNames('symbols', (currency || '').toLowerCase())}\n                        />\n                        {balance}\n                    </p>\n                }\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={200}\n                classNames={{\n                    enter    : 'acc-switcher-wrapper--enter',\n                    enterDone: 'acc-switcher-wrapper--enter-done',\n                    exit     : 'acc-switcher-wrapper--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst DepositButton = () => (\n    <Button\n        className='primary orange'\n        has_effect\n        text={localize('Deposit')}\n        // TODO: Redirect to Deposit page in Cashier\n        // onClick={redirectToCashierDeposit}\n    />\n);\n\nexport { DepositButton };\n","export * from './account_info.jsx';\nexport * from './deposit_button.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './upgrade_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <div className='menu-links'>\n            {\n                items.map((item, idx) => (\n                    <BinaryLink key={idx} to={item.link_to}>\n                        <span title={item.text}>{item.icon}{item.text}</span>\n                    </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        // TODO: Combine portfolio and statement into reports page\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Reports'),\n        link_to: routes.statement,\n    },\n];\n\nexport default header_links;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        requestLogout();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n        // TODO: Once we allow other real accounts (apart from CR), assign correct title and group accounts into list with correct account title/types\n        // e.g - Real, Financial, Gaming, Investment\n\n        const main_account_title = localize('Real account');\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                {\n                    // Make sure this block is not rendered if there are no real accounts\n                    !!(this.props.account_list.length > 0 && !(this.props.account_list[0].is_virtual)) &&\n                    <div className='acc-switcher__list__group'>\n                        <span className='acc-switcher__list__title'>\n                            {main_account_title}\n                        </span>\n                        {\n                            this.props.account_list.filter((accounts) => !accounts.is_virtual).map((account) => (\n                                <React.Fragment key={account.loginid}>\n                                    <div\n                                        className={classNames('acc-switcher-account', {\n                                            'acc-switcher-account--selected': (account.loginid === this.props.account_loginid),\n                                        })}\n                                        onClick={this.doSwitch.bind(this, account.loginid)}\n                                    >\n                                        <span\n                                            className={classNames('acc-switcher__id', {\n                                                'acc-switcher__id__icon': account.icon,\n                                            },\n                                            `acc-switcher__id__icon--${account.icon}`)}\n                                        >\n                                            {account.loginid}\n                                        </span>\n                                        <span className='acc-switcher__radio' />\n                                    </div>\n                                </React.Fragment>\n                            ))}\n\n                        {   // TODO: Add link to account opening page for upgrade or multi account page for new account.\n                            // Update text below for handling types of account to create :- e.g - Investment\n                            !!(this.props.is_upgrade_enabled && this.props.upgrade_info.can_open_multi) &&\n                            <div className='acc-switcher__new-account'>\n                                <span>{localize('Add new account')}</span>\n                            </div>\n                        }\n                    </div>\n                }\n                <div className='acc-switcher__list__virtual'>\n                    <span className='acc-switcher__list__title'>\n                        {localize('Virtual account')}\n                    </span>\n                    <div\n                        className={classNames('acc-switcher-account', {\n                            'acc-switcher-account--selected': (this.props.virtual_loginid === this.props.account_loginid),\n                        })}\n                        onClick={this.doSwitch.bind(this, this.props.virtual_loginid)}\n                    >\n                        <span className={classNames('acc-switcher__id', 'virtual')}>\n                            {this.props.virtual_loginid}\n                        </span>\n                        <span className='acc-switcher__radio' />\n                    </div>\n                </div>\n                { !!(this.props.is_upgrade_enabled && this.props.is_virtual) &&\n                <div className='acc-switcher__new-account'>\n                    <span>{localize('Upgrade to Real Account')}</span>\n                </div>\n                }\n                <div className='acc-logout' onClick={this.handleLogout}>\n                    <span className='acc-logout__text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    onClickUpgrade        : PropTypes.func,\n    toggle                : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    upgrade_info          : PropTypes.object,\n    virtual_loginid       : PropTypes.string,\n};\n\nconst account_switcher = connect(\n    ({ client, ui }) => ({\n        account_list          : client.account_list,\n        account_loginid       : client.loginid,\n        is_logged_in          : client.is_logged_in,\n        is_virtual            : client.is_virtual,\n        switchAccount         : client.switchAccount,\n        upgrade_info          : client.upgrade_info,\n        virtual_loginid       : client.virtual_account_loginid,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","export * from './account_switcher.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","export default from './denial_of_service.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePositionsDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_positions_drawer_on) {\n                        togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePositionsDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({\n    children, is_contract_mode,\n    is_positions_drawer_on,\n}) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-positions-drawer': is_positions_drawer_on,\n            'app-contents--contract-mode'        : is_contract_mode,\n        })}\n    >\n        {/* Calculate height of user screen and offset height of header and footer */}\n        <Scrollbars\n            autoHide\n            style={{ height: 'calc(100vh - 83px)' }}\n        >\n            {children}\n        </Scrollbars>\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_positions_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_language_dialog_visible,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_settings_dialog_on,\n    network_status,\n    togglePositionsDrawer,\n    toggleSettingsDialog,\n}) => (\n    <React.Fragment>\n        <div className='footer-links footer-links-left'>\n            {\n                is_logged_in &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                />\n            }\n        </div>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_language_visible={is_language_dialog_visible}\n                is_settings_visible={is_settings_dialog_on}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePositionsDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        network_status            : common.network_status,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { withRouter }  from 'react-router';\nimport { formatMoney } from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    DepositButton,\n    InstallPWAButton,\n    LoginButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    UpgradeButton }    from 'App/Components/Layout/Header';\nimport header_links    from 'App/Constants/header_links';\nimport { connect }     from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    is_virtual={is_virtual}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                                { !!(can_upgrade_to && is_virtual) &&\n                                <UpgradeButton />\n                                }\n                                { !(is_virtual) &&\n                                <DepositButton />\n                                }\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    can_upgrade_to           : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool,\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    is_virtual               : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func,\n    pwa_prompt_event         : PropTypes.object, // TODO: add click handler\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        can_upgrade_to           : client.can_upgrade_to,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        is_virtual               : client.is_virtual,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PositionsDrawer             from './Components/Elements/PositionsDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <React.Fragment>\n                <div className='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PositionsDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer className='footer'>\n                    <Footer />\n                </footer>\n            </React.Fragment>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className, classNamePath }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className={classNames(classNamePath, 'arrow-path')} d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='rgba(0, 0, 0, 0.8)' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3.613 8.5l3.26 3.668a.5.5 0 1 1-.747.664l-4-4.5a.5.5 0 0 1 0-.664l4-4.5a.5.5 0 0 1 .748.664L3.614 7.5H13.5a.5.5 0 1 1 0 1H3.613z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path fill='#000' fillOpacity='.8' fillRule='nonzero' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconClock = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <g fill='none' fillRule='nonzero' stroke='#5C5C5C'>\n            <circle cx='8' cy='8' r='7.5' />\n            <path strokeLinecap='round' strokeLinejoin='round' d='M8 3.5v5h3.5' />\n        </g>\n    </svg>\n);\n\nIconClock.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClock };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinimize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#000' fillOpacity='0.8' fillRule='nonzero' d='M0 7h16v2H0z' />\n    </svg>\n);\n\nIconMinimize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMinimize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames(className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconTooltip = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM8 6a.75.75 0 1 0 0-1.5A.75.75 0 0 0 8 6zm0 1a.5.5 0 0 0-.5.5v4a.5.5 0 1 0 1 0v-4A.5.5 0 0 0 8 7z' />\n    </svg>\n);\n\nIconTooltip.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTooltip };\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_calendar_today.jsx';\nexport * from './icon_calendar.jsx';\nexport * from './icon_chevron_double_left.jsx';\nexport * from './icon_chevron_double_right.jsx';\nexport * from './icon_chevron_left.jsx';\nexport * from './icon_chevron_right.jsx';\nexport * from './icon_clear.jsx';\nexport * from './icon_clock.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\nexport * from './icon_minimize.jsx';\nexport * from './icon_minus.jsx';\nexport * from './icon_plus.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport classNames        from 'classnames';\n\nconst IconPositions = ({ className }) => {\n    const IconType = (\n        <g fill='none' fillRule='evenodd'>\n            <path className='color1-fill color3-fill' fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2zM1 8.128V12.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V8.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 8.128zm0-1.144L4.29 8.81A1.5 1.5 0 0 0 5.018 9h5.964a1.5 1.5 0 0 0 .728-.189L15 6.984V3.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 8a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n        </g>\n    );\n\n    return (\n        <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n            {IconType}\n        </svg>\n    );\n};\n\nIconPositions.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPositions };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","export * from './icon_maximize.jsx';\nexport * from './icon_positions.jsx';\nexport * from './icon_settings.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","export * from './icon_logout.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='14' viewBox='0 0 16 14'>\n        <g fill='none' fillRule='evenodd'>\n            <path fill='#000' fillOpacity='0.16' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2z' />\n            <path fill='#FFF' fillRule='nonzero' d='M1 8.128l2.804 1.557A2.5 2.5 0 0 0 5.018 10h5.964a2.5 2.5 0 0 0 1.214-.315L15 8.128V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V8.128zm0-1.144V3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v3.484L11.71 8.81a1.5 1.5 0 0 1-.728.189H5.018a1.5 1.5 0 0 1-.728-.189L1 6.984zM6.5 8h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0 0 1z' />\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierDown = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M7.5 11.793V3.5a.5.5 0 0 1 1 0v8.293l2.646-2.647a.5.5 0 1 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 11.793z'\n        />\n    </svg>\n);\n\nIconBarrierDown.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierDown };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierUp = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M8.5 4.207V12.5a.5.5 0 1 1-1 0V4.207L4.854 6.854a.5.5 0 1 1-.708-.708l3.5-3.5a.5.5 0 0 1 .708 0l3.5 3.5a.5.5 0 1 1-.708.708L8.5 4.207z'\n        />\n    </svg>\n);\n\nIconBarrierUp.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierUp };\n","export * from './icon_barrier_up.jsx';\nexport * from './icon_barrier_down.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","export * from './icon_trade_categories.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n\nconst TradeCategories = ({ category }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>\n                            { localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }\n                        </p>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to the barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.') }</p>\n                        <p>{ localize('If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to either the Low barrier or the High barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period') }</p>\n                        <p>{ localize('If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.') }</p>\n                        <p>{ localize('If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).') }</p>\n                        <p>{ localize('If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.') }</p>\n                        <p>{ localize('If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Touches\", you win the payout if the market touches the barrier at any time during the contract period.') }</p>\n                        <p>{ localize('If you select \"Does Not Touch\", you win the payout if the market never touches the barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('Asian options settle by comparing the last tick with the average spot over the period.') }</p>\n                        <p>{ localize('If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.') }</p>\n                        <p>{ localize('If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.') }</p>\n                        <p>{ localize('If the last tick is equal to the average of the ticks, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <p>\n                        not found\n                    </p>\n                );\n                break;\n        }\n    }\n    return (\n        <div>\n            {TradeTypeTemplate}\n        </div>\n    );\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { TradeCategories };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path fill='#2A3052' d='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path fill='#2A3052' d='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path fill='#2A3052' d='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path fill='#2A3052' d='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export * from './icon_trade_types.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","import { localize } from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            <IconPortfolio className='portfolio-empty__icon' />\n            <span className='portfolio-empty__text'>{localize('No running contract')}</span>\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`${wrapperClassName || 'fullscreen-dialog__contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTooltip }                from 'Assets/Common/icon_tooltip.jsx';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='trade-type-info-icon' onClick={() => handleInfoClick(contract)}>\n                <IconTooltip />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    list           : MobxPropTypes.objectOrObservableObject,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\nimport TradeTypeInfoDialog   from '../TradeTypeInfo/trade_type_info_dialog.jsx';\nimport TradeTypeInfoItem     from '../TradeTypeInfo/trade_type_info_item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open     : false,\n            is_info_dialog_open: false,\n            item               : {},\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(navigationList[nextIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[0]);\n        }\n    };\n\n    handlePrevClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(navigationList[prevIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({ is_info_dialog_open: false, is_dialog_open: false });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    };\n\n    getNavigationList = () => {\n        const navigationList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && navigationList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return navigationList;\n    };\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.onWidgetClick}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                        handleInfoClick={this.handleInfoClick}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={this.props.is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={this.state.is_info_dialog_open}\n                    title={this.state.item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_mobile={this.props.is_mobile}\n                        item={this.state.item}\n                        navigationList={this.getNavigationList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='purchase-container__error-login-btn secondary orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-container__error-result'>\n        <span className='purchase-container__error-info'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='purchase-container__error-login-btn secondary orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p className='purchase-container__error-login-prompt'>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a className='purchase-container__error-login-link' href='javascript:;'><span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-container__error'>\n            <div className='purchase-container__error-close-btn' onClick={onClick}>\n                <IconClose className='purchase-container__error-close-btn-ic' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-container__error-result'>\n        <div>\n            <strong className='purchase-container__error-result-header'>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Buy Price')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Payout')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-container__lock'>\n        <div>\n            <IconLock className='purchase-container__lock-icon' />\n        </div>\n        <h4 className='purchase-container__lock-header'>{localize('Purchase Locked')}</h4>\n        <Button\n            className='purchase-container__lock-button flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='purchase-container__lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon_price_move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div\n                className={classNames({\n                    'trade-container__error': proposal_info.has_error,\n                })}\n            >\n                {proposal_info.message && <span className='trade-container__error-info'>{proposal_info.message}</span>}\n            </div>\n            :\n            <div className='trade-container__price'>\n                <div className='trade-container__price-info'>\n                    <div className='trade-container__price-info-basis'>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div><Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} /></div>\n                    <div className='trade-container__price-info-movement'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                </div>\n                <span>\n                    <Tooltip alignment='left' className='trade-container__price-tooltip' classNameIcon='trade-container__price-tooltip-i' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport TimePicker                     from 'App/Components/Form/time_picker.jsx';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/button_toggle_menu.jsx';\nimport InputField                     from 'App/Components/Form/input_field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport {\n    isTimeValid,\n    minDate,\n    setTime,\n    toMoment }                        from 'Utils/Date';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_min_max,\n    duration_units_list,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_time,\n    expiry_type,\n    is_nativepicker,\n    number_input_props,\n    onChange,\n    server_time,\n    sessions,\n    shared_input_props,\n    start_date,\n    start_time,\n    symbol,\n    market_close_times,\n    onChangeUiStore,\n    duration_t,\n}) => {\n    const moment_expiry      = toMoment(expiry_date || server_time);\n    let is_24_hours_contract = false;\n    let expiry_time_sessions = sessions;\n    let max_date_duration,\n        min_date_expiry;\n\n    if (expiry_type === 'endtime') {\n        const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n        const moment_contract_start_date_time =\n            setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm')));\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n\n        // When the contract start is forwarding or is not forwarding but the expiry date is as same as start date, the contract should be expired within 24 hours\n        is_24_hours_contract = (!!start_date || moment_expiry.isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n\n        if (is_24_hours_contract) {\n            const expiry_date_time         = setTime(moment_expiry.clone(), moment_contract_start_date_time.clone().add(5, 'minute').format('HH:mm'));\n            const expiry_date_market_close = setTime(expiry_date_time.clone(), market_close_times.slice(-1)[0]);\n            const is_expired_next_day      = expiry_date_time.diff(moment_contract_start_date_time, 'day') === 1;\n\n            expiry_time_sessions = [{\n                open : is_expired_next_day ? expiry_date_time.clone().startOf('day') : expiry_date_time.clone(),\n                // when the expiry_date is on the next day of the start_date, the session should be close 5 min before the start_time of the contract.\n                close: is_expired_next_day ? minDate(expiry_date_time.clone().subtract(10, 'minute'), expiry_date_market_close) : expiry_date_market_close.clone(),\n            }];\n\n            min_date_expiry = moment_contract_start_date_time.clone().startOf('day');\n            max_date_duration = moment_contract_start_date_time.clone().add(\n                start_date ? 24 * 3600 : (max_daily_duration), 'second');\n        } else {\n            min_date_expiry = moment_contract_start_date_time.clone().startOf('day');\n            max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n\n            if (!has_intraday_duration_unit) {\n                min_date_expiry.add(1, 'day');\n            }\n        }\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={is_nativepicker}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit !== 't' &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <DatePicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_nativepicker={is_nativepicker}\n                            alignment='left'\n                            disable_year_selector\n                            disable_trading_events\n                            underlying={symbol}\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                placeholder='12:00'\n                                sessions={expiry_time_sessions}\n                                start_date={moment_expiry.unix()}\n                                value={expiry_time || min_date_expiry.format('HH:mm')}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                            />\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_min_max      : PropTypes.object,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_time        : PropTypes.string,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    is_nativepicker    : PropTypes.bool,\n    market_close_times : PropTypes.array,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    sessions           : MobxPropTypes.arrayOrObservableArray,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.string,\n    symbol    : PropTypes.string,\n};\n\nexport default AdvancedDuration;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from '_common/localize';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration_toggle.jsx';\nimport AdvancedDuration               from './advanced_duration.jsx';\nimport SimpleDuration                 from './simple_duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    hasDurationUnit    ,\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    is_advanced_duration,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n    market_close_times,\n    simple_duration_unit,\n    duration_t,\n    symbol,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    let max_value, min_value;\n    if (duration_min_max[contract_expiry_type]) {\n        max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n    }\n\n    const props = {\n        shared_input: {\n            max_value,\n            min_value,\n            onChange: changeDurationValue,\n        },\n        number_input: {\n            type            : 'number',\n            is_nativepicker,\n            is_incrementable: true,\n            error_messages  : validation_errors.duration || [],\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    ticks={10}\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            contract_expiry_type={contract_expiry_type}\n                            duration_min_max={duration_min_max}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_time={expiry_time}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            is_nativepicker={is_nativepicker}\n                            market_close_times={market_close_times}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            server_time={server_time}\n                            sessions={sessions}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                            start_time={start_time}\n                            onChangeUiStore={onChangeUiStore}\n                            duration_t={duration_t}\n                            symbol={symbol}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                            onChangeUiStore={onChangeUiStore}\n                            duration_t={duration_t}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_t      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    is_nativepicker     : PropTypes.bool,\n    market_close_times  : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IconArrow }       from 'Assets/Common';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <IconArrow className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport Duration                 from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : new_duration_value,\n        });\n    }\n\n    componentDidMount() {\n        const current_unit = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration = this.props.getDurationFromUnit(this.props.duration_unit);\n\n        if (this.props.duration_unit !== current_unit) {\n            this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: this.props.duration_unit });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${current_unit}`, value: this.props.duration });\n        }\n    }\n\n    componentWillReact() {\n        const simple_is_missing_duration_unit = !this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4;\n        const current_duration_unit           = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration                = this.props.getDurationFromUnit(this.props.duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_not_type_duration     = !this.props.is_advanced_duration && this.props.expiry_type !== 'duration';\n        const advanced_has_wrong_expiry       = this.props.is_advanced_duration\n            && this.props.expiry_type !== this.props.advanced_expiry_type && this.props.duration_units_list.length > 1;\n\n        // intercept changes to current contracts duration_units_list - if they are missing change duration_unit and value in trade_store and ui_store\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n            return;\n        }\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (advanced_has_wrong_expiry) {\n            this.props.onChange({ target: { name: 'expiry_type', value: this.props.advanced_expiry_type } });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${this.props.duration_unit}`, value: this.props.duration });\n        }\n    }\n\n    render() {\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    is_nativepicker     : PropTypes.bool,\n    market_close_times  : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(DurationWrapper);\n","export default from './duration_wrapper.jsx';\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/button_toggle_menu.jsx';\nimport InputField                     from 'App/Components/Form/input_field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    getDurationFromUnit,\n    number_input_props,\n    duration_units_list,\n    shared_input_props,\n    simple_duration_unit,\n    duration_t,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit !== 't' &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n};\n\nexport default SimpleDuration;\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/input_field.jsx';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                classNameInput='trade-container__input'\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip icon='info' message={localize('Win payout if exit spot is also equal to entry spot.')} alignment='left' />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked       : PropTypes.number,\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\nimport AllowEquals               from './allow_equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames({ 'three-columns': !is_single_currency });\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <div className={amount_container_class}>\n                <Dropdown\n                    is_alignment_left\n                    is_nativepicker={is_nativepicker}\n                    list={basis_list}\n                    name='basis'\n                    value={basis}\n                    onChange={onChange}\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        is_alignment_left\n                        is_nativepicker={is_nativepicker}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                }\n                <InputField\n                    classNameInput='trade-container__input'\n                    classNamePrefix='trade-container__currency'\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_autocomplete_disabled\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals is_allow_equal={is_allow_equal} onChange={onChange} checked={is_equal_checked} />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_allow_equal    : PropTypes.bool,\n    is_equal_checked  : PropTypes.number,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames     from 'classnames';\nimport { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    IconBarrierUp,\n    IconBarrierDown } from 'Assets/Trading/Barriers';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport InputField     from 'App/Components/Form/input_field.jsx';\nimport { localize }   from '_common/localize';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n    \n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <IconBarrierUp className='trade-container__barriers--up' />\n                        <IconBarrierDown className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number_selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames='trade-type-info-popup'\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-popup'>\n                <div className='trade-type-info'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { Scrollbars }       from 'tt-react-custom-scrollbars';\nimport { IconBack }         from 'Assets/Common/icon_back.jsx';\nimport { IconChevronLeft }  from 'Assets/Common/icon_chevron_left.jsx';\nimport { IconChevronRight } from 'Assets/Common/icon_chevron_right.jsx';\nimport { TradeCategories }  from 'Assets/Trading/Categories/trade_categories.jsx';\nimport Button               from 'App/Components/Form/button.jsx';\nimport { localize }         from '_common/localize';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_mobile,\n    item,\n    navigationList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='info-header'>\n            <span onClick={() => onBackButtonClick()}>\n                <IconBack />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='info-gif'>\n            gif explanation\n        </div>\n        <div className='info-content'>\n            <Scrollbars\n                autoHide\n                style={{ height: '215px' }}\n            >\n                <TradeCategories category={item.value} />\n            </Scrollbars>\n        </div>\n        <div className='info-choose'>\n            <Button text={localize('Choose')} onClick={() => onSubmitButtonClick(item)} />\n        </div>\n        <div className='info-navigation'>\n            <div className='info-navigation__icon' onClick={() => handlePrevClick(navigationList)} >\n                <IconChevronLeft />\n            </div>\n            <div className='info-navigation__list'>\n                {\n                    navigationList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className={`circle-button ${contract.value === item.value ? 'active' : ''}`}\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='info-navigation__icon' onClick={() => handleNextClick(navigationList)} >\n                <IconChevronRight />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    navigationList       : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-container'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui_loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary btn-purchase'\n                has_effect\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} />\n                            <span className='btn-purchase__trade-type-text'>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} className='btn-purchase__currency' />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader classNameBlock='purchase-container__loading' />\n                        }\n                        <ContractInfo\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                        this.props.ui_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules, ui }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n        ui_store       : ui,\n    })\n)(TradeParams);\n","export default from './Containers/trade.jsx';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance, true);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nconst store_name = 'smart_chart_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties, store_name });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n\n    const obj_market_close_times = { market_close_times: await ContractType.getTradingTimes(expiry_date, symbol) };\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_close_times,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import ContractType from '../Helpers/contract_type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\n// import StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    // { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start_date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                        symbol.times.close;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            store_name,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = (contract_type_list) => {\n            if (!contract_type_list) return false;\n\n            return getPropertyValue(contract_type_list, 'Up/Down')\n                .some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n            \n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual(contract_type_list) ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (!(/^(rise_fall|rise_fall_equal)$/.test(this.contract_type))) {\n            this.is_allow_equal = false;\n            this.is_equal_checked = 0;\n        }\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual(this.contract_types_list)) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid  = LocalStore.get('active_loginid');\n        this.accounts = LocalStore.getObject(storage_key);\n        this.switched = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('theme--dark'));\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const is_number      = typeof value === 'number';\n    // need to explicitly convert date string to a JS Date object then pass that into Moment\n    // to get rid of the warning: Deprecation warning: moment construction falls back to js Date\n    const formatted_date = moment(new Date(value)).format('YYYY-MM-DD');\n    return is_number ? epochToMoment(value) : moment.utc(formatted_date);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'YYYY-MM-DD').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","export * from './date_time';\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","export * from './language';\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n"],"sourceRoot":""}