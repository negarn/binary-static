{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-body.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/helper.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar-years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer-toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error-component.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full-page-modal.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/empty-notification.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm-element.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PositionsDrawer/positions_drawer_card.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings-dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs-wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close-button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login-prompt.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/switch-button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ui-loader.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/helpers.js","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/items.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/native-select.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/index.js","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/range-slider.jsx","webpack:///./src/javascript/app_2/App/Components/Form/RangeSlider/tick-steps.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/TimePicker/time-picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/button-toggle-menu.jsx","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/App/Components/Form/input-field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/number-selector.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network-status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-positions.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account-info.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/deposit-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install-pwa-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login-button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu-links.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle-notifications-drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/upgrade-button.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary-routes.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button-link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route-with-sub-routes.jsx","webpack:///./src/javascript/app_2/App/Constants/app-config.js","webpack:///./src/javascript/app_2/App/Constants/header-links.js","webpack:///./src/javascript/app_2/App/Constants/routes-config.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial-of-service.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu-drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app-contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings-language.jsx","webpack:///./src/javascript/app_2/App/Containers/remaining-time.jsx","webpack:///./src/javascript/app_2/App/Containers/server-time.jsx","webpack:///./src/javascript/app_2/App/Containers/toast-message.jsx","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar-today.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-calendar.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-double-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-left.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-chevron-right.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clear.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-clock.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-country-flag.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-blue.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-info-outline.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minimize.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-minus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-plus.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-question.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-red-dot.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-success.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon-warning.jsx","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/Assets/Contract/icon-entry-spot.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon-flag.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon-tick.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-positions.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon-settings.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/icon_accounts_currency.jsx","webpack:///./src/javascript/app_2/Assets/Header/AccountsCurrency/index.js","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon-logout.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon-trade.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-down.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/icon-barrier-up.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Barriers/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon-trade-categories.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Categories/trade-categories.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon-trade-types.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Assets/Trading/icon-lock.jsx","webpack:///./src/javascript/app_2/Assets/Trading/icon-price-move.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Constants/date-time.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details-header.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit-display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-expired.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info-box-general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-button.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell-info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract-error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract-sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info-box.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract-type-cell.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty-portfolio-message.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker-spot.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full-screen-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/DatePicker/trading-date-picker.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error-login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message-box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase-result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase-lock.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TimePicker/trading-time-picker.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/advanced-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-toggle.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration-wrapper.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/Duration/simple-duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/allow-equals.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeTypeInfo/trade-type-info-item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form-layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen-small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract-type.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade-params.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Services/network-monitor.js","webpack:///./src/javascript/app_2/Services/outdated-browser.js","webpack:///./src/javascript/app_2/Services/socket-general.js","webpack:///./src/javascript/app_2/Services/ws-methods.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart-markers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-barrier-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart-marker-store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart-chart-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format-response.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement-store.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract-type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query-string.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation-rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract-type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start-date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade-store.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/base-store.js","webpack:///./src/javascript/app_2/Stores/client-store.js","webpack:///./src/javascript/app_2/Stores/common-store.js","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/ui-store.js","webpack:///./src/javascript/app_2/Utils/Date/date-time.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/Utils/Language/fill-template.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Utils/URL/base-name.js","webpack:///./src/javascript/app_2/Utils/URL/url-helper.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative-validation-rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register-service-worker.js","webpack:///./src/javascript/app_2/index.js","webpack:///./src/javascript/config.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_ref","styles","props","React","createElement","xmlns","width","height","viewBox","fill","d","CalendarBody","calendar_body","date","month","year","decade","calendar_view","propTypes","PropTypes","string","CalendarButton","children","className","is_hidden","label","onClick","oneOfType","array","object","bool","func","CalendarFooter","footer","has_today_btn","CalendarHeader","calendar_date","disable_month_selector","disable_year_selector","isPeriodDisabled","navigateTo","switchView","is_date_view","is_month_view","is_year_view","is_decade_view","moment_date","num_of_years","century","clone","end_of_decade","split","is_prev_month_disabled","is_prev_year_disabled","is_next_month_disabled","is_next_year_disabled","is_select_year_disabled","undefined","month_headers","format","Calendar","date_format","start_date","value","current_date","state","selected_date","holidays","weekends","updateSelected","setToday","PureComponent","view","setState","new_date","onChangeCalendarMonth","start_of_month","updateSelectedDate","e","max_date","min_date","onSelect","dataset","startOf","is_before","isBefore","is_after","isAfter","formatted_date","type","stopPropagation","view_map","resetCalendar","default_date","now","unit","start_of_period","end_of_period","endOf","defaultProps","add","arrayOf","shape","dates","descrip","number","getDecade","getCentury","default","getDays","day_offset","days","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","moment_selected","end_of_prev_month","day","push","idx","replace","start_of_next_month","moment_start_date","map","is_active","isSame","is_today","events","filter","event","find","has_events","is_closes_early","match","message","is_before_min_or_after_max_date","is_disabled","some","is_other_month","CalendarDays","week_headers_abbr","item","CommonPropTypes","CalendarDecades","start_year","decades","min_year","start_of_decade","is_other_century","CalendarMonths","moment_selected_date","CalendarYears","years","is_other_decade","DrawerHeader","alignment","closeBtn","drawer_header_class","DrawerItem","drawerItemClicked","hideDrawers","collapseItems","link_to","text","icon","custom_action","Component","href","node","drawer_item_component","ui","DrawerItems","is_collapsed","items","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","to_toggle","toggle","Drawer","is_this_drawer_on","setRef","ref","hide","scrollToggle","handleClickOutside","contains","is_open","document","body","classList","drawer_bg_class","drawer_class","is_main_drawer_on","is_notifications_drawer_on","icon_class","icon_link","drawer_component","ToggleDrawer","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","ErrorBoundary","componentDidCatch","error","info","hasError","render","ErrorComponent","msg","str","replacers","FullPageModal","cancel_button_text","confirm_button_text","onConfirm","onCancel","is_visible","title","EmptyNotification","Notifications","list","PopConfirmElement","cancel_text","confirm_text","onClose","wrapperRef","popconfirm_class","PopConfirm","setWrapperRef","wrapper_ref","handleClose","handleOpen","addEventListener","removeEventListener","popconfirm_element","Children","cloneElement","child","PositionsDrawer","onMount","onUnmount","active_positions","currency","is_empty","is_positions_drawer_on","toggleDrawer","body_content","portfolio_position","id","MobxPropTypes","arrayOrObservableArray","any","is_loading","modules","client","portfolio","togglePositionsDrawer","PositionsDrawerCard","expiry_time","indicative","status","underlying","LanguageDialog","is_settings_on","language_dialog_class","toLowerCase","SettingsControl","name","style","SettingsDialog","footer_settings_btn","toggleDialog","settings_dialog_class","settings_dialog_container_class","is_language_dialog_visible","settings_content","header","content","GeneralSettings","ChartSettings","TabsItem","active","elements","onChange","tab_class","el","TabsWrapper","getSizes","rootBounds","root","getBoundingClientRect","sizes","els","forEach","bounds","left","right","getUnderlineStyle","size","transition","window","Tabs","active_tab_index","setActiveTab","index","TabContents","tab_container_class","tab_header_class","icon_name","classNameHeader","CloseButton","isRequired","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","Toast","data","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","setTimeout","delay","position","toUpperCase","Localize","localized","test","LoginPrompt","IconComponent","onLogin","onSignup","Money","amount","has_sign","is_formatted","sign","abs_value","Math","abs","final_amount","SwitchButton","toggled","toggle_style","Tooltip","show_tooltip_balloon_icon","onMouseEnter","onMouseLeave","classNameIcon","UILoader","classNameBlock","loading_class","block_class","DatePicker","date_value","is_datepicker_visible","is_clear_btn_visible","handleVisibility","onClickOutside","mainNode","mode","updateDatePickerValue","is_clearable","onSelectCalendar","onChangeInput","formatted_value","clearDatePickerInput","updateStore","calendar","new_value","new_date_value","renderInputField","is_read_only","error_messages","placeholder","initial_value","disable_trading_events","trading_events","is_nativepicker","nativeEvent","iosClearDefault","defaultValue","enter","enterDone","exit","bind","getTradingEvents","WS","getTradingTimes","trading_times_response","trading_times","markets","submarkets","j","symbols","k","symbol","echo_req","Dropdown","list_ref","createRef","curr_index","is_list_visible","handleSelect","onKeyPressed","is_single_option","keyCode","preventDefault","handleToggle","prev_index","next_index","is_alignment_left","char","firstChars","x","left_alignment_style","transform","list_width","setListWidth","current","offsetWidth","display","getDisplayText","findInArray","arr_list","getItemFromValue","findIndex","getValueFromIndex","result","getPrevIndex","getNextIndex","Items","highlightedIdx","NativeSelect","Array","isArray","RangeSlider","ticks","max_value","min_value","handleChange","handleClick","first_tick","TickSteps","arr_ticks","parseInt","Dialog","preClass","start_time","end_time","start_time_moment","end_time_moment","hour","minute","seconds","milliseconds","to_compare_moment","hours","a","slice","minutes","selectOption","current_value","prev_value","is_enabled","prev_hour","prev_minute","h","isBetween","mm","TimePicker","toggleDropDown","arg","saveRef","nodeName","target_element","prefix_class","validation_errors","padding","ButtonToggleMenu","buttons_arr","changeValue","selected_value","menu","val","Button","classNameSpan","has_effect","tabIndex","wrapperClassName","classes","effect","button","wrapper","Fieldset","is_center","fieldset_header_class","fieldset_info_class","InputField","checked","classNameInput","classNamePrefix","data_tip","data_value","fractional_digits","helper","is_autocomplete_disabled","is_float","is_incrementable","is_signed","is_unit_at_right","max_length","prefix","required","has_error","has_valid_length","max_is_disabled","min_is_disabled","trim","signed_regex","is_number","RegExp","is_not_completed_number","has_zero_at_end","is_scientific_notation","incrementValue","increment_value","decrementValue","decrement_value","display_value","input","input_increment","NumberSelector","arr_arr_numbers","selected_number","getAttribute","arr_numbers","NetworkStatus","tooltip","class","ToggleFullScreen","onFullScreen","is_full_screen","fullscreen_map","element","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","TogglePositions","toggle_positions_class","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","toggle_settings_class","AccountInfo","balance","loginid","is_dialog_on","is_upgrade_enabled","is_virtual","onClickUpgrade","account_type","DepositButton","InstallPWAButton","prompt_event","showPrompt","prompt","userChoice","then","choice_result","outcome","LoginButton","redirectToLogin","MenuLinks","ToggleMenuDrawer","ToggleNotificationsDrawer","UpgradeButton","BinaryLink","to","path","route","Error","exact","BinaryRoutes","ButtonLink","normalizePath","findRouteByPath","routes_config","route_info","routes","isRouteVisible","is_logged_in","is_authenticated","getPath","route_path","params","reduce","p","getContractPath","contract_id","contract","RouteWithSubRoutes","renderFactory","component","Redirect","location","pathname","icon_component","default_title","GTM","pushDataLayer","website_name","header_links","trade","statement","ContractDetails","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","initRoutesConfig","IconPortfolio","IconStatement","Trade","settings","personal","financial","account_password","cashier_password","exclusion","limits","history","token","apps","error404","routesConfig","route_default","getRoutesConfig","AccountSwitcher","accounts_toggle_btn","handleLogout","account_loginid","switchAccount","main_account_title","account_list","accounts","account","doSwitch","upgrade_info","can_open_multi","virtual_loginid","account_switcher","virtual_account_loginid","URL","urlFor","DenialOfServiceModal","denial_of_service","is_client_allowed_to_visit","MenuDrawer","is_dark_mode","is_mobile","is_purchase_locked","toggleDarkMode","togglePurchaseLock","is_purchase_confirmed","togglePurchaseConfirmation","is_dark_mode_on","is_purchase_confirm_on","is_purchase_lock_on","AppContents","is_contract_mode","ProptTypes","smart_chart","Footer","is_settings_dialog_on","network_status","toggleSettingsDialog","common","is_language_dialog_on","Header","can_upgrade","can_upgrade_to","hideInstallButton","is_acc_switcher_on","is_install_button_visible","pwa_prompt_event","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","console","log","is_accounts_switcher_on","Routes","objectOrObservableObject","LanguageSettings","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","is_chart_layout_default","is_chart_asset_info_visible","is_chart_countdown_visible","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","showLanguage","current_language","showLanguageDialog","hideLanguageDialog","RemainingTime","unix","remaining_time","server_time","ServerTime","gmt_time","ToastMessage","toast_messages","toast","enforceActions","initApp","Client","init","root_store","RootStore","NetworkMonitor","OutdatedBrowser","app","getElementById","App","IconArrow","classNamePath","IconBack","IconCalendarToday","IconCalendar","IconChevronDoubleLeft","IconChevronDoubleRight","IconChevronLeft","IconChevronRight","IconClear","IconClock","IconClose","IconCountryFlag","IconCountry","IconError","IconExclamation","IconInfoBlue","IconInfoOutline","IconMinimize","IconMinus","disabled","IconPlus","IconQuestion","IconRedDot","IconSuccess","IconWarning","IconEntrySpot","color","IconFlag","IconTick","circle_color","tick_color","IconMaximize","IconPositions","IconType","IconSettings","IconAccountsCurrency","IconCurrency","IconLogout","IconBell","IconCashier","IconHamburger","IconTrade","IconBarrierDown","IconBarrierUp","IconTradeCategory","category","IconCategory","TradeCategories","TradeTypeTemplate","IconTradeType","IconLock","IconPriceMove","getContractTypeDisplay","ASIANU","ASIAND","CALL","CALLE","PUT","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYMISS","EXPIRYRANGE","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","week_headers","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","getDaysOfTheWeek","days_of_the_week","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","DetailsContents","buy_id","details_expiry","details_info","longcode","DetailsGroup","DetailsHeader","header_config","title_purchased","purchased","title_result","icon_purchased","icon_result","oneOf","DigitDisplay","digit_info","digit_number","digit_class","is_win","last","is_last","digit","InfoBoxDigit","InfoBoxExpired","InfoBoxGeneral","contract_info","digits_info","is_ended","digits_array","sort","spot_time","count","tick_count","latest_digit","display_array","last_item","has_flag","has_percentage","sell_info","profit","profit_percentage","percentage_text","transaction_id","buy_price","date_expiry","indicative_price","is_started","onClickSell","SellButton","is_sell_requested","is_valid_to_sell","sell_message","validation_error","SellInfo","sell_price","ContractError","onClickClose","transaction_ids","display_status","buy","onClickNewTrade","error_message","ContractSell","InfoBox","is_trade_page","removeError","is_digit","contract_type","box_class","Contents","removeSellError","ContractTypeCell","EmptyPortfolioMessage","MarkerLine","line_style","MarkerSpot","align","spot_value","FullScreenDialog","visible","checkVisibility","remove","scrollToElement","parent","viewport_offset","hidden","top","clientHeight","innerHeight","new_el_top","scrollTop","tagName","scrollToTarget","currentTarget","MobileWidget","open","handleDialogClose","handleWidgetClick","ContractTypeDialog","ContractTypeItem","contracts","handleInfoClick","ContractTypeList","includes","ContractTypeWidget","onSubmitButtonClick","handleInfoVisibility","handleNavigationClick","handleNextClick","navigationList","navigationLength","currentIndex","list_item","nextIndex","handlePrevClick","prevIndex","is_dialog_open","is_info_dialog_open","onWidgetClick","onBackButtonClick","getNavigationList","TradingDatePicker","duration_min_max","duration_units_list","expiry_date","expiry_type","is_24_hours_contract","max_date_duration","min_date_expiry","moment_contract_start_date_time","max_daily_duration","daily","max","duration","ErrorBalance","ErrorGeneral","ErrorLogin","MessageBox","purchase_info","error_code","PurchaseResult","payout","PurchaseLock","ContractInfo","has_increased","proposal_info","obj_contract_basis","TradingTimePicker","market_close_times","moment_expiry","expiry_date_time","expiry_date_market_close","is_expired_next_day","diff","expiry_time_sessions","close","subtract","AdvancedDuration","advanced_duration_unit","advanced_expiry_type","duration_t","changeDurationUnit","getDurationFromUnit","expiry_list","number_input_props","onChangeUiStore","shared_input_props","has_intraday_duration_unit","endtime_container_class","changeExpiry","DurationToggle","icon_className","DurationWrapper","hasDurationUnit","duration_unit","duration_list","is_advanced_duration","du","new_duration_unit","new_duration_value","onChangeMultiple","current_unit","simple_duration_unit","current_duration","simple_is_missing_duration_unit","current_duration_unit","has_missing_duration_unit","simple_is_not_type_duration","advanced_has_wrong_expiry","setDurationUnit","contract_expiry_type","duration_d","duration_h","duration_m","duration_s","is_minimized","sessions","Duration","has_end_time","expiry","pop","duration_unit_text","o","duration_value","changeDurationValue","duration_name","onToggleDurationType","new_trade_store_values","min","shared_input","number_input","has_toggle","SimpleDuration","filterMinutesAndTicks","arr","filtered_arr","has_label","AllowEquals","is_allow_equal","Amount","basis","basis_list","currencies_list","is_equal_checked","is_single_currency","amount_container_class","observableObject","Barrier","barrier_1","barrier_2","barrier_count","barrier_title","input_class","LastDigit","last_digit","arr_five","TradeTypeInfoDialog","TradeTypeInfoItem","FormLayout","is_contract_visible","is_trade_enabled","ScreenLarge","ScreenSmall","Contract","contract_types_list","Purchase","is_purchase_enabled","onClickPurchase","onHoverPurchase","resetPurchase","trade_types","purchase_button","stake","returns","is_purchase_error","onPurchase","requestProposal","Test","setVisibility","stateVisibility","container","fontSize","lineHeight","zIndex","background","marginTop","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","v","JSON","stringify","TradeParams","component_name","form_components","isVisible","trade_store","client_store","ui_store","renderCards","SmartChart","lazy","form_wrapper_class","chart_id","onSymbolChange","chart_type","granularity","updateChartType","updateGranularity","BinarySocketGeneral","requestLogout","logout","doLogout","response","clearAllAccounts","set","SocketCache","clear","reload","common_store","store","NetworkMonitorBase","is_online","is_network_online","src","querySelector","$buoop","vs","f","s","c","api","url","noclose","reminder","onshow","nomessage","insecure","script","setAttribute","appendChild","showError","rel","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","get","onMessage","handleError","msg_type","is_active_tab","sessionStorage","getItem","removeItem","State","authorize","responseAuthorize","subscribeBalance","getSettings","getAccountStatus","payoutCurrencies","mt5LoginList","setResidence","country","residence","getSelfExclusion","BinarySocket","sendBuffered","accepted_bch","get_settings","country_code","setEmail","email","responsePayoutCurrencies","payout_currencies","pushTransactionData","bom_ui","landingCompany","setBalance","wait","setError","is_available","website_status","site_status","availability","activeSymbols","send","active_symbols","proposal_id","price","contractsFor","contracts_for","get_account_status","get_self_exclusion","landing_company","mt5_login_list","oauthApps","oauth_apps","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","Promise","resolve","limit","offset","date_boundaries","description","forget","cb","match_values","SubscriptionManager","forgetAll","is_forced","subscribe","subscribeProposal","req","should_forget_first","subscribeProposalOpenContract","subscribeTicks","subscribeTicksHistory","subscribeTransaction","transaction","getHeaderConfig","won","lost","createChartBarrier","SmartChartStore","removeBarriers","barrier","high_barrier","low_barrier","createBarriers","BARRIER_LINE_STYLES","SOLID","not_draggable","updateBarrierShade","createChartMarkers","ContractStore","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerEndTime","LINE_PURCHASE","createMarkerPurchaseTime","LINE_START","createMarkerStartTime","SPOT_ENTRY","createMarkerSpotEntry","SPOT_EXIT","createMarkerSpotExit","createMarkerConfig","purchase_time","date_start","entry_tick_time","is_sold_before_start","entry_tick","end_spot_time","end_spot","y","content_config","detailsProps","details_props","initDetailsProps","entry_spot","purchase_price","exit_spot","exit_spot_time","getDetailsInfo","sell_time","txt_start_time","txt_entry_spot","getDetailsExpiry","is_user_sold","isDigitContract","getDigitInfo","entry","createDigitInfo","current_spot_time","exit_time","exit_tick_time","is_after_expiry","current_spot","spot","isWin","win_checker","getChartConfig","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","m","getDisplayStatus","isEnded","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","getFinalPrice","bid_price","getIndicativePrice","is_expired","is_settleable","isSoldBeforeStart","isStarted","is_forward_starting","isUserSold","isValidToSell","action","bound","chart_config","onSwitchAccount","accountSwitcherListener","setContractMode","updateProposal","disposeSwitchAccount","forgetProposalOpenContract","removeMarkers","handleDigits","handleSell","proposal_response","sold_for","BaseStore","observable","computed","formatPortfolioPosition","portfolio_pos","purchase","parseFloat","reference","details","PortfolioStore","pos","pos1","pos2","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","prev_indicative","new_indicative","display_name","unshift","splice","initializePortfolio","clearTable","server_epoch","portfolioHandler","transactionHandler","CONTRACT_SHADES","DEFAULT_SHADES","BARRIER_COLORS","GREEN","RED","DASHED","DOTTED","tick_chart_types","MARKER_X_POSITIONER","EPOCH","NONE","MARKER_Y_POSITIONER","VALUE","MARKER_CONTENT_TYPES","LINE","ContentComponent","xPositioner","yPositioner","SPOT","isBarrierSupported","barriersToString","is_relative","barriers_list","barriersObjectToArray","barriers","ChartBarrierStore","onChartBarrierChange","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","should_display","updateBarriers","ChartMarkerStore","store_name","local_storage_properties","wsSubscribe","callback","wsForget","wsSendRequest","time","timePromise","is_title_enabled","main","config","assetInformation","countdown","lang","theme","main_barrier","formatStatementTransaction","moment_obj","transaction_time","date_str","time_str","balance_after","should_exclude_currency","action_type","refid","isNaN","desc","app_id","batch_size","StatementStore","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","fetchNextBatch","scrollHeight","left_to_scroll","clearDateFilter","onChangeContractTypeList","ContractType","getContractType","onChangeContractType","getContractValues","onChangeExpiry","obj_barriers","getBarriers","processPurchase","onChangeStartDate","obj_contract_start_type","getStartType","contract_start_type","obj_sessions","getSessions","obj_start_time","getStartTime","obj_duration_units_list","getDurationUnitsList","obj_duration_unit","getDurationUnit","obj_expiry_type","getExpiryType","obj_expiry_date","getExpiryDate","obj_market_close_times","obj_expiry_time","getExpiryTime","obj_duration_min_max","getDurationMinMax","onChangeSymbolAsync","buildContractTypesConfig","getLocalizedBasis","multiplier","getContractTypesConfig","rise_fall","components","rise_fall_equal","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","allowed_query_string_variables","getNonProposalQueryStringVariables","non_proposal_query_string_variables","proposal_properties_alternative_names","barrier2","removable_proposal_properties","getValidationRules","rules","condition","options","inputs","trigger","start_moment","start_moment_clone","buildBarriersConfig","obj_barrier","field","setChartBarrier","available_contract_types","available_categories","contract_types","contract_categories","r","available","sub_cats","has_spot","start_type","durations","buildTradeTypesConfig","forward_starting_dates","contract_display","getArrayDefaultValue","arr_new_values","getComponents","obj_basis","getBasis","obj_trade_types","getTradeTypes","obj_start_dates","getStartDates","obj_start_type","obj_duration_units_min_max","l","ct","c_type","duration_units","arr_units","getFullContractTypes","Number","current_start_date","start_dates_list","option","getValidTime","compare_moment","buildMoment","times","proper_expiry_date","moment_start","is_invalid","isSameOrBefore","market_close_time","end_moment","expiry_sessions","is_end_of_day","is_end_of_session","barrier_values","toString","arr_basis","localized_basis","cur","bas","getContractCategories","buildCurrenciesList","fiat","crypto","getDefaultCurrency","supported_currencies","values","b","default_currency","getDurationMaps","t","order","to_second","buildDurationConfig","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","u","from_unit","to_unit","duration_string","duration_is_day","expiry_is_after_today","hasIntradayDurationUnit","convertDurationLimit","isInteger","floor","StartDate","processTradeParams","new_state","snapshot","getSnapshot","functions","getMethodsList","extendOrReplace","ContractTypeHelper","new_values","to_replace","getProposalInfo","obj_prev_contract_basis","ask_price","contract_basis","is_stake","toFixed","createProposalRequests","requests","new_req","createProposalRequestForContract","current_req","proposal_requests","type_of_contract","obj_expiry","getProposalParametersName","proper_param_name","alternative_name","buildForwardStartingConfig","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","isBeforeDate","should_only_check_hour","now_moment","second","isSessionAvailable","session","pickDefaultSymbol","symbol_info","submarket","Symbol","TradeStore","URLHelper","pruneQueryString","session_storage_properties","validation_rules","debouncedProposal","defineProperty","enumerable","writable","changeDurationValidationRules","changeAllowEquals","query_string_values","updateQueryString","is_invalid_symbol","addToastMessage","setQueryParam","processNewValuesAsync","selectCurrency","is_over","contract_data","pushPurchaseData","is_trade_component_mounted","obj_new_values","is_changed_by_user","is_barrier_changed","is_query_string_applied","validateAllProperties","proper_proposal_params_for_query_string","onProposalResponse","prev_proposal_info","query_params","param","duration_options","validateProperty","hasCallPutEqual","contract_type_list","hasDurationForCallPutEqual","contract_list","contract_duration_list","check_callput_equal_duration","refresh","prepareTradeStore","ModulesStore","switchAccountDisposer","switch_account_listener","has_local_or_session_storage","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","localStorage","setItem","local_storage_snapshot","parse","session_storage_snapshot","propertyName","messages","addRule","property","change","newValue","validator","Validator","isPassed","setValidationErrorMessages","errors","listener","switch_broadcast","switchEndSignal","freeze","storage_key","ClientStore","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","landing_company_shortcode","canUpgrade","landing_companies","session_start","valueOf","landing_company_name","updateAccountList","getBasicUpgradeInfo","excluded_until","param_to_set","value_to_set","switched","getObject","registerReactions","getAccount","all_loginids","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","valid_login_ids_regex","every","acc","CommonStore","is_socket_opened","moment","utc","currentLanguage","SPECIAL_REACT_KEYS","MobxProvider","stores","baseStores","context","mobxStores","Provider","childContextTypes","connect_global_store","mapper","connect","StoreClass","observed","StoredComponent","wrappedDisplayName","displayName","constructor","UIStore","handleResize","screen_width","innerWidth","toast_message","epochToMoment","epoch","toMoment","isValid","isUTC","Date","setTime","convertToUnix","toGMTFormat","formatDate","daysFromTodayTo","getDiffDuration","formatDuration","asDays","formatted_str","isTimeValid","isHourValid","isMinuteValid","isDateValid","addDays","addMonths","num_of_months","addYears","subDays","subMonths","subYears","minDate","date_1","date_2","getStartOfMonth","setStorageEvents","evt","is_logging_in","convertObjectToReactElement","other_props","fillTemplate","template","open_tag_id","tag","tag_id","before","pair_code","isValidElement","getAllowedLanguages","exclude_languages","language_list","EN","getURL","getComponentProperties","getOwnPropertyNames","prop","getPropFromStores","getBaseName","regex_string","join","basename","exec","query_string","search","URLSearchParams","url_object","param_object","delete","append","replaceState","decodeURIComponent","set_query_string","getQueryParams","validRequired","String","validEmail","validPassword","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","validTaxID","validBarrier","validCompare","$","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","format_money","isMoreThanMax","getPreBuildDVRs","initPreBuildDVRs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","pre_build_dvrs","getPasswordLengthConfig","Errors","attribute","has","error_count","rule","name1","name2","ruleObject","getRuleObject","is_valid","addFailure","check","is_rule_string","rule_object","barrier1","positions_drawer","purchase_confirm","chart","toolbar_position","chart_asset_info","GTMBase","unregister","register","navigator","path_name","sw_url","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready","check_new_release","checkNewRelease","domain_app_ids","getCurrentBinaryDomain","domain","hostname","isProduction","all_domains","binary_desktop_app_id","getAppId","user_app_id","config_app_id","is_new_app","isBinaryApp","getSocketURL","server_url","is_real","server","module","exports"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iDAAyC,4eAA4e,6BAA6B,smBAAsmB;AACxpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,yCAAiC;;AAEjC;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAwB,kCAAkC;AAC1D,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA,kDAA0C,oBAAoB,WAAW;;AAEzE;AACA;AACA;AACA;AACA,wBAAgB,u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","file":"binary.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"65bbc216d15848354232\",\"account_password\":\"5b98c5e0011cf272df7f\",\"api_toke\":\"856a16352b5b0f7b5fb2\",\"authorized_application\":\"41eb62c13df5f986ea68\",\"cashier_password\":\"90e23ba1132672b3e187\",\"contract\":\"8b3665b7e8bf3e4a7c08\",\"financial_assessment\":\"182a107203c81d1cc33a\",\"limits\":\"6122a66075b7120f5152\",\"login_history\":\"92742ccaa1efb1ab65b8\",\"personal_details\":\"716845b634031dd9cf95\",\"portfolio\":\"27783daaa5e678e49540\",\"self_exclusion\":\"226ac0134b0354423868\",\"settings\":\"897ff546fbd9f45f9d55\",\"statement\":\"abc9ff34c0540fd8fbb7\",\"vendors~smart_chart\":\"4ef1863eda19bb87af24\",\"smart_chart\":\"914a40831d33d765d320\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/javascript/app_2/index.js\",\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ja\";","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nconst CalendarBody = (props) => {\n    const calendar_body = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <React.Fragment>\n            { calendar_body[props.calendar_view] }\n        </React.Fragment>\n    );\n};\n\nCalendarBody.propTypes = {\n    calendar_view: PropTypes.string,\n};\n\nexport default CalendarBody;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CalendarButton = ({\n    children,\n    className,\n    is_hidden,\n    label,\n    onClick,\n}) => (\n    <React.Fragment>\n        { !is_hidden &&\n            <button\n                className={className}\n                onClick={onClick}\n            >\n                {label}\n                {children}\n            </button>\n        }\n    </React.Fragment>\n);\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport default CalendarButton;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconCalendarToday } from 'Assets/Common';\n\nconst CalendarFooter = ({\n    footer,\n    has_today_btn,\n    onClick,\n}) => (\n    <React.Fragment>\n        { (has_today_btn || footer) &&\n            <div className='calendar__footer'>\n                { footer && <span className='calendar__text'>{footer}</span> }\n                { has_today_btn &&\n                    <IconCalendarToday\n                        className='calendar__icon'\n                        onClick={onClick}\n                    />\n                }\n            </div>\n        }\n    </React.Fragment>\n);\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n\nexport default CalendarFooter;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport {\n    IconChevronDoubleLeft,\n    IconChevronDoubleRight,\n    IconChevronLeft,\n    IconChevronRight }      from 'Assets/Common';\nimport { month_headers }    from 'Constants/date-time';\nimport {\n    addMonths,\n    addYears,\n    subMonths,\n    subYears,\n    toMoment }              from 'Utils/Date';\nimport CalendarButton       from './calendar-button.jsx';\nimport {\n    getCentury,\n    getDecade }             from './helper';\n\nconst CalendarHeader = ({\n    calendar_date,\n    calendar_view,\n    disable_month_selector,\n    disable_year_selector,\n    isPeriodDisabled,\n    navigateTo,\n    switchView,\n}) => {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = toMoment(calendar_date);\n\n    let num_of_years = 1;\n    if (is_year_view)   num_of_years = 10;\n    if (is_decade_view) num_of_years = 100;\n\n    const century = getCentury(moment_date.clone());\n    const decade  = getDecade(moment_date.clone());\n    const end_of_decade = (is_year_view ? decade : century).split('-')[1];\n\n    const is_prev_month_disabled  = isPeriodDisabled(subMonths(moment_date, 1), 'month');\n    const is_prev_year_disabled   = isPeriodDisabled(subYears(moment_date, num_of_years), 'month');\n    const is_next_month_disabled  = isPeriodDisabled(addMonths(moment_date, 1), 'month');\n    const is_next_year_disabled   = isPeriodDisabled(addYears(moment_date, num_of_years), 'month');\n    const is_select_year_disabled = isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year') || disable_year_selector;\n\n    return (\n        <div className='calendar__header'>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-year', {\n                    'calendar__nav--disabled': is_prev_year_disabled,\n                })}\n                onClick={is_prev_year_disabled ? undefined : () => navigateTo(subYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleLeft className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--prev-month', {\n                    'calendar__nav--disabled': is_prev_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_prev_month_disabled ? undefined : () => navigateTo(subMonths(calendar_date, 1))}\n            >\n                <IconChevronLeft className='calendar__icon' />\n            </CalendarButton>\n\n            <React.Fragment>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar__btn calendar__btn--select'\n                        is_hidden={!is_date_view}\n                        label={month_headers[moment_date.format('MMM')]}\n                        onClick={() => disable_month_selector ? undefined : switchView('month')}\n                    />\n                }\n                { (is_date_view || is_month_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        label={moment_date.format('YYYY')}\n                        onClick={() => is_select_year_disabled ? undefined : switchView('year')}\n                    />\n                }\n                { (is_year_view || is_decade_view) &&\n                    <CalendarButton\n                        className={classNames('calendar__btn calendar__btn--select', {\n                            'calendar__btn--disabled': is_select_year_disabled,\n                        })}\n                        onClick={is_select_year_disabled ? undefined : () => switchView('decade')}\n                    >\n                        { is_year_view   && `${decade}`  }\n                        { is_decade_view && `${century}` }\n                    </CalendarButton>\n                }\n            </React.Fragment>\n\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-month', {\n                    'calendar__nav--disabled': is_next_month_disabled,\n                })}\n                is_hidden={!is_date_view}\n                onClick={is_next_month_disabled ? undefined : () => navigateTo(addMonths(calendar_date, 1))}\n            >\n                <IconChevronRight className='calendar__icon' />\n            </CalendarButton>\n            <CalendarButton\n                className={classNames('calendar__nav calendar__nav--next-year', {\n                    'calendar__nav--disabled': is_next_year_disabled,\n                })}\n                onClick={is_next_year_disabled ? undefined : () => navigateTo(addYears(calendar_date, num_of_years))}\n            >\n                <IconChevronDoubleRight className='calendar__icon' />\n            </CalendarButton>\n        </div>\n    );\n};\n\nCalendarHeader.propTypes = {\n    calendar_date         : PropTypes.string,\n    calendar_view         : PropTypes.string,\n    disable_month_selector: PropTypes.bool,\n    disable_year_selector : PropTypes.bool,\n    isPeriodDisabled      : PropTypes.func,\n    navigateTo            : PropTypes.func,\n    switchView            : PropTypes.func,\n};\n\nexport default CalendarHeader;\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    getStartOfMonth,\n    toMoment }        from 'Utils/Date';\nimport CalendarBody   from './calendar-body.jsx';\nimport CalendarFooter from './calendar-footer.jsx';\nimport CalendarHeader from './calendar-header.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date, value } = props;\n        const current_date = toMoment(value || start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: value,        // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    switchView = (view) => {\n        this.setState({ calendar_view: view });\n    };\n\n    navigateTo = (new_date) => {\n        this.setState({\n            calendar_date: toMoment(new_date).format(this.props.date_format),\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(new_date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    updateSelectedDate = (e) => {\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = toMoment(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(toMoment(min_date));\n        const is_after    = moment_date.isAfter(toMoment(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        if (e) e.stopPropagation();\n\n        if (type === 'day') {\n            this.updateSelectedDate(e);\n            return;\n        }\n\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = toMoment(this.state.calendar_date)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        }, () => {\n            if (this.props.onChangeCalendarMonth) {\n                const start_of_month = getStartOfMonth(date);\n                this.props.onChangeCalendarMonth(start_of_month);\n            }\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = toMoment(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = toMoment().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = toMoment(date).clone().startOf(unit);\n        const end_of_period   = toMoment(date).clone().endOf(unit);\n        return end_of_period.isBefore(toMoment(min_date))\n            || start_of_period.isAfter(toMoment(max_date));\n    };\n\n    render() {\n        const { date_format, footer, has_today_btn, start_date, holidays, weekends } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div className='calendar' data-value={selected_date}>\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    navigateTo={this.navigateTo}\n                    switchView={this.switchView}\n                />\n                <CalendarBody\n                    calendar_date={calendar_date}\n                    calendar_view={calendar_view}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    start_date={start_date}\n                    selected_date={selected_date}\n                    updateSelected={this.updateSelected}\n                    holidays={holidays}\n                    weekends={weekends}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    has_today_btn={has_today_btn}\n                    onClick={this.setToday}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : toMoment().format('YYYY-MM-DD'),               // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : toMoment().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    date_format  : PropTypes.string,\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    holidays     : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    max_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onChangeCalendarMonth: PropTypes.func,\n    onSelect             : PropTypes.func,\n    start_date           : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value   : PropTypes.string,\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n\nexport default Calendar;\n","import { toMoment } from 'Utils/Date';\n\nexport const getDecade = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(9, 'years').year()}`;\n\nexport const getCentury = (moment_date) => `${toMoment(moment_date).year()}-${toMoment(moment_date).add(99, 'years').year()}`;\n","export default from './calendar.jsx';\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { padLeft }      from '_common/string_util';\nimport {\n    getDaysOfTheWeek,\n    week_headers_abbr } from 'Constants/date-time';\nimport {\n    addDays,\n    addMonths,\n    subDays,\n    subMonths,\n    toMoment }          from 'Utils/Date';\nimport CommonPropTypes  from './types';\nimport Tooltip          from '../../tooltip.jsx';\n\nconst getDays = ({\n    calendar_date,\n    date_format,\n    holidays,\n    isPeriodDisabled,\n    start_date,\n    selected_date,\n    updateSelected,\n    weekends,\n}) => {\n    // adjust Calendar week by 1 day so that Calendar week starts on Monday\n    // change to zero to set Calendar week to start on Sunday\n    const day_offset = 1;\n\n    const dates = [];\n    const days  = [];\n    const moment_today       = toMoment().startOf('day');\n    const moment_cur_date    = toMoment(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const moment_selected    = toMoment(selected_date);\n\n    // populate previous months' dates\n    const end_of_prev_month = subMonths(moment_cur_date, 1).endOf('month').day();\n    for (let i = end_of_prev_month; i > 0; i--) {\n        dates.push(subDays(moment_month_start, i).format(date_format));\n    }\n    // populate current months' dates\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    // populate next months' dates\n    const start_of_next_month = addMonths(moment_cur_date, 1).startOf('month').day();\n    if (start_of_next_month - day_offset > 0 || dates.length <= 28) {\n        // if start_of_next_month doesn't falls on Monday, append rest of the week\n        for (let i = 1; i <= 7 - start_of_next_month + day_offset; i++) {\n            dates.push(addDays(moment_month_end, i, 'day').format(date_format));\n        }\n    } else if (!start_of_next_month) {\n        // if start_of_next_month falls on Sunday, append 1 day\n        dates.push(addDays(moment_month_end, 1).format(date_format));\n    }\n\n    const moment_start_date = toMoment(start_date).startOf('day');\n\n    dates.map((date) => {\n        const moment_date = toMoment(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n\n        const events          = holidays.filter(event =>\n            // filter by date or day of the week\n            event.dates.find(d => d === date || getDaysOfTheWeek(d) === toMoment(date).day()));\n        const has_events      = !!events.length;\n        const is_closes_early = events.map(event => !!event.descrip.match(/Closes early|Opens late/))[0];\n        const message         = events.map(event => event.descrip)[0] || '';\n\n        const is_before_min_or_after_max_date = isPeriodDisabled(moment_date, 'day');\n        const is_disabled =\n            // check if date is before min_date or after_max_date\n            is_before_min_or_after_max_date\n            // for forward starting accounts, only show same day as start date and the day after\n            || ((start_date && (moment_date.isBefore(moment_start_date)\n            || moment_date.isAfter(addDays(moment_start_date, 1)))))\n            // check if weekends are disabled\n            || weekends.some(day => toMoment(date).day() === day)\n            // check if date falls on holidays, and doesn't close early or opens late\n            || has_events && !is_closes_early;\n\n        // show 'disabled' style for dates that is not in the same calendar month, it should still be clickable\n        const is_other_month = moment_date.month() !== moment_cur_date.month();\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar__cell', {\n                    'calendar__cell--active'  : is_active && !is_disabled,\n                    'calendar__cell--today'   : is_today,\n                    'calendar__cell--disabled': is_disabled,\n                    'calendar__cell--other'   : is_other_month,\n                })}\n                onClick={is_disabled ? undefined : (e) => updateSelected(e, 'day') }\n                data-date={date}\n            >\n                { ((has_events || is_closes_early) && !is_other_month && !is_before_min_or_after_max_date) &&\n                    <Tooltip\n                        alignment='top'\n                        className='calendar__cell-tooltip'\n                        classNameIcon='calendar__cell-tooltip-icon'\n                        icon='dot'\n                        message={message}\n                    />\n                }\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar__body calendar__body--date'>\n            { Object.keys(week_headers_abbr)\n                .map((item, idx) => (\n                    <span key={idx} className='calendar__text calendar__text--bold'>{week_headers_abbr[item]}</span>\n                ))\n            }\n            { days }\n        </div>\n    );\n};\n\nCalendarDays.defaultProps = {\n    holidays: [],\n    weekends: [],\n};\n\nCalendarDays.propTypes = {\n    ...CommonPropTypes,\n    date_format: PropTypes.string,\n    holidays   : PropTypes.arrayOf(\n        PropTypes.shape({\n            dates  : PropTypes.array,\n            descrip: PropTypes.string,\n        }),\n    ),\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    weekends: PropTypes.arrayOf(PropTypes.number),\n};\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport {\n    getCentury,\n    getDecade }        from '../helper';\n\nexport const CalendarDecades = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const start_year      = getCentury(moment_date).split('-')[0];\n\n    const decades = [];\n    let min_year = +start_year - 10;\n    for (let i = 0; i < 12; i++) {\n        const decade = getDecade(toMoment().year(min_year));\n        decades.push(decade);\n        min_year = +decade.split('-')[1] + 1;\n    }\n    return (\n        <div className='calendar__body calendar__body--decade'>\n            { decades.map((decade, idx) => {\n                const [start_of_decade, end_of_decade] = decade.split('-');\n                const is_active    = +start_of_decade === moment_selected.year();\n                const is_disabled  = isPeriodDisabled(moment_date.clone().year(start_of_decade), 'year') &&\n                    isPeriodDisabled(moment_date.clone().year(end_of_decade), 'year');\n                const is_other_century = idx === 0 || idx === 11;\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                            'calendar__cell--other'   : is_other_century,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'decade')}\n                        data-decade={decade}\n                    >\n                        {decade}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CommonPropTypes };\n","import classNames        from 'classnames';\nimport React             from 'react';\nimport { month_headers } from 'Constants/date-time';\nimport { toMoment }      from 'Utils/Date';\nimport CommonPropTypes   from './types';\n\nexport const CalendarMonths = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_date          = toMoment(calendar_date);\n    const moment_selected_date = toMoment(selected_date);\n\n    return (\n        <div className='calendar__body calendar__body--month'>\n            { Object.keys(month_headers).map((month, idx) => {\n                const is_active   = month === moment_selected_date.clone().format('MMM') && moment_selected_date.isSame(moment_date, 'year');\n                const is_disabled = isPeriodDisabled(moment_date.clone().month(month), 'month');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : is_active,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'month')}\n                        data-month={month}\n                    >\n                        {month_headers[month]}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CommonPropTypes };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport { toMoment }    from 'Utils/Date';\nimport CommonPropTypes from './types';\nimport { getDecade }   from '../helper';\n\nexport const CalendarYears = ({\n    calendar_date,\n    isPeriodDisabled,\n    selected_date,\n    updateSelected,\n}) => {\n    const moment_selected = toMoment(selected_date);\n    const moment_date     = toMoment(calendar_date);\n    const [start_of_decade, end_of_decade] = getDecade(moment_date).split('-');\n\n    const years = [];\n    for (let year = +start_of_decade - 1; year <= +end_of_decade + 1; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar__body calendar__body--year'>\n            { years.map((year, idx) => {\n                const is_other_decade = idx === 0 || idx === 11;\n                const is_disabled     = isPeriodDisabled(moment_date.clone().year(year), 'year');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar__cell', {\n                            'calendar__cell--active'  : year === moment_selected.year(),\n                            'calendar__cell--other'   : is_other_decade,\n                            'calendar__cell--disabled': is_disabled,\n                        })}\n                        onClick={is_disabled ? undefined : (e) => updateSelected(e, 'year')}\n                        data-year={year}\n                    >\n                        {year}\n                    </span>\n                );\n            })\n            }\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CommonPropTypes };\n","export * from './calendar-days.jsx';\nexport * from './calendar-months.jsx';\nexport * from './calendar-years.jsx';\nexport * from './calendar-decades.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CommonPropTypes = {\n    calendar_date   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    selected_date   : PropTypes.string,\n    updateSelected  : PropTypes.func,\n};\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer-item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <SwitchButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer-header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","export * from './drawer-header.jsx';\nexport * from './drawer-item.jsx';\nexport * from './drawer-items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer-toggle.jsx';\nexport * from './toggle-drawer.jsx';\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon-error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","export default from './error-component.jsx';\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='full-page-modal__dialog'>\n                    <h1 className='full-page-modal__header'>{title}</h1>\n                    <p className='full-page-modal__content'>{children}</p>\n                    <div className='full-page-modal__footer'>\n                        <div\n                            className='full-page-modal__button btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span className='full-page-modal__button-text'>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='full-page-modal__button btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span className='full-page-modal__button-text'>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport { IconBell } from 'Assets/Header/NavBar';\n\nconst EmptyNotification = () => (\n    <div className='no-notifications-container'>\n        <div className='notification-message'>\n            <div className='bell-icon'>\n                <IconBell />\n            </div>\n            <div>\n                <h4>{localize('No Notifications')}</h4>\n                <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n            </div>\n        </div>\n    </div>\n);\n\nexport { EmptyNotification };\n","export * from './notifications.jsx';\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { EmptyNotification } from './empty-notification.jsx';\nimport { DrawerItem }        from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <EmptyNotification />\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    list: PropTypes.object,\n};\n\nexport { Notifications };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm-element.jsx';\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', `popconfirm--${alignment}`, {\n        [`popconfirm--${alignment}--open`]: is_visible,\n        'popconfirm--open'                : is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm__title'>\n                <IconExclamation className='popconfirm__icon_exclamation' />\n                <h4 className='popconfirm__header'>{message}</h4>\n            </div>\n            <div className='popconfirm__button-wrapper'>\n                <div\n                    className='popconfirm__button btn flat effect'\n                    onClick={onClose}\n                >\n                    <span className='popconfirm__button-text'>{cancel_text}</span>\n                </div>\n                <div\n                    className='popconfirm__button btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span className='popconfirm__button-text'>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm-element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    })\n                ))}\n                {popconfirm_element}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","export default from './positions-drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { Scrollbars }                 from 'tt-react-custom-scrollbars';\nimport { localize }                   from '_common/localize';\nimport { IconMinimize }               from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty-portfolio-message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PositionsDrawerCard            from './positions_drawer_card.jsx';\n\nclass PositionsDrawer extends React.Component {\n    componentDidMount()    {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_positions_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PositionsDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('positions-drawer', { 'positions-drawer--open': is_positions_drawer_on })}>\n                <div className='positions-drawer__header'>\n                    <span className='positions-drawer__title'>{localize('Positions')}</span>\n                    <div\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconMinimize />\n                    </div>\n                </div>\n                <div className='positions-drawer__body'>\n                    <Scrollbars\n                        style={{ width: '100%', height: '100%' }}\n                        autoHide\n                    >\n                        {body_content}\n                    </Scrollbars>\n                </div>\n            </div>\n        );\n    }\n}\n\nPositionsDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        toggleDrawer          : ui.togglePositionsDrawer,\n    })\n)(PositionsDrawer);\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract-type-cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary-link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining-time.jsx';\n\nconst PositionsDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink\n        className='positions-drawer-card'\n        to={getContractPath(id)}\n    >\n        <React.Fragment>\n            <div className='positions-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`positions-drawer-card__indicative positions-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='positions-drawer-card__symbol'>{underlying}</span>\n            <span className='positions-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPositionsDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PositionsDrawerCard;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport {\n    IconBack,\n    IconCountryFlag }  from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('settings-dialog__language-dialog-container', {\n        'settings-dialog__language-dialog-container--show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='settings-dialog__language-header' onClick={hide}>\n                <IconBack className='settings-dialog__arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='settings-dialog__language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='settings-dialog__language-row'>\n                            <a className='settings-dialog__language-link' href={getURL(key)} >\n                                <IconCountryFlag\n                                    className={'settings-dialog__language-row-flag settings-dialog__language-flag'}\n                                    type={key.replace(/(\\s|_)/, '-').toLowerCase()}\n                                />\n                                <span className='settings-dialog__language-name'>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport SwitchButton from '../switch-button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-dialog__row' onClick={toggle || onClick}>\n        <span className='settings-dialog__row-name'>{name}</span>\n        {toggle ?\n            <SwitchButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'settings-dialog__container--show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog__container', {\n            'settings-dialog__container--hide': this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-dialog__header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' classNameHeader='settings-dialog__tab-header' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs-item.jsx';\nexport * from './tabs-wrapper.jsx';\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs-item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs-wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', `tab-container--${this.props.alignment}`);\n        const tab_header_class = (icon_name) => classNames(\n            this.props.classNameHeader,\n            'tab__header',\n            { 'tab__icon': icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment      : PropTypes.string,\n    classNameHeader: PropTypes.string,\n    list           : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","export default from './toast.jsx';\nexport * from './constants.js';\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport classNames       from 'classnames';\nimport { IconError }    from 'Assets/Common/icon-error.jsx';\nimport { IconInfoBlue } from 'Assets/Common/icon-info-blue.jsx';\nimport { IconWarning }  from 'Assets/Common/icon-warning.jsx';\nimport { IconSuccess }  from 'Assets/Common/icon-success.jsx';\nimport CloseButton      from './close-button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }             from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                { data.type === 'ERROR'   && <IconError className='toast__icon-type' /> }\n                { data.type === 'INFO'    && <IconInfoBlue className='toast__icon-type' /> }\n                { data.type === 'SUCCESS' && <IconSuccess className='toast__icon-type' /> }\n                { data.type === 'WARNING' && <IconWarning className='toast__icon-type' /> }\n            </div>\n            <div className='toast__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill-template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='login-prompt__icon-svg disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    className,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={classNames(className, 'symbols', currency.toLowerCase())} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    className   : PropTypes.string,\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst SwitchButton = ({ style, toggled }) => {\n    const toggle_style = style || 'switch-button';\n    const icon_class = classNames(toggle_style, {\n        [`${toggle_style}--toggled`]: toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nSwitchButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default SwitchButton;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconInfoBlue }    from 'Assets/Common/icon-info-blue.jsx';\nimport { IconInfoOutline } from 'Assets/Common/icon-info-outline.jsx';\nimport { IconQuestion }    from 'Assets/Common/icon-question.jsx';\nimport { IconRedDot }      from 'Assets/Common/icon-red-dot.jsx';\n\nclass Tooltip extends React.Component {\n    state = {\n        show_tooltip_balloon_icon: false,\n    }\n\n    onMouseEnter = () => {\n        this.setState({ show_tooltip_balloon_icon: true });\n    }\n\n    onMouseLeave = () => {\n        this.setState({ show_tooltip_balloon_icon: false });\n    }\n\n    render() {\n        const {\n            alignment,\n            children,\n            className,\n            classNameIcon,\n            icon, // only question or info accepted\n            message,\n        } = this.props;\n\n        const icon_class = classNames(classNameIcon, icon);\n        return (\n            <span\n                className={classNames(className, 'tooltip')}\n                data-tooltip={message}\n                data-tooltip-pos={alignment}\n            >\n                {icon === 'info' &&\n                    <React.Fragment>\n                        <IconInfoOutline\n                            className={icon_class}\n                            onMouseEnter={this.onMouseEnter}\n                            onMouseLeave={this.onMouseLeave}\n                        />\n                        <IconInfoBlue\n                            className={classNames(`${classNameIcon}-balloon-icon`, 'tooltip-balloon-icon', {\n                                'tooltip-balloon-icon--show': this.state.show_tooltip_balloon_icon,\n                            })}\n                        />\n                    </React.Fragment>\n                }\n                {icon === 'question' && <IconQuestion className={icon_class} />}\n                {icon === 'dot'      && <IconRedDot className={icon_class} />}\n                {children}\n            </span>\n        );\n    }\n}\n\nTooltip.propTypes = {\n    alignment    : PropTypes.string,\n    children     : PropTypes.node,\n    className    : PropTypes.string,\n    classNameIcon: PropTypes.string,\n    icon         : PropTypes.string,\n    message      : PropTypes.string,\n};\n\nexport default Tooltip;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className, classNameBlock }) => {\n    const loading_class = classNames('block-ui__loading', className);\n    const block_class   = classNames(classNameBlock, 'block-ui');\n    return (\n        <div className={block_class}>\n            <div className={loading_class}>\n                <div className='block-ui__loading-spinner'>\n                    <svg className='block-ui__loading-spinner-circular' viewBox='25 25 50 50'>\n                        <circle className='block-ui__loading-spinner-path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className     : PropTypes.string,\n    classNameBlock: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames           from 'classnames';\nimport { observer }         from 'mobx-react';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport {\n    IconArrow,\n    IconCalendar,\n    IconClear }             from 'Assets/Common';\nimport InputField           from 'App/Components/Form/input-field.jsx';\nimport {\n    addDays,\n    daysFromTodayTo,\n    formatDate,\n    getStartOfMonth,\n    isDateValid,\n    toMoment }              from 'Utils/Date';\nimport { localize }         from '_common/localize';\nimport { getTradingEvents } from './helpers';\nimport Calendar             from '../../Elements/Calendar';\n\nclass DatePicker extends React.Component {\n    state = {\n        date_value           : '',\n        holidays             : [],\n        is_datepicker_visible: false,\n        is_clear_btn_visible : false,\n        value                : this.props.value,\n        weekends             : [],\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { mode, value } = this.props;\n        const initial_value = mode === 'duration' ? formatDate(addDays(toMoment(), 1), 'DD MMM YYYY') : formatDate(value, 'DD MMM YYYY');\n\n        this.updateDatePickerValue(initial_value);\n\n        if (this.props.disable_trading_events) {\n            this.onChangeCalendarMonth(getStartOfMonth(this.state.value));\n        }\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState(state => ({ is_datepicker_visible: !state.is_datepicker_visible }));\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value, 'DD MMM YYYY'));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_clear_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_clear_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!isDateValid(value)) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(value);\n        } else {\n            this.updateDatePickerValue(formatDate(value, 'DD MMM YYYY'));\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        const formatted_value = formatDate(addDays(toMoment(), value), 'DD MMM YYYY');\n        this.updateDatePickerValue(formatted_value);\n        this.props.onChange(e);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: null }, this.updateStore);\n        if (this.calendar) {\n            this.calendar.resetCalendar();\n        }\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value) => {\n        const { date_format, mode, start_date } = this.props;\n        this.setState({ value }, this.updateStore);\n\n        if (mode === 'duration') {\n            const new_value      = daysFromTodayTo(value);\n            const new_date_value = formatDate(value, 'DD MMM YYYY');\n            this.setState({ value: new_value, date_value: new_date_value }, this.updateStore);\n        }\n\n        // update Calendar\n        const new_date = (mode === 'duration') ? formatDate(value, 'DD MMM YYYY') : value;\n        if (this.calendar && (isDateValid(new_date) || !new_date)) {\n            if (!new_date) {\n                const current_date = formatDate(start_date, date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    async onChangeCalendarMonth(calendar_date) {\n        const trading_events = await getTradingEvents(calendar_date, this.props.underlying);\n        const holidays = [];\n        let weekends   = [];\n        trading_events.forEach(events => {\n            const dates = events.dates.split(', '); // convert dates str into array\n            const idx = dates.indexOf('Fridays');\n            if (idx !== -1) {\n                weekends = [6, 0]; // Sat, Sun\n            }\n            holidays.push({\n                dates,\n                descrip: events.descrip,\n            });\n        });\n\n        this.setState({\n            holidays,\n            weekends,\n        });\n    }\n\n    renderInputField = () => {\n        const { is_read_only, mode, name, label, error_messages } = this.props;\n        let { placeholder } = this.props;\n        let value, type, onChange;\n\n        switch (mode) {\n            case 'duration':\n                onChange = this.onChangeInput;\n                type = 'text';\n                value = this.state.value;\n                break;\n            default:\n                placeholder = placeholder || localize('Select a date');\n                type = 'text';\n                value = formatDate(this.props.value, 'DD MMM YYYY');\n        }\n\n        return (\n            <InputField\n                className='datepicker__input-field'\n                classNameInput='datepicker__input trade-container__input'\n                data-tip={false}\n                data-value={this.state.value}\n                error_messages={error_messages}\n                is_autocomplete_disabled={true}\n                label={label}\n                is_read_only={is_read_only}\n                name={name}\n                onChange={onChange}\n                onClick={this.handleVisibility}\n                placeholder={placeholder}\n                type={type}\n                value={value}\n            />\n        );\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='input trade-container__input datepicker__input'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker__native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                id={this.props.id}\n                ref={node => { this.mainNode = node; }}\n                className='datepicker'\n                onMouseEnter={this.onMouseEnter}\n                onMouseLeave={this.onMouseLeave}\n            >\n                { this.renderInputField() }\n                <IconCalendar\n                    className={classNames('datepicker__icon datepicker__icon--calendar', {\n                        'datepicker__icon--is-hidden' : this.state.is_clear_btn_visible,\n                        'datepicker__icon--with-label': this.props.label,\n                    })}\n                    onClick={this.handleVisibility}\n                />\n                {this.props.is_clearable &&\n                    <IconClear\n                        className={classNames('datepicker__icon datepicker__icon--clear', {\n                            'datepicker__icon--is-hidden': !this.state.is_clear_btn_visible,\n                        })}\n                        onClick={this.state.is_clear_btn_visible ? this.clearDatePickerInput : undefined}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_datepicker_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : `datepicker__picker--enter datepicker__picker--${this.props.alignment}-enter`,\n                        enterDone: `datepicker__picker--enter-done datepicker__picker--${this.props.alignment}-enter-done`,\n                        exit     : `datepicker__picker--exit datepicker__picker--${this.props.alignment}-exit`,\n                    }}\n                    unmountOnExit\n                >\n                    <div\n                        className={classNames('datepicker__picker', {\n                            'datepicker__picker--left': this.props.alignment === 'left',\n                        })}\n                    >\n                        <Calendar\n                            ref={node => { this.calendar = node; }}\n                            onSelect={this.onSelectCalendar}\n                            onChangeCalendarMonth={this.props.disable_trading_events ?\n                                this.onChangeCalendarMonth.bind(this) : undefined}\n                            holidays={this.state.holidays}\n                            weekends={this.state.weekends}\n                            date_format={this.props.date_format}\n                            has_today_btn={this.props.has_today_btn}\n                            footer={this.props.footer}\n                            max_date={this.props.max_date}\n                            min_date={this.props.min_date}\n                            start_date={this.props.start_date}\n                            value={this.props.mode === 'duration' ? this.state.date_value : this.props.value}\n                        />\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...Calendar.propTypes,\n    error_messages: PropTypes.array,\n    label         : PropTypes.string,\n};\n\nexport default observer(DatePicker);\n","\nimport { WS }               from 'Services';\nimport { getPropertyValue } from '_common/utility';\n\nconst trading_events = {};\nexport const getTradingEvents = async (date, underlying = null) => {\n    if (!date) {\n        return [];\n    }\n\n    if (!(date in trading_events)) {\n        const trading_times_response = await WS.getTradingTimes(date);\n\n        if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n            for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                if (submarkets) {\n                    for (let j = 0; j < submarkets.length; j++) {\n                        const symbols = submarkets[j].symbols;\n                        if (symbols) {\n                            for (let k = 0; k < symbols.length; k++) {\n                                const symbol = symbols[k];\n                                if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                    trading_events[trading_times_response.echo_req.trading_times] = {};\n                                }\n                                trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                    symbol.events;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return trading_events[date][underlying];\n};\n","export default from './date-picker.jsx';\n","import classNames        from 'classnames';\nimport { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Scrollbars }    from 'tt-react-custom-scrollbars';\nimport { IconArrow }     from 'Assets/Common';\nimport Items             from './items.jsx';\nimport NativeSelect      from './native-select.jsx';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex }       from './helpers';\n\nclass Dropdown extends React.Component {\n    list_ref = React.createRef();\n    state = {\n        curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        is_list_visible: false,\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    setWrapperRef = (node) => this.wrapper_ref = node;\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n        }\n    }\n\n    handleVisibility = () => {\n        this.setState((state) =>({  is_list_visible: !state.is_list_visible }));\n    }\n\n    onKeyPressed = (event) => {\n        if (this.is_single_option) return;\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                } else if (!this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 37: // Left arrow is pressed\n                if (!this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            case 39: // Right Arrow is pressed\n                if (this.state.is_list_visible && this.props.is_alignment_left) {\n                    this.handleVisibility();\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <NativeSelect\n                    name={this.props.name}\n                    value={this.props.value}\n                    list={this.props.list}\n                    onChange={this.props.onChange}\n                />\n            );\n        }\n\n        // we are calculating the offset for the dropdown list based on it's width here\n        const left_alignment_style = {\n            transform: `translate3d(calc(-${this.state.list_width}px - 12px), 0, 0px)`,\n        };\n\n        // upon render via css transition group, we use this as a callback to set the width of the dropdown list in the state\n        const setListWidth = () => this.setState({ list_width: this.list_ref.current.offsetWidth });\n\n        const is_single_option = isArrayLike(this.props.list) ?\n            !!(this.props.list.length < 2)\n            :\n            !!(Object.keys(this.props.list).length < 2);\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={classNames('dropdown-container', this.props.className, {\n                    'dropdown-container--left'    : this.props.is_alignment_left,\n                    'dropdown-container--show'    : this.state.is_list_visible,\n                    'dropdown-container--disabled': is_single_option,\n                })}\n            >\n                <div\n                    className={classNames('dropdown__display', {\n                        'dropdown__display--clicked': this.state.is_list_visible,\n                    })}\n                    tabIndex={is_single_option ? '-1' : '0'}\n                    onClick={this.handleVisibility}\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                {\n                    !is_single_option && <IconArrow className={classNames('select-arrow', {\n                        'select-arrow--left': this.props.is_alignment_left,\n                    })}\n                    />\n                }\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames={{\n                        enter    : 'dropdown__list--enter',\n                        enterDone: 'dropdown__list--enter--done',\n                        exit     : 'dropdown__list--exit',\n                    }}\n                    onEntered={setListWidth}\n                    unmountOnExit\n                >\n                    <div className={classNames('dropdown__list', {\n                        'dropdown__list--left': this.props.is_alignment_left,\n                    })}\n                    >\n                        <div\n                            className={classNames('list', {\n                                'list--left': this.props.is_alignment_left,\n                            })}\n                            ref={this.list_ref}\n                            style={this.props.is_alignment_left ? left_alignment_style : undefined}\n                        >\n                            <Scrollbars\n                                autoHeight\n                                autoHide\n                                autoHeightMax={200}\n                                renderTrackHorizontal={props => <div {...props} className='track-horizontal' style={{ display: 'none' }} />}\n                                renderThumbHorizontal={props => <div {...props} className='thumb-horizontal' style={{ display: 'none' }} />}\n                            >\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list__label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </Scrollbars>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nDropdown.propTypes = {\n    className        : PropTypes.string,\n    is_alignment_left: PropTypes.bool,\n    is_nativepicker  : PropTypes.bool,\n    list             : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","export default from './dropdown.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={classNames('list__item', {\n                    'list__item--selected'   : value === item.value,\n                    'list__item--highlighted': highlightedIdx === idx,\n                })}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nItems.propTypes = {\n    handleSelect  : PropTypes.func,\n    highlightedIdx: PropTypes.number,\n    name          : PropTypes.string,\n    value         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Items;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst NativeSelect = ({\n    name,\n    list,\n    value,\n    onChange,\n}) => (\n    <div className='native-select native-select__wrapper'>\n        <select className='select native-select__select' name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default NativeSelect;\n","export default from './range-slider.jsx';\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport TickSteps    from './tick-steps.jsx';\n\nconst RangeSlider = ({\n    className,\n    ticks,\n    max_value,\n    min_value,\n    name,\n    value,\n    onChange,\n}) => {\n\n    const handleChange = (e) => {\n        if (e.target.value !== value) {\n            onChange({ target: { name, value: e.target.value } });\n        }\n    };\n\n    const handleClick = (e, index) => {\n        if (index !== value) {\n            onChange({ target: { name, value: index } });\n        }\n    };\n\n    const first_tick = ticks - (ticks - 1);\n\n    return (\n        <div className={classNames('range-slider', className, { 'range-slider__error': ((value < min_value) || (value > max_value)) })}>\n            <label className='range-slider__label' htmlFor='range'>\n                <input\n                    id='range'\n                    className='input trade-container__input range-slider__track'\n                    type='range'\n                    min={first_tick}\n                    max={ticks}\n                    min_value={min_value}\n                    max_value={max_value}\n                    name={name}\n                    steps='1'\n                    onChange={handleChange}\n                    tabIndex='0'\n                    value={value}\n                />\n                <div className='range-slider__ticks'>\n                    <TickSteps\n                        value={value}\n                        ticks={ticks}\n                        onClick={handleClick}\n                    />\n                </div>\n                {/* Calculate line width based on active value and size of range thumb */}\n                <div\n                    className='range-slider__line'\n                    style={{ width: `calc(${value * 10}% - ${value < 4 ? '1.6rem' : '1rem'})` }}\n                />\n            </label>\n            <div className='range-slider__caption'>\n                <span className='range-slider__caption--first'>\n                    {first_tick}\n                </span>\n                {\n                    !!value &&\n                    <span>\n                        {localize('[_1] Ticks', value || '')}\n                    </span>\n                }\n                <span className='range-slider__caption--last'>\n                    {ticks}\n                </span>\n            </div>\n        </div>\n    );\n};\n// Keypress events do not trigger on Safari due to the way it handles input type='range' elements, using focus on the input element also doesn't work for Safari.\n\nRangeSlider.propTypes = {\n    className : PropTypes.string,\n    first_tick: PropTypes.number,\n    max_value : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    min_value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(RangeSlider);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst TickSteps = ({ value, ticks, onClick }) => {\n    const arr_ticks = [...Array(ticks).keys()];\n    return (\n        <React.Fragment>\n            {arr_ticks.map(idx =>\n                <span\n                    key={idx}\n                    className={classNames('range-slider__ticks-step', {\n                        'range-slider__ticks-step--active': (idx + 1) === parseInt(value),\n                        'range-slider__ticks-step--marked': (idx + 1) < parseInt(value),\n                    })}\n                    onClick={(e) => onClick(e, idx + 1)}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nTickSteps.propTypes = {\n    onClick: PropTypes.func,\n    ticks  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default TickSteps;\n","import PropTypes    from 'prop-types';\nimport classNames   from 'classnames';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst Dialog = ({\n    preClass,\n    value,\n    start_time,\n    end_time,\n    onChange,\n    className,\n}) => {\n    const start_time_moment     = start_time ? toMoment(start_time) : toMoment();\n    const end_time_moment       = end_time ? toMoment(end_time) : toMoment().hour('23').minute('59').seconds('59').milliseconds('999');\n    const to_compare_moment     = toMoment();\n    const [ hour, minute ]      = value.split(':');\n    const hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const selectOption = (type, current_value, prev_value, is_enabled = true) => {\n        if (is_enabled && prev_value) {\n            const [ prev_hour, prev_minute ] = prev_value.split(':');\n            if ((type === 'h' && current_value !== prev_hour) || (type === 'm' && current_value !== prev_minute)) {\n                onChange(`${type === 'h' ? current_value : prev_hour}:${type === 'm' ? current_value : prev_minute}`);\n            }\n        }\n    };\n\n    return (\n        <div className={classNames(`${preClass}-dialog`, `${className}`)}>\n            <div className={`${preClass}-selector`}>\n                <div className={`${preClass}-hours`}>\n                    <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                    <div className='list-container'>\n                        {hours.map((h, key) => {\n                            to_compare_moment.hour(h).minute(minute);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment);\n                            return (\n                                <div\n                                    className={classNames('list-item',\n                                        { 'selected': (hour === h) },\n                                        { 'disabled': !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('h', h, value, is_enabled); }}\n                                >\n                                    {h}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n                <div className={`${preClass}-minutes`}>\n                    <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                    <div className='list-container'>\n                        {minutes.map((mm, key) => {\n                            to_compare_moment.hour(hour).minute(mm);\n                            const is_enabled = to_compare_moment.isBetween(start_time_moment, end_time_moment, 'minute');\n                            return (\n                                <div\n                                    className={classNames('list-item',\n                                        { 'selected': (minute === mm) },\n                                        { 'disabled': !is_enabled })}\n                                    key={key}\n                                    onClick={() => { selectOption('m', mm, value, is_enabled); }}\n                                >\n                                    {mm}\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDialog.propTypes = {\n    className: PropTypes.string,\n    end_time : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    onChange  : PropTypes.func,\n    preClass  : PropTypes.string,\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    value: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default Dialog;\n","export default from './time-picker.jsx';\n","import classNames        from 'classnames';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport Dialog            from './dialog.jsx';\nimport InputField        from '../input-field.jsx';\nimport { IconClock } from '../../../../Assets/Common/icon-clock.jsx';\n\nclass TimePicker extends React.Component {\n    state = { is_open: false };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState((state) => ({ is_open: !state.is_open }));\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            value,\n            name,\n            is_nativepicker,\n            placeholder,\n            start_time,\n            end_time,\n            validation_errors,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={classNames(prefix_class,\n                    { 'padding': this.props.padding })}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                            min={start_time}\n                            max={end_time}\n                        />\n                        : (\n                            <React.Fragment>\n                                <IconClock className='time-picker-icon' />\n                                <InputField\n                                    error_messages={validation_errors}\n                                    type='text'\n                                    is_read_only\n                                    id={`${prefix_class}-input`}\n                                    className={classNames(`${prefix_class}-input`)}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <CSSTransition\n                                    in={ this.state.is_open }\n                                    classNames={{\n                                        enter    : 'time-picker-dialog-enter',\n                                        enterDone: 'time-picker-dialog-enter-done',\n                                        exit     : 'time-picker-dialog-exit',\n                                    }}\n                                    timeout={100}\n                                    unmountOnExit\n                                >\n                                    <Dialog\n                                        className={'from-left'}\n                                        onChange={this.handleChange}\n                                        preClass={prefix_class}\n                                        start_time={start_time}\n                                        end_time={end_time}\n                                        value={value}\n                                    />\n                                </CSSTransition>\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    start_time     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n    value: PropTypes.string,\n};\n\nexport default observer(TimePicker);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Button     from './button.jsx';\n\nconst ButtonToggleMenu = ({\n    buttons_arr,\n    name,\n    onChange,\n    value,\n}) => {\n    const changeValue = (selected_value) => {\n        if (value === selected_value) return;\n        onChange({ target: { value: selected_value, name } });\n    };\n    const menu = buttons_arr.map((val, idx) => {\n        const className = classNames('button-menu__button', {\n            'button-menu__button--active': val.value === value,\n        });\n        return (\n            <Button\n                key={idx}\n                text={val.text}\n                onClick={() => changeValue(val.value)}\n                className={className}\n            />\n        );\n    });\n    return <div className='button-menu'>{menu}</div>;\n};\n\nButtonToggleMenu.propTypes = {\n    buttons_arr: PropTypes.array,\n    name       : PropTypes.string,\n    onChange   : PropTypes.func,\n    value      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default ButtonToggleMenu;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    classNameSpan,\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    tabIndex,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = classNames('btn', { effect: has_effect }, className);\n    const button = (\n        <button\n            id={id}\n            className={classes}\n            onClick={onClick || undefined}\n            disabled={is_disabled}\n            tabIndex={tabIndex || '0'}\n        >\n            <span className={classNameSpan || undefined}>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.node,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    is_center,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', is_center ? 'center-text' : '');\n    const fieldset_info_class   = classNames('trade-container__fieldset-info', !is_center && 'trade-container__fieldset-info--left');\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                </div>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport { IconMinus }             from 'Assets/Common/icon-minus.jsx'; // implicit import here { IconMinus, IconPlus } from 'Assets/Common' breaks compilation\nimport { IconPlus }              from 'Assets/Common/icon-plus.jsx';\nimport Button                    from './button.jsx';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    checked,\n    className,\n    classNameInput,\n    classNamePrefix,\n    data_tip,\n    data_value,\n    error_messages,\n    fractional_digits,\n    helper,\n    id,\n    is_autocomplete_disabled,\n    is_disabled,\n    is_float,\n    is_incrementable,\n    is_read_only = false,\n    is_signed = false,\n    is_unit_at_right = false,\n    label,\n    max_length,\n    max_value,\n    min_value,\n    name,\n    onChange,\n    onClick,\n    placeholder,\n    prefix,\n    required,\n    type,\n    unit,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n    const max_is_disabled = max_value && +value >= +max_value;\n    const min_is_disabled = min_value && +value <= +min_value;\n\n    const changeValue = (e) => {\n        if (unit) {\n            e.target.value = e.target.value.replace(unit, '').trim();\n        }\n\n        if (e.target.value === value && type !== 'checkbox') {\n            return;\n        }\n\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '' || e.target.value === '  ';\n            const signed_regex = is_signed ? '[+\\-\\.0-9]$' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const incrementValue = () => {\n        if  (max_is_disabled) return;\n\n        const increment_value = (+value) + 1;\n        onChange({ target: { value: increment_value, name } });\n    };\n\n    const decrementValue = () => {\n        if (!value || min_is_disabled) return;\n\n        const decrement_value = (+value) - 1;\n        onChange({ target: { value: decrement_value, name } });\n    };\n\n    const onKeyPressed = (e) => {\n        if (e.keyCode === 38) incrementValue(); // up-arrow pressed\n        if (e.keyCode === 40) decrementValue(); // down-arrow pressed\n    };\n\n    let display_value = value;\n\n    if (unit) {\n        display_value = is_unit_at_right ? `${value} ${unit}` : `${unit} ${value}`;\n    }\n\n    const input =\n        <input\n            checked={checked ? 'checked' : ''}\n            className={classNames('input', { error: has_error }, classNameInput)}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-value={data_value}\n            data-tip={data_tip}\n            id={id}\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onKeyDown={is_incrementable ? onKeyPressed : undefined}\n            onChange={changeValue}\n            onClick={onClick}\n            placeholder={placeholder || undefined}\n            readOnly={is_read_only}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={display_value || ''}\n            autoComplete={is_autocomplete_disabled ? 'off' : undefined}\n        />;\n\n    const input_increment =\n        <div className='input-wrapper'>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--increment'}\n                is_disabled={max_is_disabled}\n                onClick={incrementValue}\n                tabIndex='-1'\n            >\n                <IconPlus className={'input-wrapper__icon input-wrapper__icon--plus' } is_disabled={max_is_disabled} />\n            </Button>\n            <Button\n                className={'input-wrapper__button input-wrapper__button--decrement'}\n                is_disabled={min_is_disabled}\n                onClick={decrementValue}\n                tabIndex='-1'\n            >\n                <IconMinus className={'input-wrapper__icon input-wrapper__icon--minus'} is_disabled={min_is_disabled} />\n            </Button>\n            { input }\n        </div>;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip className={classNames('', { 'with-label': label })} alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <span className={classNames(classNamePrefix, 'symbols', prefix.toLowerCase())} />\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                {is_incrementable  &&  type === 'number' ? input_increment : input}\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    checked                 : PropTypes.number,\n    className               : PropTypes.string,\n    classNameInput          : PropTypes.string,\n    classNamePrefix         : PropTypes.string,\n    error_messages          : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits       : PropTypes.number,\n    helper                  : PropTypes.string,\n    id                      : PropTypes.string,\n    is_autocomplete_disabled: PropTypes.bool,\n    is_disabled             : PropTypes.string,\n    is_float                : PropTypes.bool,\n    is_incrementable        : PropTypes.bool,\n    is_read_only            : PropTypes.bool,\n    is_signed               : PropTypes.bool,\n    is_unit_at_right        : PropTypes.bool,\n    label                   : PropTypes.string,\n    max_length              : PropTypes.number,\n    name                    : PropTypes.string,\n    onChange                : PropTypes.func,\n    onClick                 : PropTypes.func,\n    placeholder             : PropTypes.string,\n    prefix                  : PropTypes.string,\n    required                : PropTypes.bool,\n    type                    : PropTypes.string,\n    unit                    : PropTypes.string,\n    value                   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n}) => {\n    const handleSelect = (item) => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) =>\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i =>\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', { 'number-selector__selection--selected': selected_number === i })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {i}\n                        </span>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    selected_number: PropTypes.number,\n};\n\nexport default NumberSelector;\n","export * from './network-status.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-positions.jsx';\nexport * from './toggle-settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconPositions } from 'Assets/Footer';\n\nconst TogglePositions = ({\n    is_positions_drawer_on,\n    togglePositionsDrawer,\n}) => {\n    const toggle_positions_class = classNames('ic-positions', {\n        'active': is_positions_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_positions_class}\n            onClick={togglePositionsDrawer}\n        >\n            <IconPositions />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_positions_drawer_on: PropTypes.bool,\n    togglePositionsDrawer : PropTypes.func,\n};\n\nexport { TogglePositions };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings-dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames={{\n                    enter    : 'settings-dialog--enter',\n                    enterDone: 'settings-dialog--enter-done',\n                    exit     : 'settings-dialog--exit',\n                }}\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    is_virtual,\n    onClickUpgrade,\n    toggleDialog,\n}) => (\n    <div className='acc-info__wrapper'>\n        <div\n            className={classNames('acc-info', {\n                'acc-info--show'      : is_dialog_on,\n                'acc-info--is-virtual': is_virtual,\n            })}\n            onClick={toggleDialog}\n        >\n            <p\n                className='acc-info__id'\n                title={loginid}\n            >\n                {loginid}\n            </p>\n            {\n                typeof balance !== 'undefined' &&\n                <p className='acc-info__balance'>\n                    <span\n                        className={classNames('symbols', (currency || '').toLowerCase())}\n                    />\n                    {balance}\n                </p>\n            }\n            <IconArrow className='acc-info__select-arrow' />\n        </div>\n        <CSSTransition\n            in={is_dialog_on}\n            timeout={200}\n            classNames={{\n                enter    : 'acc-switcher__wrapper--enter',\n                enterDone: 'acc-switcher__wrapper--enter-done',\n                exit     : 'acc-switcher__wrapper--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='acc-switcher__wrapper'>\n                <AccountSwitcher\n                    is_visible={is_dialog_on}\n                    toggle={toggleDialog}\n                    is_upgrade_enabled={is_upgrade_enabled}\n                    onClickUpgrade={onClickUpgrade}\n                />\n            </div>\n        </CSSTransition>\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_virtual        : PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst DepositButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'primary orange')}\n        has_effect\n        text={localize('Deposit')}\n        // TODO: Redirect to Deposit page in Cashier\n        // onClick={redirectToCashierDeposit}\n    />\n);\n\nDepositButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { DepositButton };\n","export * from './account-info.jsx';\nexport * from './deposit-button.jsx';\nexport * from './install-pwa-button.jsx';\nexport * from './login-button.jsx';\nexport * from './upgrade-button.jsx';\nexport * from './menu-links.jsx';\nexport * from './toggle-menu-drawer.jsx';\nexport * from './toggle-notifications-drawer.jsx';\n","import classNames   from 'classnames';\nimport React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    className,\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className={classNames(className, 'primary orange')}\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    className   : PropTypes.string,\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        className={classNames(className, 'secondary orange')}\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <div className='menu-links'>\n            {\n                items.map((item, idx) => (\n                    <BinaryLink key={idx} to={item.link_to}>\n                        <span title={item.text}>{item.icon}{item.text}</span>\n                    </BinaryLink>\n                ))\n            }\n        </div>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu-drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ className, onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className={classNames(className, 'primary orange')}\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes-config';\nimport UILoader           from 'App/Components/Elements/ui-loader.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary-link.jsx';\nexport ButtonLink         from './button-link.jsx';\nexport default            from './binary-routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login-prompt.jsx';\nimport { default_title }   from '../../Constants/app-config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        // TODO: Combine portfolio and statement into reports page\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Reports'),\n        link_to: routes.statement,\n    },\n];\n\nexport default header_links;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account-password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api-token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized-applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier-password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial-assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login-history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal-details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self-exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n    }\n    routesConfig.push(route_default);\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import classNames               from 'classnames';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport { IconAccountsCurrency } from 'Assets/Header/AccountsCurrency';\nimport { IconLogout }           from 'Assets/Header/Drawer';\nimport { requestLogout }        from 'Services/index';\nimport { connect }              from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    handleLogout = () => {\n        this.props.toggle();\n        if (this.props.is_positions_drawer_on) {\n            this.props.togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        requestLogout();\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        if (this.props.account_loginid === loginid) return;\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n        // TODO: Once we allow other real accounts (apart from CR), assign correct title and group accounts into list with correct account title/types\n        // e.g - Real, Financial, Gaming, Investment\n\n        const main_account_title = localize('Real account');\n\n        return (\n            <div className='acc-switcher__list' ref={this.setWrapperRef}>\n                {\n                    // Make sure this block is not rendered if there are no real accounts\n                    !!(this.props.account_list.length > 0 && !(this.props.account_list[0].is_virtual)) &&\n                    <div className='acc-switcher__list-group'>\n                        <span className='acc-switcher__list-title'>\n                            {main_account_title}\n                        </span>\n                        {\n                            this.props.account_list.filter((accounts) => !accounts.is_virtual).map((account) => (\n                                <React.Fragment key={account.loginid}>\n                                    <div\n                                        className={classNames('acc-switcher__account', {\n                                            'acc-switcher__account--selected': (account.loginid === this.props.account_loginid),\n                                        })}\n                                        onClick={this.doSwitch.bind(this, account.loginid)}\n                                    >\n                                        <span className={'acc-switcher__id'}>\n                                            <IconAccountsCurrency\n                                                className={`acc-switcher__id-icon acc-switcher__id-icon--${account.icon}`}\n                                                type={account.icon}\n                                            />\n                                            {account.loginid}\n                                        </span>\n                                        <span className='acc-switcher__radio' />\n                                    </div>\n                                </React.Fragment>\n                            ))}\n\n                        {   // TODO: Add link to account opening page for upgrade or multi account page for new account.\n                            // Update text below for handling types of account to create :- e.g - Investment\n                            !!(this.props.is_upgrade_enabled && this.props.upgrade_info.can_open_multi) &&\n                            <div className='acc-switcher__new-account'>\n                                <span className='acc-switcher__new-account-title'>{localize('Add new account')}</span>\n                            </div>\n                        }\n                    </div>\n                }\n                <div className='acc-switcher__list--virtual'>\n                    <span className='acc-switcher__list-title'>\n                        {localize('Virtual account')}\n                    </span>\n                    <div\n                        className={classNames('acc-switcher__account', {\n                            'acc-switcher__account--selected': (this.props.virtual_loginid === this.props.account_loginid),\n                        })}\n                        onClick={this.doSwitch.bind(this, this.props.virtual_loginid)}\n                    >\n                        <span className={classNames('acc-switcher__id', 'acc-switcher__id--virtual')}>\n                            {this.props.virtual_loginid}\n                        </span>\n                        <span className='acc-switcher__radio' />\n                    </div>\n                </div>\n                { !!(this.props.is_upgrade_enabled && this.props.is_virtual) &&\n                <div className='acc-switcher__new-account'>\n                    <span className='acc-switcher__new-account-title'>{localize('Upgrade to Real Account')}</span>\n                </div>\n                }\n                <div className='acc-switcher__logout' onClick={this.handleLogout}>\n                    <span className='acc-switcher__logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='acc-switcher__logout-icon drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list          : PropTypes.array,\n    account_loginid       : PropTypes.string,\n    is_logged_in          : PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_upgrade_enabled    : PropTypes.bool,\n    is_virtual            : PropTypes.bool,\n    is_visible            : PropTypes.bool,\n    onClickUpgrade        : PropTypes.func,\n    toggle                : PropTypes.func,\n    togglePositionsDrawer : PropTypes.func,\n    upgrade_info          : PropTypes.object,\n    virtual_loginid       : PropTypes.string,\n};\n\nconst account_switcher = connect(\n    ({ client, ui }) => ({\n        account_list          : client.account_list,\n        account_loginid       : client.loginid,\n        is_logged_in          : client.is_logged_in,\n        is_virtual            : client.is_virtual,\n        switchAccount         : client.switchAccount,\n        upgrade_info          : client.upgrade_info,\n        virtual_loginid       : client.virtual_account_loginid,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        togglePositionsDrawer : ui.togglePositionsDrawer,\n\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","export * from './account-switcher.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full-page-modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","export default from './denial-of-service.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePositionsDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_positions_drawer_on) {\n                        togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePositionsDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { Scrollbars } from 'tt-react-custom-scrollbars';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({\n    children, is_contract_mode,\n    is_positions_drawer_on,\n}) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-positions-drawer': is_positions_drawer_on,\n            'app-contents--contract-mode'        : is_contract_mode,\n        })}\n    >\n        {/* Calculate height of user screen and offset height of header and footer */}\n        <Scrollbars\n            autoHide\n            style={{ height: 'calc(100vh - 83px)' }}\n        >\n            {children}\n        </Scrollbars>\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_positions_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ modules, ui }) => ({\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        is_contract_mode      : modules.smart_chart.is_contract_mode,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server-time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePositions,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_language_dialog_visible,\n    is_logged_in,\n    is_positions_drawer_on,\n    is_settings_dialog_on,\n    network_status,\n    togglePositionsDrawer,\n    toggleSettingsDialog,\n}) => (\n    <React.Fragment>\n        <div className='footer-links footer-links-left'>\n            {\n                is_logged_in &&\n                <TogglePositions\n                    is_positions_drawer_on={is_positions_drawer_on}\n                    togglePositionsDrawer={togglePositionsDrawer}\n                />\n            }\n        </div>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_language_visible={is_language_dialog_visible}\n                is_settings_visible={is_settings_dialog_on}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_positions_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePositionsDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        network_status            : common.network_status,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_positions_drawer_on    : ui.is_positions_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        togglePositionsDrawer     : ui.togglePositionsDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { withRouter }  from 'react-router';\nimport { formatMoney } from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    DepositButton,\n    InstallPWAButton,\n    LoginButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    UpgradeButton }    from 'App/Components/Layout/Header';\nimport header_links    from 'App/Constants/header-links';\nimport { connect }     from 'Stores/connect';\n\nconst Header = ({\n    balance,\n    can_upgrade,\n    can_upgrade_to,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    is_virtual,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-info__container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                className='acc-info__button'\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    is_virtual={is_virtual}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                                { !!(can_upgrade_to && is_virtual) &&\n                                <UpgradeButton className='acc-info__button' />\n                                }\n                                { !(is_virtual) &&\n                                <DepositButton className='acc-info__button' />\n                                }\n                            </React.Fragment>\n                            :\n                            <LoginButton className='acc-info__button' />\n                        }\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    can_upgrade_to           : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool,\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    is_virtual               : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func,\n    pwa_prompt_event         : PropTypes.object, // TODO: add click handler\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        can_upgrade_to           : client.can_upgrade_to,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        is_virtual               : client.is_virtual,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export ChartSettings    from './settings-chart.jsx';\nexport GeneralSettings  from './settings-general.jsx';\nexport LanguageSettings from './settings-language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__chart-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconCountryFlag } from 'Assets/Common';\nimport { connect }         from 'Stores/connect';\nimport SettingsControl     from '../../Components/Elements/SettingsDialog/settings-control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='settings-dialog__tab-content'>\n        <div className='settings-dialog__general-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <IconCountryFlag\n                    className={'settings-dialog__language-flag'}\n                    type={(curr_language || 'EN').toLowerCase()}\n                />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language-dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network-monitor';\nimport OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base-name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error-boundary.jsx';\nimport PositionsDrawer             from './Components/Elements/PositionsDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast-message.jsx';\nimport AppContents                 from './Containers/Layout/app-contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <React.Fragment>\n                <div className='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PositionsDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer className='footer'>\n                    <Footer />\n                </footer>\n            </React.Fragment>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className={classNames(classNamePath, 'color1-fill')} d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='rgba(0, 0, 0, 0.8)' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3.613 8.5l3.26 3.668a.5.5 0 1 1-.747.664l-4-4.5a.5.5 0 0 1 0-.664l4-4.5a.5.5 0 0 1 .748.664L3.614 7.5H13.5a.5.5 0 1 1 0 1H3.613z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconCalendarToday = ({ className, classNamePath, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <path className={classNamePath || 'color1-fill'} fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 3v.5a.5.5 0 0 1-1 0V3H2v2h12V3h-2v.5a.5.5 0 1 1-1 0V3H5zm0-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 6v8h12V6H2zm8.354 5.146a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 0 1 .708.708L9.207 10l1.147 1.146zm-3 0a.5.5 0 0 1-.708.708l-1.5-1.5a.5.5 0 0 1 0-.708l1.5-1.5a.5.5 0 1 1 .708.708L6.207 10l1.147 1.146z' />\n    </svg>\n);\n\nIconCalendarToday.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n    onClick      : PropTypes.func,\n};\n\nexport { IconCalendarToday };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCalendar = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={classNames('inline-icon', className)}\n        onClick={onClick}\n    >\n        <path className='color1-fill' fill='#000' fillOpacity='.8' fillRule='nonzero' d='M4 3H2v11h12V3h-2v.5a.5.5 0 1 1-1 0V3H5v.5a.5.5 0 0 1-1 0V3zm1-1h6v-.5a.5.5 0 1 1 1 0V2h2a1 1 0 0 1 1 1v11a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V3a1 1 0 0 1 1-1h2v-.5a.5.5 0 0 1 1 0V2zM2 5h12v1H2V5z' />\n    </svg>\n);\n\nIconCalendar.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconCalendar };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M4.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L4.247 8zm8.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L8.247 8l4.587 4.128z' />\n    </svg>\n);\n\nIconChevronDoubleLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronDoubleRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M7.753 8L3.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L7.753 8zm4 0L7.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L11.753 8z' />\n    </svg>\n);\n\nIconChevronDoubleRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronDoubleRight };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronLeft = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M6.247 8l4.587 4.128a.5.5 0 0 1-.668.744l-5-4.5a.5.5 0 0 1 0-.744l5-4.5a.5.5 0 0 1 .668.744L6.247 8z' />\n    </svg>\n);\n\nIconChevronLeft.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronLeft };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconChevronRight = ({ className, classNamePath }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16'>\n        <path className={classNamePath || 'color1-fill'} fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M9.753 8L5.166 3.872a.5.5 0 0 1 .668-.744l5 4.5a.5.5 0 0 1 0 .744l-5 4.5a.5.5 0 1 1-.668-.744L9.753 8z' />\n    </svg>\n);\n\nIconChevronRight.propTypes = {\n    className    : PropTypes.string,\n    classNamePath: PropTypes.string,\n};\n\nexport { IconChevronRight };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClear = ({ className, onClick }) => (\n    <svg\n        className={className || undefined}\n        onClick={onClick}\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        viewBox='0 0 12 12'\n    >\n        <path d='M6 0a6 6 0 1 0 0 12A6 6 0 1 0 6 0zm2.406 7.815a.422.422 0 0 1-.598.596L6 6.598 4.192 8.41a.419.419 0 0 1-.597 0 .422.422 0 0 1 0-.596L5.404 6l-1.81-1.815a.422.422 0 0 1 .597-.596L6 5.402l1.808-1.814a.422.422 0 0 1 .598.596L6.596 6l1.81 1.815z' fill='#B0B3BF' fillRule='evenodd' />\n    </svg>\n);\n\nIconClear.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClear };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconClock = ({ className, onClick }) => (\n    <svg\n        xmlns='http://www.w3.org/2000/svg'\n        width='16'\n        height='16'\n        className={className}\n        onClick={onClick}\n    >\n        <g fill='none' fillRule='nonzero' stroke='#5C5C5C'>\n            <circle cx='8' cy='8' r='7.5' />\n            <path strokeLinecap='round' strokeLinejoin='round' d='M8 3.5v5h3.5' />\n        </g>\n    </svg>\n);\n\nIconClock.propTypes = {\n    className: PropTypes.string,\n    onClick  : PropTypes.func,\n};\n\nexport { IconClock };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCountryFlag = ({ type, className }) => {\n    let IconCountry;\n    if (type) {\n        switch (type) {\n            case 'de':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#333' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#FFCD00' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#F10000' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'es':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#DD172C' mask='url(#b)' d='M0 0h24v4H0zm0 12h24v4H0z' />\n                            <path fill='#FFD133' mask='url(#b)' d='M0 4h24v8H0z' />\n                            <g mask='url(#b)'>\n                                <path fill='#FFEDB1' d='M5.333 7.333h1.334V8H5.333z' />\n                                <path d='M4.054 7.3l.167 2.007a1.138 1.138 0 0 0 1.112 1.026c.566 0 1.065-.461 1.112-1.026L6.613 7.3c.014-.174-.105-.3-.288-.3H4.341c-.176 0-.301.133-.287.3z' stroke='#A41517' strokeWidth='.667' />\n                                <path fill='#A41517' d='M4 8h2.667v.667H6L5.333 10l-.666-1.333H4zM2 6h1.333v4.667H2zm5.333 0h1.333v4.667H7.333zM4 5.333c0-.368.306-.666.673-.666h1.32c.372 0 .674.296.674.666v.33A.33.33 0 0 1 6.34 6H4.327A.327.327 0 0 1 4 5.664v-.33z' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'fr':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#001F9B' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF002D' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'id':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#E12237' mask='url(#b)' d='M0 0h24v8H0z' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 8h24v8H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'it':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#1BB65D' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#E43D4C' mask='url(#b)' d='M16 0h8v16h-8z' />\n                            <path fill='#FFF' mask='url(#b)' d='M8 0h8v16H8z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'pl':\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M0 14.16c0 1.01.805 1.827 1.797 1.827h20.406c.992 0 1.797-.818 1.797-1.826V8H0v6.16z' fill='#F44336' />\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84V8h24V1.84C24 .83 23.195.012 22.203.012z' fill='#FFF' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n            case 'pt':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#128415' mask='url(#b)' d='M0 0h8v16H0z' />\n                            <path fill='#FF2936' mask='url(#b)' d='M8 0h16v16H8z' />\n                            <circle stroke='#FAF94F' mask='url(#b)' cx='8' cy='8' r='3.5' />\n                            <g mask='url(#b)'>\n                                <path d='M6.5 6.341c0-.188.145-.341.333-.341h2.334c.184 0 .333.152.333.341v2.327C9.5 9.404 8.907 10 8.175 10h-.35C7.093 10 6.5 9.41 6.5 8.668V6.341z' fill='#FFF' />\n                                <path d='M8 8.92c.414 0 .75-1.086.75-1.5a.75.75 0 1 0-1.5 0c0 .414.336 1.5.75 1.5z' fill='#1D50B5' />\n                            </g>\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'ru':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <path fill='#FFF' mask='url(#b)' d='M0 0h24v5H0z' />\n                            <path fill='#E53B35' mask='url(#b)' d='M0 11h24v5H0z' />\n                            <path fill='#0C47B7' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'th':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#F12532' xlinkHref='#a' />\n                            <path fill='#FFF' mask='url(#b)' d='M0 3h24v10H0z' />\n                            <path fill='#322B6C' mask='url(#b)' d='M0 5h24v6H0z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'vi':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <use fill='#EA403F' xlinkHref='#a' />\n                            <path fill='#FFFE4E' mask='url(#b)' d='M12 10.45l-2.939 2.095 1.084-3.442-2.9-2.148 3.609-.033L12 3.5l1.146 3.422 3.61.033-2.901 2.148 1.084 3.442z' />\n                            <rect strokeOpacity='.04' stroke='#000' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_cn':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M7.742 7.186h1.04V13h-1.04V7.186zm7.453 5.77h-.952l-.255-.927.996.032c.244 0 .366-.161.366-.474V6.883h-4.11v-.938h5.15v5.922c0 .723-.399 1.09-1.196 1.09zM9.968 7.64h4.175v4.207H9.968V7.639zm3.2 3.355v-.863h-2.203v.863h2.203zM10.965 9.31h2.203v-.842h-2.203v.842zM9.082 5.503c.576.496 1.019.938 1.329 1.327l-.775.517c-.333-.41-.776-.863-1.33-1.38l.776-.464zm-.3-.874a7.406 7.406 0 0 1-.896 1.23L7 5.298C7.664 4.586 8.13 3.82 8.417 3l1.02.216c-.067.183-.145.356-.211.518h2.746v.895h-1.461c.232.324.42.636.564.917l-.93.334a9.512 9.512 0 0 0-.73-1.251h-.632zm4.707 0a6.6 6.6 0 0 1-.686 1.068l-.886-.561c.543-.658.93-1.37 1.152-2.125l1.007.216c-.066.172-.121.345-.177.507H17v.895h-1.661c.21.291.387.572.531.83l-.93.335a9.04 9.04 0 0 0-.697-1.165h-.754z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            case 'zh_tw':\n                IconCountry = (\n                    <React.Fragment>\n                        <defs>\n                            <rect id='a' width='24' height='16' rx='2' />\n                        </defs>\n                        <g fill='none' fillRule='evenodd'>\n                            <mask id='b' fill='#fff'>\n                                <use xlinkHref='#a' />\n                            </mask>\n                            <rect strokeOpacity='.04' stroke='#000' fill='#ED3C3C' mask='url(#b)' x='.5' y='.5' width='23' height='15' rx='2' />\n                            <path d='M8.602 4.413c-.13.151-.26.302-.38.432h3.605c0 .431-.011.83-.033 1.175h.617v.648h-.67l-.098.68h.444v.528h-.563c-.022.065-.033.119-.054.173l.314.237c-.585.291-1.18.54-1.786.744a165.06 165.06 0 0 1 2.23-.075c.454-.227.908-.475 1.374-.734l.725.475a18.267 18.267 0 0 1-4.091 1.683 126.13 126.13 0 0 0 4.177-.248c-.238-.173-.487-.356-.746-.53l.725-.441c1.028.647 1.818 1.208 2.37 1.704l-.812.561a12.63 12.63 0 0 0-.768-.69c-.93.054-1.818.108-2.663.15v1.263c0 .56-.335.852-.995.852h-1.018l-.173-.82c.314.033.617.054.899.054.205 0 .313-.108.313-.302v-1.003c-1.287.065-2.478.108-3.56.14l-.217-.841c.282.01.552.021.823.021.78-.162 1.59-.42 2.446-.766l-2.468.087-.151-.712c.368 0 .617-.033.768-.097a12.58 12.58 0 0 0 1.44-.637c.021-.086.054-.173.075-.248H7.574c.075-.41.14-.81.205-1.208h-.703V6.02h.779c.043-.312.076-.614.097-.916a6.4 6.4 0 0 1-.422.366L7 4.834c.595-.442 1.115-1.047 1.548-1.823l.844.183c-.098.173-.195.345-.292.507h3.181v.712h-3.68zm0 2.168l-.13.766h1.656a7.341 7.341 0 0 0-1.147-.41l.227-.356h-.606zm1.558.766h.671a9.43 9.43 0 0 0 .13-.766h-1.71c.422.12.8.249 1.147.4l-.238.366zm.844-1.219l.033-.766H8.742c-.021.26-.054.518-.086.766h1.504a6.009 6.009 0 0 0-1.017-.399l.249-.356c.39.108.757.26 1.093.432l-.206.323h.725zm2.587-1.337a3.23 3.23 0 0 0 .941 1.424c.347-.41.617-.885.79-1.424h-1.731zm.335 1.985a4.244 4.244 0 0 1-.876-1.316 7.07 7.07 0 0 1-.52.582l-.54-.647c.562-.583 1.049-1.381 1.46-2.395l.877.194c-.108.28-.227.54-.346.788h2.813v.809h-.627c-.195.776-.52 1.413-.953 1.93.498.324 1.093.594 1.786.82l-.465.81c-.78-.28-1.429-.615-1.948-1.004-.542.432-1.202.745-1.96.95l-.475-.745c.714-.172 1.298-.431 1.774-.776zm-.173 4.347c1.082.259 2.078.583 2.976.97l-.519.81a16.903 16.903 0 0 0-2.965-1.025l.508-.755zm-3.798.043l.54.615c-.8.453-1.785.83-2.943 1.133l-.379-.799c1.126-.237 2.056-.56 2.782-.949z' fill='#FFF' mask='url(#b)' />\n                        </g>\n                    </React.Fragment>\n                );\n                break;\n            default: // en\n                IconCountry = (\n                    <g fill='none' fillRule='evenodd'>\n                        <g fillRule='nonzero'>\n                            <path d='M22.203.013H1.797C.805.013 0 .831 0 1.84v12.322c0 1.008.805 1.826 1.797 1.826h20.406c.992 0 1.797-.818 1.797-1.826V1.839C24 .831 23.195.013 22.203.013z' fill='#0D47A1' />\n                            <path d='M23.975 1.537A1.806 1.806 0 0 0 22.203.013h-.468l-7.666 5.102V.013H9.931v5.102L2.265.013h-.468C.906.013.167.673.025 1.537l6.552 4.361H0v4.204h6.577l-6.552 4.36a1.806 1.806 0 0 0 1.772 1.525h.468l7.666-5.102v5.102h4.138v-5.102l7.666 5.102h.468c.891 0 1.63-.66 1.772-1.524l-6.552-4.361H24V5.898h-6.577l6.552-4.36z' fill='#FFF' />\n                            <path d='M13.241.013V6.74H24v2.52H13.241v6.726H10.76V9.26H0V6.74h10.759V.013h2.482zM1.162 15.87a1.8 1.8 0 0 1-.73-.52l7.956-5.247h1.52L1.162 15.87zm15.075-5.767l7.527 4.963a1.82 1.82 0 0 1-.576.623l-8.471-5.586h1.52zM.19 1.022C.316.767.5.545.725.374l8.378 5.525h-1.52L.19 1.023zm15.399 4.876h-1.52L22.824.125a1.8 1.8 0 0 1 .735.517l-7.97 5.256z' fill='#F44336' />\n                        </g>\n                        <rect strokeOpacity='.04' stroke='#000' x='.5' y='.5' width='23' height='15' rx='2' />\n                    </g>\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='24' height='16' viewBox='0 0 24 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconCountry}\n        </svg>\n\n    );\n};\n\nIconCountryFlag.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconCountryFlag };\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport { IconError };\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconInfoBlue = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#2196F3' />\n            <g fill='#FFF' transform='translate(6.5 4)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <rect width='2' height='5' x='.5' y='3' rx='1' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconInfoBlue.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoBlue };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconInfoOutline = ({ className, onMouseEnter, onMouseLeave }) => (\n    <svg\n        className={classNames('inline-icon', className)}\n        height='16'\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        viewBox='0 0 16 16'\n        width='16'\n        xmlns='http://www.w3.org/2000/svg'\n    >\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.16)' fillRule='evenodd' d='M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16zM8 6a.75.75 0 1 0 0-1.5A.75.75 0 0 0 8 6zm0 1a.5.5 0 0 0-.5.5v4a.5.5 0 1 0 1 0v-4A.5.5 0 0 0 8 7z' />\n    </svg>\n);\n\nIconInfoOutline.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconInfoOutline };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinimize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#000' fillOpacity='0.8' fillRule='nonzero' d='M0 7h16v2H0z' />\n    </svg>\n);\n\nIconMinimize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMinimize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMinus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='rgba(0, 0, 0, 0.8)' fillRule='evenodd' d='M3 7.5h10v1H3z' />\n    </svg>\n);\n\nIconMinus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconMinus };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPlus = ({ className, is_disabled }) => (\n    <svg className={classNames('inline-icon', className, { disabled: is_disabled })} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#5C5C5C' fillRule='evenodd' d='M8.5 7.5H13v1H8.5V13h-1V8.5H3v-1h4.5V3h1v4.5z' />\n    </svg>\n\n);\n\nIconPlus.propTypes = {\n    className  : PropTypes.string,\n    is_disabled: PropTypes.bool,\n};\n\nexport { IconPlus };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconQuestion = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='#FFF' fillRule='evenodd'>\n            <path d='M8 16A8 8 0 1 1 8 0a8 8 0 0 1 0 16zm0-1A7 7 0 1 0 8 1a7 7 0 0 0 0 14z' fillRule='nonzero' />\n            <path d='M7.39 9.518c.007-.373.052-.668.134-.885.082-.216.25-.456.503-.72l.646-.636c.276-.298.415-.618.415-.96 0-.33-.09-.588-.272-.774-.18-.187-.444-.28-.789-.28-.335 0-.605.084-.809.254a.842.842 0 0 0-.306.682H6c.007-.508.196-.918.57-1.23.373-.313.859-.469 1.457-.469.622 0 1.106.16 1.453.478.347.318.52.755.52 1.31 0 .55-.266 1.091-.799 1.625l-.538.508c-.24.255-.36.62-.36 1.097h-.912zm-.039 1.492a.5.5 0 0 1 .136-.355c.09-.096.224-.144.402-.144.178 0 .312.048.404.144a.493.493 0 0 1 .139.355.477.477 0 0 1-.139.351c-.092.093-.226.139-.404.139-.178 0-.312-.046-.402-.139a.481.481 0 0 1-.136-.35z' />\n        </g>\n    </svg>\n);\n\nIconQuestion.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuestion };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconRedDot = ({ className }) => (\n    <svg className={className} width='4' height='4' xmlns='http://www.w3.org/2000/svg'>\n        <circle cx='1163' cy='626' r='2' transform='translate(-1161 -624)' fill='#E31C4B' fillRule='nonzero' />\n    </svg>\n);\n\nIconRedDot.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconRedDot };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconSuccess = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4CAF50' />\n            <path fill='#FFF' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconSuccess.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSuccess };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconWarning = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3a1 1 0 0 1 1 1v3a1 1 0 1 1-2 0V4a1 1 0 0 1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconWarning.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconWarning };\n","export * from './icon-arrow.jsx';\nexport * from './icon-back.jsx';\nexport * from './icon-calendar-today.jsx';\nexport * from './icon-calendar.jsx';\nexport * from './icon-chevron-double-left.jsx';\nexport * from './icon-chevron-double-right.jsx';\nexport * from './icon-chevron-left.jsx';\nexport * from './icon-chevron-right.jsx';\nexport * from './icon-country-flag.jsx';\nexport * from './icon-clear.jsx';\nexport * from './icon-clock.jsx';\nexport * from './icon-close.jsx';\nexport * from './icon-exclamation.jsx';\nexport * from './icon-info-blue.jsx';\nexport * from './icon-info-outline.jsx';\nexport * from './icon-minimize.jsx';\nexport * from './icon-minus.jsx';\nexport * from './icon-plus.jsx';\nexport * from './icon-question.jsx';\nexport * from './icon-red-dot.jsx';\nexport * from './icon-success.jsx';\nexport * from './icon-warning.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport classNames        from 'classnames';\n\nconst IconPositions = ({ className }) => {\n    const IconType = (\n        <g fill='none' fillRule='evenodd'>\n            <path className='color1-fill color3-fill' fill='#000' fillOpacity='.8' fillRule='evenodd' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2zM1 8.128V12.5a.5.5 0 0 0 .5.5h13a.5.5 0 0 0 .5-.5V8.128l-2.804 1.557a2.5 2.5 0 0 1-1.214.315H5.018a2.5 2.5 0 0 1-1.214-.315L1 8.128zm0-1.144L4.29 8.81A1.5 1.5 0 0 0 5.018 9h5.964a1.5 1.5 0 0 0 .728-.189L15 6.984V3.5a.5.5 0 0 0-.5-.5h-13a.5.5 0 0 0-.5.5v3.484zM6.5 8a.5.5 0 0 1 0-1h3a.5.5 0 0 1 0 1h-3z' />\n        </g>\n    );\n\n    return (\n        <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n            {IconType}\n        </svg>\n    );\n};\n\nIconPositions.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPositions };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","export * from './icon-maximize.jsx';\nexport * from './icon-positions.jsx';\nexport * from './icon-settings.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconAccountsCurrency = ({ type, className }) => {\n    let IconCurrency;\n    if (type) {\n        switch (type) {\n            case 'aud':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#FFF'>\n                            <path d='M6.853 15.319l.674-.84-1.04.188-.362-1.008-.393 1.008-1.062-.188.675.821-.701.821 1.069-.168.36.988.393-.987 1.09.194zM14.819 16.06l.382-.475-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.606-.095.204.56.222-.56.618.111zM14.819 5.542l.382-.477-.59.107-.205-.57-.222.57-.603-.107.383.466-.397.465.606-.095.204.56.222-.56.618.11zM17.291 8.263l.382-.476-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11zM12.68 9.473l.382-.476-.59.107-.204-.572-.223.572-.602-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11z' />\n                        </g>\n                        <g fill='#283991'>\n                            <path d='M2.099 3.87c-.157.202-.307.41-.448.623h1.07L2.1 3.87zM7.26 9.993h.962l-.963-.962zM4.068 1.947c-.23.169-.45.348-.664.536l.664.663v-1.2zM3.105 9.993h.963V9.03zM9.993 0c-.948 0-1.864.135-2.734.382v2.764L9.993.412V0zM9.993 9.072V7.684H8.606zM.412 9.993l2.31-2.309H.272A10.004 10.004 0 0 0 0 9.994h.412zM8.605 4.493h1.388V3.105z' />\n                        </g>\n                        <g fill='#FFF'>\n                            <path d='M9.993 9.363v-.291L8.606 7.684h1.387v-.496H7.818zM2.722 4.493H1.65c-.107.162-.209.328-.307.497H3.45l-1.25-1.25a9.019 9.019 0 0 0-.1.13l.623.623zM4.068 9.03v.963h.497v-1.69l-1.69 1.69h.23zM7.26.382c-.168.047-.334.099-.497.155v3.336l3.23-3.23v-.23L7.26 3.146V.382zM4.05 7.684l.018-.017.48-.48H.401c-.048.165-.091.33-.13.497h2.45l-2.31 2.31h1.33l2.309-2.31z' />\n                            <path d='M.412 9.993l2.31-2.309-2.31 2.31zM9.993 4.99v-.497H8.605l1.388-1.388v-1.33L6.78 4.99z' />\n                            <path d='M9.993 3.105L8.605 4.493l1.388-1.388zM4.068 3.146l-.664-.663c-.235.207-.461.425-.676.653l1.34 1.34.014.015.483.482V1.605c-.169.11-.335.222-.497.342v1.2zM7.26 9.03l.962.963H9.49L6.763 7.266v2.727h.496z' />\n                        </g>\n                        <path d='M4.068 4.476l.034.034-.034-.034z' fill='#D32030' />\n                        <path d='M8.314 7.684l-.496-.496h2.175V4.99H6.78l-.016.017V4.99h.016l3.214-3.214V.643l-3.23 3.23V.537a9.957 9.957 0 0 0-2.198 1.068v3.368l.017.017h-.017v-.017l-.483-.482.003.002h-.017v-.017l-1.34-1.34c-.184.195-.36.396-.528.605L3.449 4.99H1.344a9.918 9.918 0 0 0-.942 2.198h4.145l.018-.018v.018h-.018l-.479.48v.017h-.017L1.74 9.993h1.134l1.69-1.69v1.69h2.198V7.266L9.49 9.993h.375c.043-.044.087-.089.129-.135v-.495l-1.68-1.679z' fill='#F44336' />\n                        <path fill='#D32030' d='M6.763 3.873l3.23-3.23zM4.092 7.709v-.042l-.041.042zM4.589 7.17l-.042.042h.042zM6.763 5.03l.04-.04h-.04zM4.068 4.517h.04l-.006-.007-.034-.034zM4.606 5.013l-.041-.04v.04z' />\n                    </g>\n                );\n                break;\n            case 'bch':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#8DC351' cx='10' cy='10' r='10' />\n                        <path d='M13.254 6.584c-.485-1.233-1.7-1.344-3.117-1.069l-.505-1.758-1.07.307.492 1.712c-.281.08-.568.169-.852.256L7.708 4.31l-1.07.306.504 1.758c-.23.071-.456.141-.678.205l-.002-.006-1.476.423.328 1.144s.786-.243.777-.224c.433-.124.646.087.75.292l.575 2.003a.951.951 0 0 1 .115-.025l-.113.032.804 2.807c.02.142.002.382-.3.47.017.008-.779.222-.779.222l.155 1.34 1.392-.4c.26-.074.516-.142.766-.213l.51 1.778 1.07-.306-.505-1.76c.287-.075.573-.155.858-.237l.501 1.752 1.07-.307-.508-1.775c1.77-.62 2.899-1.434 2.57-3.169-.263-1.396-1.077-1.82-2.169-1.772.53-.494.758-1.161.401-2.063zm-.406 4.231c.381 1.33-1.937 1.83-2.662 2.04l-.676-2.357c.725-.208 2.94-1.069 3.338.318v-.001zm-1.451-3.181c.346 1.21-1.592 1.612-2.196 1.785l-.613-2.137c.604-.173 2.447-.909 2.809.352z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'btc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#F7931A' cx='10' cy='10' r='10' />\n                        <path d='M14.493 8.762c.196-1.31-.802-2.014-2.165-2.484l.442-1.775-1.08-.269-.431 1.729c-.284-.072-.575-.138-.866-.204l.434-1.74-1.08-.269-.442 1.774c-.235-.053-.466-.106-.69-.162l.001-.006-1.49-.372-.287 1.154s.802.184.785.195c.437.11.516.399.503.629l-.504 2.022a.96.96 0 0 1 .113.035l-.115-.028-.706 2.833c-.054.132-.19.332-.496.256.012.016-.785-.196-.785-.196l-.536 1.237 1.406.35c.262.066.518.135.77.199l-.447 1.795 1.08.269.442-1.775c.295.08.581.153.861.223l-.441 1.767 1.08.27.447-1.792c1.842.349 3.227.208 3.81-1.458.47-1.341-.023-2.116-.992-2.62.706-.163 1.237-.627 1.38-1.587zm-2.469 3.462c-.333 1.342-2.592.616-3.325.434l.594-2.378c.733.183 3.08.545 2.731 1.944zm.335-3.48c-.305 1.22-2.185.6-2.794.447l.537-2.156c.61.152 2.574.435 2.257 1.708z' fill='#FFF' />\n                    </g>\n                );\n                break;\n            case 'dai':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle stroke='#F7B14A' strokeWidth='.625' cx='10' cy='10' r='9.688' />\n                        <path fill='#FFCC80' d='M3.75 10H10v6.25z' />\n                        <path fill='#FFB74D' d='M10 3.75v8.125L3.75 10z' />\n                        <path fill='#FFF' d='M5.625 10L10 5.625v2.5L8.125 10z' />\n                        <path fill='#F7C57B' d='M16.25 10H10v6.25z' />\n                        <path fill='#F7B14A' d='M10 3.75v8.125L16.25 10z' />\n                        <path fill='#FFF' d='M14.375 10L10 5.625v2.5L11.875 10z' />\n                    </g>\n                );\n                break;\n            case 'eth' :\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#EBF0F1' cx='10' cy='10' r='10' />\n                        <g fill='#12100B'>\n                            <path fillOpacity='.8' d='M10.311 2.5v10.353l4.686-2.715z' />\n                            <path fillOpacity='.45' d='M10.311 2.5l-4.686 7.638 4.686 2.718z' />\n                            <path fillOpacity='.8' d='M10.311 13.73v3.767L15 11.01z' />\n                            <path fillOpacity='.45' d='M10.311 17.497v-3.768L5.625 11.01z' />\n                            <path fillOpacity='.6' d='M10.311 12.858l4.686-2.72-4.686-2.093zM5.625 10.137l4.686 2.721V8.045z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'eur':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z' fill='#283991' />\n                        <path d='M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z' fill='#283991' />\n                        <g fill='#F8D12E'>\n                            <path d='M9.976 1.733l.244.75h.789l-.639.464.244.75-.638-.464-.638.464.244-.75-.639-.464h.79zM9.976 15.894l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM13.862 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM16.514 5.604l.244.75h.789l-.639.464.244.75-.638-.463-.638.463.244-.75-.639-.464h.79zM16.577 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.639-.464h.79zM3.534 5.604l.244.75h.788l-.638.464.244.75-.638-.463-.638.463.243-.75-.638-.464h.79zM17.129 8.757l.243.75h.79l-.639.463.244.75-.638-.463-.639.464.244-.75-.638-.464h.789zM2.931 8.757l.244.75h.789l-.639.463.244.75-.638-.463-.638.464.244-.75-.638-.464h.788zM3.448 12.214l.244.75h.789l-.638.464.243.75-.638-.463-.638.463.244-.75-.638-.464h.789zM13.977 14.942l.243.75h.79l-.639.464.244.75-.638-.464-.639.464.244-.75-.638-.464h.79zM6.215 2.988l.244.75h.789l-.638.464.244.75-.639-.463-.638.463.244-.75-.638-.464h.789zM5.928 14.894l.243.75h.79l-.639.464.244.75-.638-.464-.638.464.243-.75-.638-.464h.789z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'gbp':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <g fill='#283991'>\n                            <path d='M2.067 3.912a9.964 9.964 0 0 0-1.723 3.48h5.203l-3.48-3.48zM19.656 7.391a9.964 9.964 0 0 0-1.723-3.48l-3.48 3.48h5.203zM.344 12.609a9.965 9.965 0 0 0 1.723 3.48l3.48-3.48H.344zM16.088 2.067a9.964 9.964 0 0 0-3.48-1.723v5.203l3.48-3.48zM3.912 17.933a9.964 9.964 0 0 0 3.48 1.723v-5.203l-3.48 3.48zM7.391.344a9.965 9.965 0 0 0-3.48 1.723l3.48 3.48V.344zM12.609 19.656a9.965 9.965 0 0 0 3.48-1.723l-3.48-3.48v5.203zM14.453 12.609l3.48 3.48a9.964 9.964 0 0 0 1.723-3.48h-5.203z' />\n                        </g>\n                        <g fill='#F44336'>\n                            <path d='M19.915 8.696h-8.61V.085a10.1 10.1 0 0 0-2.61 0v8.61H.086a10.1 10.1 0 0 0 0 2.61h8.61v8.61a10.099 10.099 0 0 0 2.61 0v-8.61h8.61a10.099 10.099 0 0 0 0-2.61z' />\n                            <path d='M12.609 12.609l4.462 4.462c.205-.205.401-.42.588-.642l-3.82-3.82h-1.23zM7.391 12.609L2.93 17.07c.205.205.42.401.642.588l3.82-3.82v-1.23zM7.394 7.391L2.932 2.93c-.206.205-.401.42-.588.642l3.82 3.82h1.23zM12.609 7.391L17.07 2.93c-.205-.205-.42-.401-.642-.588l-3.82 3.82v1.23z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'ltc':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <circle fill='#BFBBBB' cx='10' cy='10' r='10' />\n                        <path fill='#FFF' d='M6.517 12.009l-.892.346.43-1.724.902-.363L8.258 5h3.206l-.95 3.873.882-.357-.425 1.718-.892.357-.53 2.177h4.826L13.829 15H5.783z' />\n                    </g>\n                );\n                break;\n            case 'usd':\n                IconCurrency = (\n                    <g fill='none' fillRule='evenodd'>\n                        <circle fill='#FFF' cx='10' cy='10' r='10' />\n                        <path d='M12.18 1.833h3.583A9.951 9.951 0 0 0 10.578.018h-.308c.906.114 1.323.783 1.91 1.815zm.926 3.628h5.799a9.976 9.976 0 0 0-1.186-1.814h-5.066c.179.564.33 1.173.453 1.814zm6.839 3.629a9.913 9.913 0 0 0-.331-1.814h-6.19c.062.594.103 1.202.123 1.814h6.398zm-.345 3.629a9.885 9.885 0 0 0 .341-1.814h-6.24c-.022.612-.064 1.22-.127 1.814h6.025zm-6.789 3.629h4.865a9.985 9.985 0 0 0 1.203-1.815h-5.61a15.76 15.76 0 0 1-.458 1.815zm-2.818 3.627a9.845 9.845 0 0 0 5.698-1.812h-3.616c-.642 1.122-1.066 1.812-2.082 1.812z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M4.223 1.833h8.288C11.924.8 11.176.132 10.27.018h-.861a9.95 9.95 0 0 0-5.186 1.815zM2.268 3.647A9.983 9.983 0 0 0 1.082 5.46H13.73a15.962 15.962 0 0 0-.453-1.814H2.267zM.041 9.09h14.077c-.02-.612-.062-1.22-.124-1.814H.373A9.9 9.9 0 0 0 .04 9.09zm.346 3.629H13.99a25.53 25.53 0 0 0 .127-1.814H.046a9.87 9.87 0 0 0 .341 1.814zm.721 1.814a9.97 9.97 0 0 0 1.202 1.815h10.952c.18-.564.334-1.173.458-1.815H1.108zm8.462 5.433l.061.002c.12.004.24.007.362.007 1.016 0 1.845-.69 2.487-1.813H4.295a9.843 9.843 0 0 0 5.275 1.804z' fill='#F44336' fillRule='nonzero' />\n                        <path d='M9.787.005A9.99 9.99 0 0 0 .043 9.093h9.744V.005z' fill='#283991' fillRule='nonzero' />\n                        <path fill='#EFEFEF' fillRule='nonzero' d='M2 5.65l.152.468h.493l-.399.289.152.468L2 6.585l-.4.29.153-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.399.289.152.468L2 8.238l-.4.29.153-.468-.399-.29h.493zM3.656 3.17l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.468-.399-.29h.494zm0 1.653l.152.468h.493l-.399.29.153.468-.399-.29-.399.29.152-.469-.399-.289h.494zm0 1.653l.152.468h.493l-.399.29.153.467-.399-.289-.399.29.152-.469-.399-.289h.494zM.742 7.701L.59 7.233l.398-.289H.496L.484 6.91a9.53 9.53 0 0 0-.148.507l.007-.005.399.29zM1.6 5.222l.4-.29.398.29-.152-.468.399-.29h-.493l-.153-.467-.152.468h-.182a9.409 9.409 0 0 0-.099.154l.187.135-.152.468zm2.056-2.769l.399.29-.153-.468.4-.29h-.286a9.92 9.92 0 0 0-.7.573l-.06.185.4-.29zm1.258-.537l.398-.29.4.29-.153-.468.399-.289h-.493l-.021-.063a9.895 9.895 0 0 0-.494.268l.116.084-.152.468zm.398.428l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.398.29.152-.468-.4-.29h.494zm1.657-5.786l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.468-.399-.29h.493zm0 1.653l.152.468h.493l-.398.29.152.468-.4-.29-.398.29.152-.469-.399-.289h.493zm0 1.653l.152.468h.493l-.398.29.152.467-.4-.289-.398.29.152-.469-.399-.289h.493zM8.625.691l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.289h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.29.153.467-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494zm0 1.653l.153.468h.493l-.4.289.153.468-.399-.29-.399.29.153-.468-.4-.29h.494z' />\n                    </g>\n                );\n                break;\n            case 'ust':\n                IconCurrency = (\n                    <g fillRule='nonzero' fill='none'>\n                        <path d='M10 0c5.523 0 10 4.477 10 10s-4.478 10-10 10S0 15.524 0 10 4.477 0 10 0' fill='#53AE94' />\n                        <path d='M11.234 8.668V7.18h3.402V4.913H5.373V7.18h3.402v1.486c-2.765.127-4.844.675-4.844 1.331 0 .656 2.08 1.204 4.844 1.331v4.765h2.46v-4.765c2.76-.127 4.835-.675 4.835-1.33s-2.075-1.203-4.835-1.33m0 2.256c-.07.004-.426.025-1.22.025-.635 0-1.081-.018-1.239-.026v.002c-2.443-.108-4.266-.534-4.266-1.043 0-.509 1.824-.934 4.266-1.042v1.661c.16.011.618.038 1.25.038.758 0 1.14-.032 1.21-.038V8.84c2.437.109 4.257.534 4.257 1.042 0 .507-1.82.933-4.258 1.041' fill='#FFF' />\n                    </g>\n                );\n                break;\n            default:\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='20' height='20' viewBox='0 0 20 20' xmlns='http://www.w3.org/2000/svg'>\n            {IconCurrency}\n        </svg>\n\n    );\n};\n\nIconAccountsCurrency.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconAccountsCurrency };\n","export * from './icon_accounts_currency.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","export * from './icon-logout.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='14' viewBox='0 0 16 14'>\n        <g fill='none' fillRule='evenodd'>\n            <path fill='#000' fillOpacity='0.16' d='M5 2v-.5A1.5 1.5 0 0 1 6.5 0h3A1.5 1.5 0 0 1 11 1.5V2h3.5A1.5 1.5 0 0 1 16 3.5v9a1.5 1.5 0 0 1-1.5 1.5h-13A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2H5zm1 0h4v-.5a.5.5 0 0 0-.5-.5h-3a.5.5 0 0 0-.5.5V2z' />\n            <path fill='#FFF' fillRule='nonzero' d='M1 8.128l2.804 1.557A2.5 2.5 0 0 0 5.018 10h5.964a2.5 2.5 0 0 0 1.214-.315L15 8.128V12.5a.5.5 0 0 1-.5.5h-13a.5.5 0 0 1-.5-.5V8.128zm0-1.144V3.5a.5.5 0 0 1 .5-.5h13a.5.5 0 0 1 .5.5v3.484L11.71 8.81a1.5 1.5 0 0 1-.728.189H5.018a1.5 1.5 0 0 1-.728-.189L1 6.984zM6.5 8h3a.5.5 0 0 0 0-1h-3a.5.5 0 0 0 0 1z' />\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","export * from './icon-bell.jsx';\nexport * from './icon-cashier.jsx';\nexport * from './icon-hamburger.jsx';\nexport * from './icon-portfolio.jsx';\nexport * from './icon-statement.jsx';\nexport * from './icon-trade.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierDown = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M7.5 11.793V3.5a.5.5 0 0 1 1 0v8.293l2.646-2.647a.5.5 0 1 1 .708.708l-3.5 3.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L7.5 11.793z'\n        />\n    </svg>\n);\n\nIconBarrierDown.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierDown };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconBarrierUp = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16'>\n        <path\n            className='color1-fill'\n            fillOpacity='.8'\n            fillRule='evenodd'\n            d='M8.5 4.207V12.5a.5.5 0 1 1-1 0V4.207L4.854 6.854a.5.5 0 1 1-.708-.708l3.5-3.5a.5.5 0 0 1 .708 0l3.5 3.5a.5.5 0 1 1-.708.708L8.5 4.207z'\n        />\n    </svg>\n);\n\nIconBarrierUp.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBarrierUp };\n","export * from './icon-barrier-up.jsx';\nexport * from './icon-barrier-down.jsx';\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category, className }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='calle'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='pute'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)}>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category : PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","export * from './icon-trade-categories.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n\nconst TradeCategories = ({ category }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>\n                            { localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }\n                        </p>\n                        <p>\n                            { localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }\n                        </p>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the entry spot.') }</p>\n                        <p>{ localize('If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Higher\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Lower\".') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.') }</p>\n                        <p>{ localize('If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to the barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.') }</p>\n                        <p>{ localize('If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.') }</p>\n                        <p>{ localize('If the exit spot is equal to either the Low barrier or the High barrier, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period') }</p>\n                        <p>{ localize('If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.') }</p>\n                        <p>{ localize('If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).') }</p>\n                        <p>{ localize('If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.') }</p>\n                        <p>{ localize('If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('If you select \"Touches\", you win the payout if the market touches the barrier at any time during the contract period.') }</p>\n                        <p>{ localize('If you select \"Does Not Touch\", you win the payout if the market never touches the barrier at any time during the contract period.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <p>{ localize('Asian options settle by comparing the last tick with the average spot over the period.') }</p>\n                        <p>{ localize('If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.') }</p>\n                        <p>{ localize('If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.') }</p>\n                        <p>{ localize('If the last tick is equal to the average of the ticks, you don\\'t win the payout.') }</p>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <p>\n                        not found\n                    </p>\n                );\n                break;\n        }\n    }\n    return (\n        <div>\n            {TradeTypeTemplate}\n        </div>\n    );\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { TradeCategories };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path className='color1-fill' fill='#2A3052'fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path className='color1-fill' fill='#2A3052'd='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.234 9.316l5.183-5.193H10.14a1.988 1.988 0 0 1-1.983-1.988h7.662v5.713h-1.983V5.523L10.05 9.316h5.769v1.987H.045V9.316h7.189z' />\n                        <path className='important' fill='#F93' d='M3.425 15.91H.045v-3.387h2.073v1.874l1.87-1.874h2.818z' />\n                    </g>\n                );\n                break;\n            case 'calle':\n            case 'call' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.721.162c0 1.13.902 2.03 1.983 2.03h1.848l-7.55 7.731v2.885l8.97-9.185v1.892c0 1.131.901 2.031 1.983 2.031V.138H8.72v.024z' />\n                        <path className='important' fill='#F93' d='M.135 12.808v2.123h2.817l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' className='color1-fill' fill='#2A3052'fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.493.654l5.746 5.723-5.746 5.747c-.766-.789-.789-2.028 0-2.817l1.848-1.848H.045V5.476H5.5L3.493 3.47a1.973 1.973 0 0 1 0-2.816zm3.448 11.808h1.983v3.493H6.94v-3.493zM6.94.18h1.983v1.893H6.94V.18z' />\n                        <path className='important' fill='#F93' d='M15.82 8.563h-4.305l1.848-1.848c.767-.766.767-2.028 0-2.816L10.051 7.21a.844.844 0 0 1 0 1.172l-1.826 1.825 5.138 5.138c.609-.923.474-2.343-.315-3.132l-1.69-1.69h4.44v-1.96h.022z' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M.135 6.49V.158h6.333V6.49H.135zM4.26 2.39H2.366v1.893H4.26V2.389zM9.6 16V9.668h6.332V16H9.6zm4.101-4.124h-1.893v1.893h1.893v-1.893z' />\n                        <path className='color1-fill' fill='#2A3052'd='M9.6.158h6.332V6.49H9.6V.158zm2.208 4.124h1.893V2.389h-1.893v1.893zM.135 16V9.668h6.333V16H.135zm4.124-4.124H2.366v1.893H4.26v-1.893z' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M3.556 2.231l5.666 5.724L3.556 13.7c-.756-.788-.778-2.028 0-2.816l1.822-1.848H.156V7.054h5.377L3.556 5.048a1.992 1.992 0 0 1 0-2.817zm3.377 10.231H8.89v3.47H6.933v-3.47zm0-12.304H8.89v3.56H6.933V.158z' />\n                        <path className='important' fill='#F93' d='M12.156 2.344c.755.788.755 2.05-.023 2.817l-1.466 1.487L9.289 5.25l2.867-2.907zm0 11.493L9.2 10.817l1.378-1.397 1.578 1.6c.755.788.755 2.05 0 2.817zm-1.223-4.778l1.045-1.082-.911-.923h4.622v2.005h-4.756z' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M11.628 7.827H4.237L7.91 2l3.718 5.827zM7.256 6.155h1.352l-.676-1.068-.676 1.068z' />\n                        <path className='color1-fill' fill='#2A3052'd='M7.46 14.86H.067L3.74 9.035l3.718 5.827zm-4.395-1.67h1.352L3.74 12.12l-.676 1.068zm12.755 1.67H8.428l3.673-5.826 3.719 5.827zm-4.372-1.67H12.8l-.676-1.069-.676 1.068z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.513 12.544L3.02 15.912H.203l4.89-4.746z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.045 11.034H15.82v1.925H.045v-1.925zM13.837 8.06V5.412l-5.792 5.622V8.3l4.372-4.244H9.69c-1.104 0-1.983-.875-1.983-1.925h8.113v7.875c-1.105 0-1.983-.875-1.983-1.947z' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='important' fill='#F93' d='M6.603 5.478L3.11 2.088H.293l4.913 4.768z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.135 5.04H15.91v1.926H.135V5.04zm13.792 4.9c0-1.071.901-1.924 1.983-1.946v7.875H7.797c0-1.05.88-1.925 1.983-1.925h2.727L8.135 9.7V6.966l5.792 5.621V9.941z' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g className='color1-fill' fill='#2A3052'fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g className='color1-fill' fill='#2A3052'fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M.068.07h15.774V2.1H.068V.07zm13.769 8.007c0-1.13.878-2.03 1.983-2.054v6.646H9.33c0-1.107.878-2.03 1.983-2.03h1.104L9.059 7.2l-5.363 5.515V9.831l5.363-5.516 4.778 4.893V8.077z' />\n                        <path className='important' fill='#F93' d='M.068 12.692v2.123h1.6l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M11.989 2.1h1.983V.07h1.96V2.1h-1.938v7.408c-1.081 0-1.983-.9-1.983-2.031V5.585l-6.94 7.107V9.785l5.52-5.654H8.745c-1.082 0-1.983-.9-1.983-2.031H.158V.07h11.83V2.1z' />\n                        <path className='important' fill='#F93' d='M.158 12.692v2.123H3.02l2.05-2.123z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M10.14 8.706l3.787 3.794v-2.326h1.983v5.713H8.248c0-1.084.879-1.987 1.983-1.987h2.276L7.324 8.706H.135V6.72H15.91v1.987h-5.77z' />\n                        <path className='important' fill='#F93' d='M3.515 2.113H.135V5.5h2.073V3.626L4.078 5.5h2.818z' />\n                    </g>\n                );\n                break;\n            case 'pute':\n            case 'put' :\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path className='color1-fill' fill='#2A3052'd='M8.631 14.862c0-1.131.901-2.031 1.983-2.031h1.848L4.912 5.1V2.215l8.97 9.185V9.508c0-1.131.901-2.031 1.983-2.031v7.408H8.63v-.023z' />\n                        <path className='important' fill='#F93' d='M.045 2.215V.092h2.817l2.05 2.123z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect className='color1-fill' fill='#2A3052'transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' className='color1-fill' fill='#2A3052'fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('trade-type-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export * from './icon-trade-types.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect className='color1-stroke' width='9' height='7' x='.5' y='6.5' stroke='none' rx='1' />\n            <circle className='color1-fill' cx='5' cy='10' r='1' fill='none' />\n            <path className='color1-stroke' stroke='none' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPriceMove = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'profit':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#2BC8A5' fillRule='nonzero' d='M8 4l6 8H2z' />\n                    </g>\n                );\n                break;\n            case 'loss':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path fill='#E31C4B' fillRule='nonzero' d='M8 12l6-8H2z' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconPriceMove.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconPriceMove };\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","import { localize } from '_common/localize';\n\nexport const month_headers = {\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n};\n\nexport const week_headers = {\n    Monday   : localize('Monday'),\n    Tuesday  : localize('Tuesday'),\n    Wednesday: localize('Wednesday'),\n    Thursday : localize('Thursday'),\n    Friday   : localize('Friday'),\n    Saturday : localize('Saturday'),\n    Sunday   : localize('Sunday'),\n};\n\nexport const week_headers_abbr = {\n    Monday   : localize('M'),\n    Tuesday  : localize('T'),\n    Wednesday: localize('W'),\n    Thursday : localize('T'),\n    Friday   : localize('F'),\n    Saturday : localize('S'),\n    Sunday   : localize('S'),\n};\n\nexport const getDaysOfTheWeek = (day) => {\n    const days_of_the_week = {\n        'Mondays'   : 1,\n        'Tuesdays'  : 2,\n        'Wednesdays': 3,\n        'Thursdays' : 4,\n        'Fridays'   : 5,\n        'Saturdays' : 6,\n        'Sundays'   : 0,\n    };\n\n    return days_of_the_week[day];\n};\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details-group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","export InfoBoxDigit   from './info-box-digit.jsx';\nexport InfoBoxExpired from './info-box-expired.jsx';\nexport InfoBoxGeneral from './info-box-general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit-display.jsx';\nimport InfoBoxExpired from './info-box-expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport SellInfo     from '../Sell/sell-info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining-time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract-sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui-loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details-contents.jsx';\nimport DetailsHeader   from '../Components/Details/details-header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell-button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract-error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            <IconPortfolio className='portfolio-empty__icon' />\n            <span className='portfolio-empty__text'>{localize('No running contract')}</span>\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children, wrapperClassName } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className={`${wrapperClassName || 'fullscreen-dialog__contracts-modal-list'}`}>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children        : PropTypes.any,\n    onClose         : PropTypes.func,\n    title           : PropTypes.string,\n    visible         : PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default FullScreenDialog;\n","import React            from 'react';\nimport FullScreenDialog from './full-screen-dialog.jsx';\nimport TradeParams      from '../../Containers/trade-params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='contract-type-widget__select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames={{\n                enter    : 'contracts-type-dialog--enter',\n                enterDone: 'contracts-type-dialog--enterDone',\n                exit     : 'contracts-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contracts-type-dialog'>\n                <div className='contracts-type-dialog__list-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconInfoOutline }            from 'Assets/Common';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleInfoClick,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        (contract.value !== 'rise_fall_equal') &&\n        <div\n            key={idx}\n            className={`contract-type-item ${value === contract.value ? 'contract-type-item--selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={(e) => handleSelect(contract, e)}\n        >\n            <IconTradeCategory category={contract.value} className='contract-type-item__icon-wrapper' />\n            <span className='contract-type-item__title'>\n                {contract.text}\n            </span>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(contract)}>\n                <IconInfoOutline />\n            </div>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts      : MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract-type-item.jsx';\n\nconst ContractTypeList = ({\n    handleInfoClick,\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            // TODO: Remove this line after other contracts are ready to be served\n            !['In/Out', 'Asians'].includes(key) &&\n            <React.Fragment key={key}>\n                <div className='contract-type-list'>\n                    <div className='contract-type-list__label'><span>{key}</span></div>\n                    <div className='contract-type-list__contracts-wrapper'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                            handleInfoClick={handleInfoClick}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect   : PropTypes.func,\n    list           : MobxPropTypes.objectOrObservableObject,\n    name           : PropTypes.string,\n    value          : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import classNames           from 'classnames';\nimport PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract-type-dialog.jsx';\nimport ContractTypeList      from './contract-type-list.jsx';\nimport TradeTypeInfoDialog   from '../TradeTypeInfo/trade-type-info-dialog.jsx';\nimport TradeTypeInfoItem     from '../TradeTypeInfo/trade-type-info-item.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open     : false,\n            is_info_dialog_open: false,\n            item               : {},\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item, e) => {\n        if (item.value !== this.props.value && e.target.id !== 'info-icon') {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    onSubmitButtonClick = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleInfoVisibility();\n    };\n\n    handleInfoClick = (item) => {\n        this.setState({ item });\n        this.handleInfoVisibility();\n        this.handleVisibility();\n    };\n\n    handleNavigationClick = (item) => {\n        this.setState({ item });\n    };\n\n    handleNextClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const nextIndex = currentIndex + 1;\n        if (nextIndex < navigationLength) {\n            this.handleNavigationClick(navigationList[nextIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[0]);\n        }\n    };\n\n    handlePrevClick = (navigationList) => {\n        const navigationLength = navigationList.length;\n        const item = this.state.item;\n        const currentIndex = navigationList.findIndex((list_item) => list_item.value === item.value);\n        const prevIndex = currentIndex - 1;\n        if (prevIndex > -1) {\n            this.handleNavigationClick(navigationList[prevIndex]);\n        } else {\n            this.handleNavigationClick(navigationList[navigationLength - 1]);\n        }\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        } else if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_info_dialog_open) {\n            this.setState({ is_info_dialog_open: false, is_dialog_open: false });\n        }\n    };\n\n    handleInfoVisibility = () => {\n        this.setState((state) => ({\n            is_info_dialog_open: !state.is_info_dialog_open,\n        }));\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    onWidgetClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    onBackButtonClick = () => {\n        this.setState((state) => ({ is_dialog_open: !state.is_dialog_open, is_info_dialog_open: false }));\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getNavigationList = () => {\n        const navigationList = [];\n        const list = this.props.list;\n        /* eslint-disable */\n        Object.keys(list).map(key => {\n            !['In/Out', 'Asians'].includes(key) && list[key].map(contract => {\n                (contract.value !== 'rise_fall_equal') && navigationList.push(contract);\n            });\n        });\n        /* eslint-disable */\n        return navigationList;\n    };\n\n    render() {\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={'contract-type-widget'}\n                tabIndex='0'\n            >\n                <div\n                    className={classNames('contract-type-widget__display', {\n                        'contract-type-widget__display--clicked': this.state.is_dialog_open,\n                    })}\n                    onClick={this.onWidgetClick}\n                >\n                    <IconTradeCategory category={this.props.value} className='contract-type-widget__icon-wrapper' />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                        handleInfoClick={this.handleInfoClick}\n                    />\n                </ContractTypeDialog>\n                <TradeTypeInfoDialog\n                    is_mobile={this.props.is_mobile}\n                    onClose={this.handleInfoClick}\n                    open={this.state.is_info_dialog_open}\n                    title={this.state.item.text}\n                >\n                    <TradeTypeInfoItem\n                        handleNavigationClick={this.handleNavigationClick}\n                        handleNextClick={this.handleNextClick}\n                        handlePrevClick={this.handlePrevClick}\n                        is_mobile={this.props.is_mobile}\n                        item={this.state.item}\n                        navigationList={this.getNavigationList()}\n                        onBackButtonClick={this.onBackButtonClick}\n                        onSubmitButtonClick={this.onSubmitButtonClick}\n                    />\n                </TradeTypeInfoDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","export default from './trading-date-picker.jsx';\n","import PropTypes                      from 'prop-types';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport {\n    isTimeValid,\n    setTime,\n    toMoment }                        from 'Utils/Date';\nimport DatePicker                     from 'App/Components/Form/DatePicker';\n\nconst TradingDatePicker = ({\n    duration_min_max,\n    duration_units_list,\n    validation_errors,\n    expiry_date,\n    expiry_type,\n    is_24_hours_contract,\n    mode,\n    name,\n    onChange,\n    server_time,\n    start_time,\n    start_date,\n    symbol,\n}) => {\n    let max_date_duration,\n        min_date_expiry,\n        has_today_btn,\n        is_read_only;\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm')));\n\n    const max_daily_duration = duration_min_max.daily ? duration_min_max.daily.max : 365 * 24 * 3600;\n\n    if (is_24_hours_contract) {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(\n            start_date ? 24 * 3600 : (max_daily_duration), 'second');\n    } else {\n        min_date_expiry   = moment_contract_start_date_time.clone().startOf('day');\n        max_date_duration = moment_contract_start_date_time.clone().add(max_daily_duration, 'second');\n\n    }\n    if (expiry_type === 'duration') {\n        min_date_expiry.add(1, 'day');\n        has_today_btn = false;\n        is_read_only = false;\n    } else {\n        has_today_btn = true;\n        is_read_only = true;\n    }\n\n    return (\n        <DatePicker\n            alignment='left'\n            disable_year_selector\n            disable_trading_events\n            error_messages={validation_errors.duration || []}\n            has_today_btn={has_today_btn}\n            is_nativepicker={false}\n            is_read_only={is_read_only}\n            label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n            mode={mode}\n            name={name}\n            onChange={onChange}\n            min_date={min_date_expiry}\n            max_date={max_date_duration}\n            start_date={start_date}\n            underlying={symbol}\n            value={expiry_date}\n        />\n    );\n};\n\nTradingDatePicker.propTypes = {\n    duration: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_type         : PropTypes.string,\n    is_24_hours_contract: PropTypes.bool,\n    mode                : PropTypes.string,\n    name                : PropTypes.string,\n    onChange            : PropTypes.func,\n    server_time         : PropTypes.object,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_min_max   : modules.trade.duration_min_max,\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_type        : modules.trade.expiry_type,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n        symbol             : modules.trade.symbol,\n        validation_errors  : modules.trade.validation_errors,\n    })\n)(TradingDatePicker);\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='purchase-container__error-login-btn secondary orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-container__error-result'>\n        <span className='purchase-container__error-info'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-container__error-login'>\n        <span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='purchase-container__error-login-btn secondary orange'\n            classNameSpan='purchase-container__error-login-btn-span'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p className='purchase-container__error-login-prompt'>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a className='purchase-container__error-login-link' href='javascript:;'><span className='purchase-container__error-info purchase-container__error-login-info'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export * from './error-balance.jsx';\nexport * from './error-general.jsx';\nexport * from './error-login.jsx';\n","export default from './message-box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon-close.jsx';\nimport PurchaseResult       from './purchase-result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-container__error'>\n            <div className='purchase-container__error-close-btn' onClick={onClick}>\n                <IconClose className='purchase-container__error-close-btn-ic' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-container__error-result'>\n        <div>\n            <strong className='purchase-container__error-result-header'>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Buy Price')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Payout')}:</span>\n            <span>\n                <i className={classNames('purchase-container__error-result-currency', 'symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='purchase-container__error-result-label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export default from './purchase-lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon-lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-container__lock'>\n        <div>\n            <IconLock className='purchase-container__lock-icon' />\n        </div>\n        <h4 className='purchase-container__lock-header'>{localize('Purchase Locked')}</h4>\n        <Button\n            className='purchase-container__lock-button flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='purchase-container__lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconPriceMove } from 'Assets/Trading/icon-price-move.jsx';\n\nconst ContractInfo = ({\n    currency,\n    has_increased,\n    proposal_info,\n}) => (\n    <React.Fragment>\n        {(proposal_info.has_error || !proposal_info.id) ?\n            <div\n                className={classNames({\n                    'trade-container__error': proposal_info.has_error,\n                })}\n            >\n                {proposal_info.message && <span className='trade-container__error-info'>{proposal_info.message}</span>}\n            </div>\n            :\n            <div className='trade-container__price'>\n                <div className='trade-container__price-info'>\n                    <div className='trade-container__price-info-basis'>{localize('[_1]', proposal_info.obj_contract_basis.text)}</div>\n                    <div><Money amount={proposal_info.obj_contract_basis.value} className='trade-container__price-info-currency' currency={currency} /></div>\n                    <div className='trade-container__price-info-movement'>\n                        {has_increased !== null && <IconPriceMove type={has_increased ? 'profit' : 'loss'} />}\n                    </div>\n                </div>\n                <span>\n                    <Tooltip alignment='left' className='trade-container__price-tooltip' classNameIcon='trade-container__price-tooltip-i' icon='info' message={proposal_info.message} />\n                </span>\n            </div>\n        }\n    </React.Fragment>\n);\n\nContractInfo.propTypes = {\n    currency     : PropTypes.string,\n    has_increased: PropTypes.bool,\n    proposal_info: PropTypes.object,\n};\n\nexport default ContractInfo;\n","export default from './trading-time-picker.jsx';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport {\n    isTimeValid,\n    minDate,\n    setTime,\n    toMoment }     from 'Utils/Date';\nimport TimePicker  from 'App/Components/Form/TimePicker';\n\nconst TradingTimePicker = ({\n    expiry_date,\n    expiry_time,\n    market_close_times,\n    onChange,\n    server_time,\n    start_date,\n    start_time,\n}) => {\n    const moment_expiry                   = toMoment(expiry_date || server_time);\n    const moment_contract_start_date_time =\n        setTime(toMoment(start_date || server_time), (isTimeValid(start_time) ? start_time : server_time.format('HH:mm')));\n    const expiry_date_time                = setTime(moment_expiry.clone(), moment_contract_start_date_time.clone().add(5, 'minute').format('HH:mm'));\n    const expiry_date_market_close        = setTime(expiry_date_time.clone(), market_close_times.slice(-1)[0]);\n    const is_expired_next_day             = expiry_date_time.diff(moment_contract_start_date_time, 'day') === 1;\n    const min_date_expiry                 = moment_contract_start_date_time.clone().startOf('day');\n    const expiry_time_sessions            = [{\n        open : is_expired_next_day ? expiry_date_time.clone().startOf('day') : expiry_date_time.clone(),\n        close: is_expired_next_day ? minDate(expiry_date_time.clone().subtract(10, 'minute'), expiry_date_market_close) : expiry_date_market_close.clone(),\n    }];\n\n    return (\n        <TimePicker\n            end_time={expiry_time_sessions[0].close}\n            onChange={onChange}\n            name='expiry_time'\n            placeholder='12:00'\n            start_time={expiry_time_sessions[0].open}\n            value={expiry_time || min_date_expiry.format('HH:mm')}\n        />\n    );\n};\n\nTradingTimePicker.propTypes = {\n    expiry_date: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time       : PropTypes.string,\n    market_close_times: PropTypes.array,\n    name              : PropTypes.string,\n    onChange          : PropTypes.func,\n    server_time       : PropTypes.object,\n    start_date        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n        PropTypes.object,\n    ]),\n};\n\nexport default connect(\n    ({ modules, common }) => ({\n        duration_units_list: modules.trade.duration_units_list,\n        expiry_date        : modules.trade.expiry_date,\n        expiry_time        : modules.trade.expiry_time,\n        market_close_times : modules.trade.market_close_times,\n        onChange           : modules.trade.onChange,\n        server_time        : common.server_time,\n        start_date         : modules.trade.start_date,\n        start_time         : modules.trade.start_time,\n    })\n)(TradingTimePicker);\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport Dropdown                       from 'App/Components/Form/DropDown';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/input-field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { hasIntradayDurationUnit }    from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport TradingDatePicker              from '../../DatePicker';\nimport TradingTimePicker              from '../../TimePicker';\n\nconst AdvancedDuration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    duration_units_list,\n    duration_t,\n    changeDurationUnit,\n    getDurationFromUnit,\n    expiry_date,\n    expiry_list,\n    expiry_type,\n    number_input_props,\n    onChange,\n    onChangeUiStore,\n    server_time,\n    shared_input_props,\n    start_date,\n}) => {\n    const moment_expiry      = toMoment(expiry_date || server_time);\n    let is_24_hours_contract = false;\n\n    if (expiry_type === 'endtime') {\n        const has_intraday_duration_unit = hasIntradayDurationUnit(duration_units_list);\n        is_24_hours_contract = (!!start_date || moment_expiry.isSame(toMoment(server_time), 'day')) && has_intraday_duration_unit;\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_24_hours_contract,\n    });\n\n    const changeExpiry = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name: 'expiry_type', value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fragment>\n            { expiry_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={expiry_list}\n                    name='advanced_expiry_type'\n                    onChange={changeExpiry}\n                    value={advanced_expiry_type}\n                />\n            }\n            { expiry_type === 'duration' ?\n                <Fragment>\n                    <div className='duration-container'>\n                        { duration_units_list.length > 1 &&\n                            <Dropdown\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={duration_units_list}\n                                name='advanced_duration_unit'\n                                onChange={changeDurationUnit}\n                                value={advanced_duration_unit}\n                            />\n                        }\n                        { advanced_duration_unit === 't' &&\n                            <RangeSlider\n                                name='duration'\n                                ticks={10}\n                                value={duration_t}\n                                {...shared_input_props}\n                            />\n                        }\n                        { advanced_duration_unit === 'd' &&\n                            <TradingDatePicker\n                                mode='duration'\n                                name='duration'\n                                is_24_hours_contract={is_24_hours_contract}\n                            />\n                        }\n                        { (advanced_duration_unit !== 't' && advanced_duration_unit !== 'd') &&\n                            <InputField\n                                classNameInput='trade-container__input'\n                                label={duration_units_list.length === 1 ? duration_units_list[0].text : null}\n                                name='duration'\n                                value={getDurationFromUnit(advanced_duration_unit)}\n                                {...number_input_props}\n                                {...shared_input_props}\n                            />\n                        }\n                    </div>\n                </Fragment> :\n                <Fragment>\n                    <div className={endtime_container_class}>\n                        <TradingDatePicker\n                            name='expiry_date'\n                            is_24_hours_contract={is_24_hours_contract}\n                            // validation_errors={validation_errors.expiry_date} TODO: add validation_errors for expiry date\n                        />\n                        {is_24_hours_contract &&\n                            <TradingTimePicker />\n                            // validation_errors={validation_errors.end_time} TODO: add validation_errors for end time\n                        }\n                    </div>\n                </Fragment>\n            }\n        </Fragment>\n    );\n};\n\nAdvancedDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    changeDurationUnit    : PropTypes.func,\n    duration_t            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_list        : PropTypes.array,\n    expiry_type        : PropTypes.string,\n    getDurationFromUnit: PropTypes.func,\n    is_nativepicker    : PropTypes.bool,\n    number_input_props : PropTypes.object,\n    onChange           : PropTypes.func,\n    onChangeUiStore    : PropTypes.func,\n    server_time        : PropTypes.object,\n    shared_input_props : PropTypes.object,\n    start_date         : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default AdvancedDuration;\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React, { Fragment } from 'react';\nimport { IconArrow }       from 'Assets/Common';\n\nconst DurationToggle = ({\n    name,\n    onChange,\n    value,\n}) => {\n    const toggle = () => {\n        onChange({ target: { value: !value, name } });\n    };\n    const icon_className = classNames(\n        'advanced-simple-toggle__icon',\n        'select-arrow',\n        { 'advanced-simple-toggle__icon--active': value },\n    );\n    return (\n        <Fragment>\n            <button className='advanced-simple-toggle' onClick={toggle}>\n                <IconArrow className={icon_className} classNamePath={'advanced-simple-toggle__icon-path'} />\n            </button>\n        </Fragment>);\n};\n\nDurationToggle.propTypes = {\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.bool,\n};\n\nexport default DurationToggle;\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport Duration                 from './duration.jsx';\n\nclass DurationWrapper extends React.Component {\n    hasDurationUnit = (duration_unit) => {\n        let duration_list = [...this.props.duration_units_list];\n\n        if (this.props.duration_units_list.length > 1 && !this.props.is_advanced_duration) {\n            duration_list = duration_list.filter(du => du.value === 'm' || du.value === 't');\n        }\n        return duration_list.some(du => du.value === duration_unit);\n    };\n\n    setDurationUnit() {\n        const new_duration_unit  = this.props.duration_units_list[0].value;\n        const new_duration_value = this.props.getDurationFromUnit(new_duration_unit);\n\n        this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: new_duration_unit });\n        this.props.onChangeMultiple({\n            duration_unit: new_duration_unit,\n            duration     : new_duration_value,\n        });\n    }\n\n    componentDidMount() {\n        const current_unit = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration = this.props.getDurationFromUnit(this.props.duration_unit);\n\n        if (this.props.duration_unit !== current_unit) {\n            this.props.onChangeUiStore({ name: `${this.props.is_advanced_duration ? 'advanced' : 'simple'}_duration_unit`, value: this.props.duration_unit });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${current_unit}`, value: this.props.duration });\n        }\n    }\n\n    componentWillReact() {\n        const simple_is_missing_duration_unit = !this.props.is_advanced_duration && this.props.simple_duration_unit === 'd' && this.props.duration_units_list.length === 4;\n        const current_duration_unit           = this.props.is_advanced_duration ?\n            this.props.advanced_duration_unit : this.props.simple_duration_unit;\n        const current_duration                = this.props.getDurationFromUnit(this.props.duration_unit);\n        const has_missing_duration_unit       = !this.hasDurationUnit(current_duration_unit);\n        const simple_is_not_type_duration     = !this.props.is_advanced_duration && this.props.expiry_type !== 'duration';\n        const advanced_has_wrong_expiry       = this.props.is_advanced_duration\n            && this.props.expiry_type !== this.props.advanced_expiry_type && this.props.duration_units_list.length > 1;\n\n        // intercept changes to current contracts duration_units_list - if they are missing change duration_unit and value in trade_store and ui_store\n        if (has_missing_duration_unit || simple_is_missing_duration_unit) {\n            this.setDurationUnit();\n            return;\n        }\n\n        // simple only has expiry type duration\n        if (simple_is_not_type_duration) {\n            this.props.onChange({ target: { name: 'expiry_type', value: 'duration' } });\n        }\n\n        if (advanced_has_wrong_expiry) {\n            this.props.onChange({ target: { name: 'expiry_type', value: this.props.advanced_expiry_type } });\n        }\n\n        if (this.props.duration !== current_duration) {\n            this.props.onChangeUiStore({ name: `duration_${this.props.duration_unit}`, value: this.props.duration });\n        }\n    }\n\n    render() {\n        return (\n            <Duration\n                hasDurationUnit={this.hasDurationUnit}\n                {...this.props}\n            />\n        );\n    }\n}\n\nDurationWrapper.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_d: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_h: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_m: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_s      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_t: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    market_close_times  : PropTypes.array,\n    onChange            : PropTypes.func,\n    onChangeMultiple    : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    sessions            : MobxPropTypes.arrayOrObservableArray,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    symbol           : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(DurationWrapper);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport { localize }                   from '_common/localize';\nimport Fieldset                       from 'App/Components/Form/fieldset.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport { convertDurationLimit }       from 'Stores/Modules/Trading/Helpers/duration';\nimport { toMoment }                   from 'Utils/Date';\nimport DurationToggle                 from './duration-toggle.jsx';\nimport AdvancedDuration               from './advanced-duration.jsx';\nimport SimpleDuration                 from './simple-duration.jsx';\n\nconst Duration = ({\n    advanced_duration_unit,\n    advanced_expiry_type,\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    duration_t,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    getDurationFromUnit,\n    hasDurationUnit,\n    is_advanced_duration,\n    is_minimized,\n    onChange,\n    onChangeUiStore,\n    onChangeMultiple,\n    simple_duration_unit,\n    server_time,\n    start_date,\n    validation_errors,\n}) => {\n    const expiry_list = [\n        { text: localize('Duration'), value: 'duration' },\n    ];\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    if (is_minimized) {\n        const moment_expiry = toMoment(expiry_date);\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n\n    const changeDurationUnit = ({ target }) => {\n        const { name, value } = target;\n        const duration_value  = getDurationFromUnit(value);\n\n        onChangeUiStore({ name, value });\n        onChangeMultiple({\n            duration_unit: value,\n            duration     : duration_value,\n        });\n    };\n\n    const changeDurationValue = ({ target }) => {\n        const { name, value } = target;\n        const duration_name   = `duration_${is_advanced_duration ? advanced_duration_unit : simple_duration_unit}`;\n\n        onChangeUiStore({ name: duration_name, value });\n        onChange({ target: { name, value } });\n    };\n\n    const onToggleDurationType = ({ target }) => {\n        const { name, value } = target;\n        onChangeUiStore({ name, value });\n\n        // replace selected duration unit and duration if the contract doesn't have that duration unit\n        let current_duration_unit = value ? advanced_duration_unit : simple_duration_unit;\n        if (!hasDurationUnit(current_duration_unit)) {\n            current_duration_unit = duration_units_list[0].value;\n            onChangeUiStore({ name: `${value ? 'advanced' : 'simple'}_duration_unit`, value: current_duration_unit });\n        }\n\n        const duration_value         = getDurationFromUnit(current_duration_unit);\n        const new_trade_store_values = {\n            duration_unit: current_duration_unit,\n            duration     : duration_value,\n        };\n\n        // simple only has expiry type of duration\n        if (!value && expiry_type !== 'duration') {\n            new_trade_store_values.expiry_type = 'duration';\n        }\n\n        if (value && expiry_type !== advanced_expiry_type) {\n            new_trade_store_values.expiry_type = advanced_expiry_type;\n        }\n\n        onChangeMultiple({ ...new_trade_store_values });\n    };\n\n    let max_value, min_value;\n    if (duration_min_max[contract_expiry_type]) {\n        max_value = convertDurationLimit(+duration_min_max[contract_expiry_type].max, duration_unit);\n        min_value = convertDurationLimit(+duration_min_max[contract_expiry_type].min, duration_unit);\n    }\n\n    const props = {\n        shared_input: {\n            max_value,\n            min_value,\n            onChange: changeDurationValue,\n        },\n        number_input: {\n            type            : 'number',\n            is_incrementable: true,\n            error_messages  : validation_errors.duration || [],\n        },\n    };\n    // e.g. digit contracts only has range slider - does not have toggle between advanced / simple\n    const has_toggle = expiry_list.length > 1 || duration_units_list.length > 1;\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            { !has_toggle &&\n                <RangeSlider\n                    name='duration'\n                    ticks={10}\n                    value={duration_t}\n                    {...props.shared_input}\n                />\n            }\n            { has_toggle &&\n                <Fragment>\n                    { is_advanced_duration &&\n                        <AdvancedDuration\n                            advanced_expiry_type={advanced_expiry_type}\n                            advanced_duration_unit={advanced_duration_unit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            expiry_date={expiry_date}\n                            expiry_list={expiry_list}\n                            expiry_type={expiry_type}\n                            getDurationFromUnit={getDurationFromUnit}\n                            number_input_props={props.number_input}\n                            onChange={onChange}\n                            onChangeUiStore={onChangeUiStore}\n                            server_time={server_time}\n                            shared_input_props={props.shared_input}\n                            start_date={start_date}\n                        /> }\n                    { !is_advanced_duration &&\n                        <SimpleDuration\n                            getDurationFromUnit={getDurationFromUnit}\n                            changeDurationUnit={changeDurationUnit}\n                            duration_t={duration_t}\n                            duration_units_list={duration_units_list}\n                            number_input_props={props.number_input}\n                            shared_input_props={props.shared_input}\n                            simple_duration_unit={simple_duration_unit}\n                        /> }\n                    <DurationToggle\n                        name={'is_advanced_duration'}\n                        onChange={onToggleDurationType}\n                        value={is_advanced_duration}\n                    />\n                </Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nDuration.propTypes = {\n    advanced_duration_unit: PropTypes.string,\n    advanced_expiry_type  : PropTypes.string,\n    contract_expiry_type  : PropTypes.string,\n    duration              : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max: PropTypes.object,\n    duration_t      : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time         : PropTypes.string,\n    expiry_type         : PropTypes.string,\n    getDurationFromUnit : PropTypes.func,\n    hasDurationUnit     : PropTypes.func,\n    is_advanced_duration: PropTypes.bool,\n    is_minimized        : PropTypes.bool,\n    onChange            : PropTypes.func,\n    onChangeUiStore     : PropTypes.func,\n    server_time         : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n    start_date          : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    validation_errors: PropTypes.object,\n};\n\nexport default Duration;\n","export default from './duration-wrapper.jsx';\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React, { Fragment }            from 'react';\nimport ButtonToggleMenu               from 'App/Components/Form/button-toggle-menu.jsx';\nimport InputField                     from 'App/Components/Form/input-field.jsx';\nimport RangeSlider                    from 'App/Components/Form/RangeSlider';\nimport TradingDatePicker              from '../../DatePicker';\n\nconst SimpleDuration = ({\n    changeDurationUnit,\n    duration_t,\n    duration_units_list,\n    getDurationFromUnit,\n    number_input_props,\n    shared_input_props,\n    simple_duration_unit,\n}) => {\n    const filterMinutesAndTicks = (arr) => {\n        const filtered_arr = arr.filter(du => du.value === 't' || du.value === 'm');\n        if (filtered_arr.length <= 1) return [];\n\n        return filtered_arr;\n    };\n    const has_label = !duration_units_list.some(du => du.value === 't');\n\n    return (\n        <Fragment>\n            { duration_units_list.length > 1 &&\n                <ButtonToggleMenu\n                    buttons_arr={filterMinutesAndTicks(duration_units_list)}\n                    name='simple_duration_unit'\n                    onChange={changeDurationUnit}\n                    value={simple_duration_unit}\n                />\n            }\n            { simple_duration_unit === 't' &&\n                <RangeSlider\n                    name='duration'\n                    value={duration_t}\n                    ticks={10}\n                    {...shared_input_props}\n                />\n            }\n            { simple_duration_unit === 'd' &&\n                <TradingDatePicker\n                    alignment='left'\n                    mode='duration'\n                    name='duration'\n                />\n            }\n            { (simple_duration_unit !== 't' && simple_duration_unit !== 'd') &&\n                <InputField\n                    classNameInput='trade-container__input'\n                    name='duration'\n                    label={has_label ? duration_units_list[0].text : null}\n                    value={getDurationFromUnit(simple_duration_unit)}\n                    {...number_input_props}\n                    {...shared_input_props}\n                />\n            }\n        </Fragment>\n    );\n};\n\nSimpleDuration.propTypes = {\n    changeDurationUnit: PropTypes.func,\n    duration_t        : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_units_list : MobxPropTypes.arrayOrObservableArray,\n    getDurationFromUnit : PropTypes.func,\n    number_input_props  : PropTypes.object,\n    shared_input_props  : PropTypes.object,\n    simple_duration_unit: PropTypes.string,\n};\n\nexport default SimpleDuration;\n","import React          from 'react';\nimport PropTypes      from 'prop-types';\nimport { localize }   from '_common/localize';\nimport Tooltip        from 'App/Components/Elements/tooltip.jsx';\nimport InputField     from 'App/Components/Form/input-field.jsx';\n\nconst AllowEquals = ({\n    is_allow_equal,\n    checked,\n    onChange,\n}) => (\n    !!is_allow_equal &&\n        <div className='allow-equals'>\n            <InputField\n                className='allow-equals__input-field'\n                classNameInput='allow-equals__input trade-container__input'\n                id='allow_equals'\n                name='contract_type'\n                onChange={onChange}\n                value='is_equal'\n                type='checkbox'\n                checked={checked}\n            />\n            <label className='allow-equals__label' htmlFor='allow_equals'>{localize('Allow equals')}</label>\n            <Tooltip\n                alignment='left'\n                className='allow-equals__tooltip'\n                classNameIcon='allow-equals__tooltip-info'\n                icon='info'\n                message={localize('Win payout if exit spot is also equal to entry spot.')}\n            />\n        </div>\n);\n\nAllowEquals.propTypes = {\n    checked       : PropTypes.number,\n    is_allow_equal: PropTypes.bool,\n    onChange      : PropTypes.func,\n};\n\nexport default AllowEquals;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input-field.jsx';\nimport AllowEquals               from './allow-equals.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_allow_equal,\n    is_equal_checked,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames({ 'three-columns': !is_single_currency });\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <div className={amount_container_class}>\n                <Dropdown\n                    is_alignment_left\n                    is_nativepicker={is_nativepicker}\n                    list={basis_list}\n                    name='basis'\n                    value={basis}\n                    onChange={onChange}\n                    className='no-margin'\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        is_alignment_left\n                        is_nativepicker={is_nativepicker}\n                        list={currencies_list}\n                        name='currency'\n                        value={currency}\n                        onChange={onChange}\n                    />\n                }\n                <InputField\n                    classNameInput='trade-container__input'\n                    classNamePrefix='trade-container__currency'\n                    error_messages={validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_autocomplete_disabled\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n            <AllowEquals is_allow_equal={is_allow_equal} onChange={onChange} checked={is_equal_checked} />\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_allow_equal    : PropTypes.bool,\n    is_equal_checked  : PropTypes.number,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import classNames     from 'classnames';\nimport { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    IconBarrierUp,\n    IconBarrierDown } from 'Assets/Trading/Barriers';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\nimport InputField     from 'App/Components/Form/input-field.jsx';\nimport { localize }   from '_common/localize';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__barriers'\n            header={barrier_title}\n            is_center\n        >\n            <div>\n                <InputField\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    className={`trade-container__barriers-${input_class}`}\n                    classNameInput={classNames('trade-container__input', 'trade-container__barriers-input', `trade-container__barriers-${input_class}-input`)}\n                    onChange={onChange}\n                    error_messages={validation_errors.barrier_1 || []}\n                    is_float\n                    is_signed\n                />\n    \n                {barrier_count === 2 &&\n                    <React.Fragment>\n                        <InputField\n                            type='number'\n                            name='barrier_2'\n                            value={barrier_2}\n                            className='multiple'\n                            classNameInput='trade-container__input'\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_2}\n                            is_float\n                            is_signed\n                        />\n                        <IconBarrierUp className='trade-container__barriers--up' />\n                        <IconBarrierDown className='trade-container__barriers--down' />\n                    </React.Fragment>\n                }\n            </div>\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset       from 'App/Components/Form/fieldset.jsx';\n\nconst LastDigit = ({\n    is_minimized,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={localize('Last Digit Prediction')}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit  : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full-screen-dialog.jsx';\n\nconst TradeTypeInfoDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n    title,\n}) => (\n    is_mobile ?\n        <FullScreenDialog\n            visible={open}\n            onClose={onClose}\n            title={title}\n            wrapperClassName='trade-type-info-modal'\n        >\n            {children}\n        </FullScreenDialog>\n        :\n        <CSSTransition\n            classNames={{\n                enter    : 'trade-type-info-dialog--enter',\n                enterDone: 'trade-type-info-dialog--enterDone',\n                exit     : 'trade-type-info-dialog--exit',\n            }}\n            in={open}\n            timeout={100}\n            unmountOnExit\n        >\n            <div className='trade-type-info-dialog'>\n                <div className='trade-type-info-dialog__info-wrapper'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nTradeTypeInfoDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n    title    : PropTypes.string,\n};\n\nexport default TradeTypeInfoDialog;\n","import classNames           from 'classnames';\nimport PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { Scrollbars }       from 'tt-react-custom-scrollbars';\nimport { IconBack }         from 'Assets/Common/icon-back.jsx';\nimport { IconChevronLeft }  from 'Assets/Common/icon-chevron-left.jsx';\nimport { IconChevronRight } from 'Assets/Common/icon-chevron-right.jsx';\nimport { TradeCategories }  from 'Assets/Trading/Categories/trade-categories.jsx';\nimport Button               from 'App/Components/Form/button.jsx';\nimport { localize }         from '_common/localize';\n\nconst TradeTypeInfoItem = ({\n    handleNavigationClick,\n    handleNextClick,\n    handlePrevClick,\n    is_mobile,\n    item,\n    navigationList,\n    onBackButtonClick,\n    onSubmitButtonClick,\n}) => (\n    <React.Fragment>\n        {!is_mobile &&\n        <div className='trade-type-info-dialog__header'>\n            <span onClick={() => onBackButtonClick()}>\n                <IconBack />\n            </span>\n            <span className='title'>{item.text}</span>\n        </div>\n        }\n        <div className='trade-type-info-dialog__gif'>\n            gif explanation\n        </div>\n        <div className='trade-type-info-dialog__content'>\n            <Scrollbars\n                autoHide\n                style={{ height: '100%' }}\n            >\n                <TradeCategories category={item.value} />\n            </Scrollbars>\n        </div>\n        <div>\n            <Button className='trade-type-info-dialog__choose-button' text={localize('Choose')} onClick={() => onSubmitButtonClick(item)} />\n        </div>\n        <div className='trade-type-info-navigation'>\n            <div className='trade-type-info-navigation__icon' onClick={() => handlePrevClick(navigationList)} >\n                <IconChevronLeft />\n            </div>\n            <div className='trade-type-info-navigation__list'>\n                {\n                    navigationList.map((contract, idx) => (\n                        <React.Fragment key={idx}>\n                            <div\n                                className={classNames('trade-type-info-navigation__circle-button', {\n                                    'trade-type-info-navigation__circle-button--active': contract.value === item.value,\n                                })}\n                                onClick={() => handleNavigationClick(contract)}\n                            />\n                        </React.Fragment>\n                    ))\n                }\n            </div>\n            <div className='trade-type-info-navigation__icon' onClick={() => handleNextClick(navigationList)} >\n                <IconChevronRight />\n            </div>\n        </div>\n    </React.Fragment>\n);\n\nTradeTypeInfoItem.propTypes = {\n    handleNavigationClick: PropTypes.func,\n    handleNextClick      : PropTypes.func,\n    handlePrevClick      : PropTypes.func,\n    is_mobile            : PropTypes.bool,\n    item                 : PropTypes.object,\n    navigationList       : PropTypes.array,\n    onBackButtonClick    : PropTypes.func,\n    onSubmitButtonClick  : PropTypes.func,\n};\n\nexport default TradeTypeInfoItem;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen-large.jsx';\nimport ScreenSmall  from './screen-small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui-loader.jsx';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade-params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <Fieldset className='trade-container__fieldset trade-types'>\n                    <ContractType />\n                </Fieldset>\n                <TradeParams />\n                <div className='purchase-container'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile-widget.jsx';\nimport ContractType from '../../Containers/contract-type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-container'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract-type-widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { isEmptyObject } from '_common/utility';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport { PopConfirm }    from 'App/Components/Elements/PopConfirm';\nimport UILoader          from 'App/Components/Elements/ui-loader.jsx';\nimport Button            from 'App/Components/Form/button.jsx';\nimport Fieldset          from 'App/Components/Form/fieldset.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\nimport { connect }       from 'Stores/connect';\nimport ContractInfo      from '../Components/Form/Purchase/contract-info.jsx';\nimport MessageBox        from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock      from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary btn-purchase'\n                has_effect\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n            >\n                <React.Fragment>\n                    <div className='btn-purchase__effect-main' />\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__content'>\n                        <div className='btn-purchase__trade-type'>\n                            <IconTradeType type={type.toLowerCase()} className='btn-purchase__trade-type-icon' />\n                            <span className='btn-purchase__trade-type-text'>{localize('[_1]', trade_types[type])}</span>\n                        </div>\n                    </div>\n                    <div className='btn-purchase__info'>\n                        <div className='btn-purchase__return'>{is_disabled ? '---,-' : info.returns}</div>\n                        <div className='btn-purchase__profit'>\n                            {is_disabled ? '--,--' : <Money amount={info.profit} currency={currency} className='btn-purchase__currency' />}\n                        </div>\n                    </div>\n                </React.Fragment>\n            </Button>\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='trade-container__fieldset purchase-container__option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader classNameBlock='purchase-container__loading' />\n                        }\n                        <ContractInfo\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                        this.props.ui_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules, ui }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n        ui_store       : ui,\n    })\n)(TradeParams);\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui-loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form-layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract-details.jsx';\nimport InfoBox              from '../../Contract/Containers/info-box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","export default from './Containers/trade.jsx';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket-general';\nexport WS                  from './ws-methods';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws-methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws-methods';\nimport GTM                  from '../Utils/gtm';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance, true);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            case 'transaction':\n                GTM.pushTransactionData(response, { bom_ui: 'new' });\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import BinarySocket        from '_common/base/socket_base';\nimport SubscriptionManager from '_common/base/subscription_manager';\nimport { isEmptyObject }   from '_common/utility';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const getTradingTimes = (date) =>\n        BinarySocket.send({ trading_times: date });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb, is_forced) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb, is_forced);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        getTradingTimes,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon-flag.jsx';\nimport IconTick     from 'Assets/Contract/icon-tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }    from './Helpers/chart-barriers';\nimport { createChartMarkers }    from './Helpers/chart-markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base-store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format-response';\nimport BaseStore                   from '../../base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n    ASIANU     : 'ABOVE',\n    ASIAND     : 'BELOW',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon-entry-spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon-flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker-line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker-spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart-barrier-store';\nimport { ChartMarkerStore }   from './chart-marker-store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base-store';\n\nconst store_name = 'smart_chart_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties, store_name });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format-response';\nimport BaseStore                        from '../../base-store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract-type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeStartDate = async (store) => {\n    const {\n        contract_type,\n        duration_unit,\n        expiry_time,\n        start_date,\n        symbol } = store;\n    const server_time = store.root_store.common.server_time;\n    let {\n        start_time,\n        expiry_date,\n        expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list     = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type           = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n\n    const obj_market_close_times = { market_close_times: await ContractType.getTradingTimes(expiry_date, symbol) };\n    const market_close_times     = obj_market_close_times.market_close_times;\n    const obj_expiry_time        = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n        ...obj_expiry_type,\n        ...obj_market_close_times,\n    };\n};\n","import ContractType from '../Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall      : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        rise_fall_equal: { title: localize('Rise/Fall'),                  trade_types: ['CALLE', 'PUTE'],             basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low       : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch          : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end            : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay           : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian          : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff     : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd       : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under     : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call        : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put         : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low    : { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low', 'rise_fall_equal'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","import ContractType from '../Helpers/contract-type';\n\n// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'is_equal_checked',\n    'last_digit',\n    'start_date',\n    'start_time',\n    'symbol',\n];\n\nexport const getNonProposalQueryStringVariables = (store) => {\n    const non_proposal_query_string_variables = [\n        'contract_start_type',\n        'expiry_type',\n    ];\n\n    if (!store) return non_proposal_query_string_variables;\n\n    const { contract_start_type } = ContractType.getStartType(store.start_date);\n    const { expiry_type } = store;\n    return [\n        ...non_proposal_query_string_variables,\n        ...(contract_start_type === 'forward' ? ['start_time'] : []),\n        ...(expiry_type         === 'endtime' ? ['expiry_date'] : []),\n    ];\n};\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/Duration';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\n// import StartDate from 'Modules/Trading/Components/Form/TradeParams/start-date.jsx';\n\nexport const form_components = [\n    // { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import { localize }           from '_common/localize';\nimport { isSessionAvailable } from 'Stores/Modules/Trading/Helpers/start-date';\nimport {\n    isHourValid,\n    isMinuteValid,\n    isTimeValid,\n    toMoment }                from 'Utils/Date';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    start_time: {\n        rules: [\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value)  , message: localize('Please enter the start time in the format \"HH:MM\".') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value)  , message: localize('Hour must be between 0 and 23.') }],\n            ['custom' , { func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value), message: localize('Minute must be between 0 and 59.') }],\n            ['custom' , { func: (value, options, store) => {\n                if (store.contract_start_type === 'spot') return true;\n                if (!isTimeValid(value)) return false;\n                const start_moment       = toMoment(store.start_date);\n                const start_moment_clone = start_moment.clone();\n                const [h, m] = value.split(':');\n                return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n            }, message: localize('Start time cannot be in the past.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import ServerTime               from '_common/base/server_time';\nimport { localize }             from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }          from '_common/utility';\nimport { WS }                   from 'Services';\nimport {\n    isTimeValid,\n    minDate,\n    toMoment }                  from 'Utils/Date';\nimport { buildBarriersConfig }  from './barrier';\nimport {\n    buildDurationConfig,\n    hasIntradayDurationUnit }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }        from './start-date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }         from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n    const trading_times          = {};\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get()).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.getTradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                        symbol.times.close;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list && duration_units_list.length === 1 && duration_units_list[0].value === 't') {\n            return { expiry_type: 'duration' };\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start  = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format('YYYY-MM-DD');\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment   = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [{\n                    open : start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                    close: minDate(start_moment.clone().add(24, 'hour'), buildMoment(expiry_date, market_close_time)),\n                }];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n                }\n\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingTimes,\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import { localize } from '_common/localize';\nimport { toMoment } from 'Utils/Date';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type, duration_units_list } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && (toMoment(expiry_date).isAfter(toMoment(server_time), 'day') ||\n        !hasIntradayDurationUnit(duration_units_list));\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n\nexport const hasIntradayDurationUnit = (duration_units_list) => (\n    duration_units_list.some(unit => ['m', 'h'].indexOf(unit.value) !== -1)\n);\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract-type';\nimport * as ContractType  from '../Actions/contract-type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start-date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n    const functions = getMethodsList(store, new_state);\n\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++){\n        extendOrReplace(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'market_close_times', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import { getDecimalPlaces }                from '_common/base/currency_base';\nimport { isDeepEqual }                     from '_common/utility';\nimport {\n    convertToUnix,\n    toMoment }                             from 'Utils/Date';\nimport {\n    proposal_properties_alternative_names,\n    removable_proposal_properties }        from '../Constants/query-string';\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal   = response.proposal || {};\n    const profit     = (proposal.payout - proposal.ask_price) || 0;\n    const returns    = profit * 100 / (proposal.ask_price || 1);\n    const stake      = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = (basis_list.find(o => o.value !== store.basis));\n    const is_stake       = contract_basis.text === 'Stake';\n    const price          = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased    = price > obj_prev_contract_basis.value;\n\n    if (price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text : contract_basis.text || '',\n        value: price || '',\n    };\n\n    return {\n        id       : proposal.id || '',\n        has_error: !!response.error,\n        has_increased,\n        message  : proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout   : proposal.payout,\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","import ServerTime   from '_common/base/server_time';\nimport { toMoment } from 'Utils/Date';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: toMoment(option.open), close: toMoment(option.close) };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : toMoment(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = toMoment(ServerTime.get()),\n    start_moment           = toMoment(ServerTime.get()),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')))\n);\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject,\n    getPropertyValue }                   from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url-helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    getNonProposalQueryStringVariables } from './Constants/query-string';\nimport getValidationRules                from './Constants/validation-rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract-type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base-store';\n\nconst store_name = 'trade_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n    @observable is_allow_equal             = false;\n    @observable is_equal_checked           = 0;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = null;\n    @observable sessions         = [];\n\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    @observable market_close_times = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info        = {};\n    @observable purchase_info        = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            store_name,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n        reaction(\n            () => [\n                this.symbol,\n                this.contract_type,\n                this.duration_unit,\n                this.expiry_type,\n                this.duration_units_list,\n                this.contract_types_list,\n            ],\n            () => {\n                this.changeAllowEquals();\n            },\n            { delay: 500 }\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChangeMultiple(values) {\n        Object.keys(values).forEach((name) => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        this.processNewValuesAsync({ ...values }, true);\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, checked } = e.target;\n        let { value } = e.target;\n\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (value === 'is_equal') {\n            if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type)) {\n                if (checked) {\n                    this.is_equal_checked = 1;\n                    value = 'rise_fall_equal';\n                } else {\n                    this.is_equal_checked = 0;\n                    value = 'rise_fall';\n                }\n            }\n        } else if (name  === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        e.preventDefault();\n        WS.forgetAll('proposal').then(this.requestProposal());\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency', 'smart_chart'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        WS.forgetAll('proposal');\n\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...getNonProposalQueryStringVariables(this),\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            Object.keys(this.proposal_requests).forEach((type) => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type           = response.echo_req.contract_type;\n        const prev_proposal_info      = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    changeAllowEquals() {\n        const hasCallPutEqual = (contract_type_list) => {\n            if (!contract_type_list) return false;\n\n            return getPropertyValue(contract_type_list, 'Up/Down')\n                .some(contract => contract.value === 'rise_fall_equal');\n        };\n        const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n            if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n            const contract_list = Object.keys(contract_type_list || {})\n                .reduce((key, list) => ([...key, ...contract_type_list[list].map(contract => contract.value)]), []);\n            \n            const contract_duration_list = contract_list\n                .map(list => ({ [list]: getPropertyValue(ContractType.getFullContractTypes(), [list, 'config', 'durations', 'units_display', contract_start_type]) }));\n\n            // Check whether rise fall equal is exists and has the current store duration unit\n            return hasCallPutEqual(contract_type_list) ? contract_duration_list\n                .filter(contract => contract.rise_fall_equal)[0].rise_fall_equal\n                .some(duration => duration.value === duration_unit) : false;\n        };\n        const check_callput_equal_duration = hasDurationForCallPutEqual(this.contract_types_list,\n            this.duration_unit, this.contract_start_type);\n\n        if (!(/^(rise_fall|rise_fall_equal)$/.test(this.contract_type))) {\n            this.is_allow_equal = false;\n            this.is_equal_checked = 0;\n        }\n\n        if (/^(rise_fall|rise_fall_equal)$/.test(this.contract_type) && (check_callput_equal_duration || this.expiry_type === 'endtime') && hasCallPutEqual(this.contract_types_list)) {\n            this.is_allow_equal = true;\n        } else {\n            this.is_allow_equal = false;\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import ContractStore   from './Contract/contract-store';\nimport PortfolioStore  from './Portfolio/portfolio-store';\nimport SmartChartStore from './SmartChart/smart-chart-store';\nimport StatementStore  from './Statement/statement-store';\nimport TradeStore      from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n            store_name,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        const has_local_or_session_storage = local_storage_properties && local_storage_properties.length\n            || session_storage_properties && session_storage_properties.length;\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value     : store_name,\n                enumerable: false,\n                writable  : false,\n            });\n        }\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n}\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base-store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    @computed\n    get can_upgrade_to() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade_to);\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid  = LocalStore.get('active_loginid');\n        this.accounts = LocalStore.getObject(storage_key);\n        this.switched = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base-store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","import ClientStore  from './client-store';\nimport CommonStore  from './common-store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_positions_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    @observable is_advanced_duration   = false;\n    @observable advanced_duration_unit = 't';\n    @observable advanced_expiry_type   = 'duration';\n    @observable simple_duration_unit   = 't';\n    @observable duration_t             = 5;\n    @observable duration_s             = 15;\n    @observable duration_m             = 3;\n    @observable duration_h             = 1;\n    @observable duration_d             = 1;\n\n    getDurationFromUnit = (unit) => this[`duration_${unit}`];\n\n    constructor() {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties, store_name });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('theme--dark'));\n    }\n\n    @action.bound\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_positions_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePositionsDrawer() { // show and hide Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const epochToMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Convert date string or epoch to moment object\n * @param  {Number} value   the date in epoch format\n * @param  {String} value   the date in string format\n * @return {moment} the moment object of 'now' or the provided date epoch or string\n */\nexport const toMoment = value => {\n    if (!value) return moment().utc(); // returns 'now' moment object\n    if (value instanceof moment && value.isValid() && value.isUTC()) return value; // returns if already a moment object\n    const is_number      = typeof value === 'number';\n    // need to explicitly convert date string to a JS Date object then pass that into Moment\n    // to get rid of the warning: Deprecation warning: moment construction falls back to js Date\n    const formatted_date = moment(new Date(value)).format('YYYY-MM-DD');\n    return is_number ? epochToMoment(value) : moment.utc(formatted_date);\n};\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nexport const setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time ? time.split(':') : [0, 0, 0];\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => toMoment(date).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = toMoment(date).startOf('day').diff(toMoment().startOf('day'), 'days');\n    return (!date || diff < 0) ? '' : diff;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n\n/**\n * return true if the time_str is in \"HH:MM\" format, else return false\n * @param {String} time_str time\n */\nexport const isTimeValid = time_str => /^([0-9]|[0-1][0-9]|2[0-3]):([0-9]|[0-5][0-9])(:([0-9]|[0-5][0-9]))?$/.test(time_str);\n\n/**\n * return true if the time_str's hour is between 0 and 23, else return false\n * @param {String} time_str time\n */\nexport const isHourValid = time_str => isTimeValid(time_str) && /^([01][0-9]|2[0-3])$/.test(time_str.split(':')[0]);\n\n/**\n * return true if the time_str's minute is between 0 and 59, else return false\n * @param {String} time_str time\n */\nexport const isMinuteValid = time_str => isTimeValid(time_str) && /^[0-5][0-9]$/.test(time_str.split(':')[1]);\n\n/**\n * return true if the date is typeof string and a valid moment date, else return false\n * @param {String|moment} date date\n */\nexport const isDateValid = date => moment(date, 'DD MMM YYYY').isValid();\n\n/**\n * add the specified number of days to the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to add\n */\nexport const addDays = (date, num_of_days) => toMoment(date).clone().add(num_of_days, 'day');\n\n/**\n * add the specified number of months to the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to add\n */\nexport const addMonths = (date, num_of_months) => toMoment(date).clone().add(num_of_months, 'month');\n\n/**\n * add the specified number of years to the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to add\n */\nexport const addYears = (date, num_of_years) => toMoment(date).clone().add(num_of_years, 'year');\n\n/**\n * subtract the specified number of days from the given date\n * @param {String} date        date\n * @param {Number} num_of_days number of days to subtract\n */\nexport const subDays = (date, num_of_days) => toMoment(date).clone().subtract(num_of_days, 'day');\n\n/**\n * subtract the specified number of months from the given date\n * @param {String} date        date\n * @param {Number} num_of_months number of months to subtract\n */\nexport const subMonths = (date, num_of_months) => toMoment(date).clone().subtract(num_of_months, 'month');\n\n/**\n * subtract the specified number of years from the given date\n * @param {String} date        date\n * @param {Number} num_of_years number of years to subtract\n */\nexport const subYears = (date, num_of_years) => toMoment(date).clone().subtract(num_of_years, 'year');\n\n/**\n * returns the minimum moment between the two passing parameters\n * @param {moment|string|epoch} first datetime parameter\n * @param {moment|string|epoch} second datetime parameter\n */\nexport const minDate = (date_1, date_2) => moment.min(toMoment(date_1), toMoment(date_2));\n\n/**\n * returns a new date\n * @param {moment|string|epoch} date date\n */\nexport const getStartOfMonth = (date) => toMoment(date).clone().startOf('month').format('YYYY-MM-DD');\n","export * from './date-time';\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","export * from './language';\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = [\n        'ACH',\n    ];\n    // TODO Change language_list to const when design is ready.\n    let language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    // TODO Remove this one line below when design is ready.\n    language_list = { EN: 'English' };\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${decodeURIComponent(param_object.toString())}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, decodeURIComponent(query_string));\n    }\n}\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative-validation-rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","export default        from './register-service-worker';\nexport { unregister } from './register-service-worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n"],"sourceRoot":""}