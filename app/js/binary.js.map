{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/moment/locale sync ja","webpack:///./src/images/app_2/header/symbol.svg","webpack:///./src/javascript/app_2/App/Components/Elements/AccountSwitcher/upgrade_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_footer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/calendar_panel.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_days.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_decades.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_months.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/calendar_years.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Calendar/panels/types.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_header.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_items.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/drawer_toggle.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Drawer/toggle_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_boundary.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/error_component.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Errors/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/FullPageModal/full_page_modal.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/InkBar/inkbar_div.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Notifications/notifications.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PopConfirm/popconfirm_element.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/PortfolioDrawer/portfolio_drawer_card.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/language_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_control.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/SettingsDialog/settings_dialog.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_item.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/Tabs/tabs_wrapper.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/close_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/constants.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/index.js","webpack:///./src/javascript/app_2/App/Components/Elements/ToastMessage/toast.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/localize.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/login_prompt.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/money.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/toggle_button.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/tooltip.jsx","webpack:///./src/javascript/app_2/App/Components/Elements/ui_loader.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/date_picker_input.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DatePicker/index.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/dropdown.jsx","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/helpers.js","webpack:///./src/javascript/app_2/App/Components/Form/DropDown/index.js","webpack:///./src/javascript/app_2/App/Components/Form/button.jsx","webpack:///./src/javascript/app_2/App/Components/Form/fieldset.jsx","webpack:///./src/javascript/app_2/App/Components/Form/input_field.jsx","webpack:///./src/javascript/app_2/App/Components/Form/time_picker.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/network_status.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_fullscreen.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_portfolio.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Footer/toggle_settings.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/account_info.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/index.js","webpack:///./src/javascript/app_2/App/Components/Layout/Header/install_pwa_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/login_button.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/menu_links.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Layout/Header/toggle_notifications_drawer.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/binary_routes.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/button_link.jsx","webpack:///./src/javascript/app_2/App/Components/Routes/helpers.js","webpack:///./src/javascript/app_2/App/Components/Routes/index.js","webpack:///./src/javascript/app_2/App/Components/Routes/route_with_sub_routes.jsx","webpack:///./src/javascript/app_2/App/Constants/app_config.js","webpack:///./src/javascript/app_2/App/Constants/header_links.js","webpack:///./src/javascript/app_2/App/Constants/routes_config.js","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/account_switcher.jsx","webpack:///./src/javascript/app_2/App/Containers/AccountSwitcher/index.js","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/denial_of_service.jsx","webpack:///./src/javascript/app_2/App/Containers/DenialOfServiceModal/index.js","webpack:///./src/javascript/app_2/App/Containers/Drawer/menu_drawer.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/app_contents.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/footer.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/header.jsx","webpack:///./src/javascript/app_2/App/Containers/Layout/theme_wrapper.jsx","webpack:///./src/javascript/app_2/App/Containers/Routes/routes.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/index.js","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_chart.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_general.jsx","webpack:///./src/javascript/app_2/App/Containers/SettingsDialog/settings_language.jsx","webpack:///./src/javascript/app_2/App/Containers/remaining_time.jsx","webpack:///./src/javascript/app_2/App/Containers/server_time.jsx","webpack:///./src/javascript/app_2/App/Containers/toast_message.jsx","webpack:///./src/javascript/app_2/App/app.js","webpack:///./src/javascript/app_2/App/app.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_arrow.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_back.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_close.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_error.jsx","webpack:///./src/javascript/app_2/Assets/Common/icon_exclamation.jsx","webpack:///./src/javascript/app_2/Assets/Common/index.js","webpack:///./src/javascript/app_2/Assets/Contract/icon_entry_spot.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon_flag.jsx","webpack:///./src/javascript/app_2/Assets/Contract/icon_tick.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_maximize.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_quick_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Footer/icon_settings.jsx","webpack:///./src/javascript/app_2/Assets/Footer/index.js","webpack:///./src/javascript/app_2/Assets/Header/Drawer/icon_logout.jsx","webpack:///./src/javascript/app_2/Assets/Header/Drawer/index.js","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_bell.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_cashier.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_hamburger.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_portfolio.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_statement.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/icon_trade.jsx","webpack:///./src/javascript/app_2/Assets/Header/NavBar/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Categories/icon_trade_categories.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Categories/index.js","webpack:///./src/javascript/app_2/Assets/Trading/Types/icon_trade_types.jsx","webpack:///./src/javascript/app_2/Assets/Trading/Types/index.js","webpack:///./src/javascript/app_2/Assets/Trading/icon_lock.jsx","webpack:///./src/javascript/app_2/Constants/contract.js","webpack:///./src/javascript/app_2/Constants/index.js","webpack:///./src/javascript/app_2/Constants/routes.js","webpack:///./src/javascript/app_2/Constants/ui.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_contents.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_group.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Details/details_header.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/digit_display.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/index.js","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_digit.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_expired.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/InfoBox/info_box_general.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_button.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/Sell/sell_info.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Components/contract_error.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_details.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/contract_sell.jsx","webpack:///./src/javascript/app_2/Modules/Contract/Containers/info_box.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/contract_type_cell.jsx","webpack:///./src/javascript/app_2/Modules/Portfolio/Components/empty_portfolio_message.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_line.jsx","webpack:///./src/javascript/app_2/Modules/SmartChart/Components/Markers/marker_spot.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/full_screen_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Elements/mobile_widget.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_dialog.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_item.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_list.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/ContractType/contract_type_widget.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_balance.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_general.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/error_login.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/Templates/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/message_box.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/MessageBox/purchase_result.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/index.js","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/PurchaseLock/purchase_lock.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/Purchase/contract_info.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/amount.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/duration.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/last_digit.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/TradeParams/start_date.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/form_layout.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_large.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Components/Form/screen_small.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/contract_type.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/purchase.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/test.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade.jsx","webpack:///./src/javascript/app_2/Modules/Trading/Containers/trade_params.jsx","webpack:///./src/javascript/app_2/Modules/Trading/index.js","webpack:///./src/javascript/app_2/Services/index.js","webpack:///./src/javascript/app_2/Services/logout.js","webpack:///./src/javascript/app_2/Services/network_monitor.js","webpack:///./src/javascript/app_2/Services/outdated_browser.js","webpack:///./src/javascript/app_2/Services/socket_general.js","webpack:///./src/javascript/app_2/Services/subscription_manager.js","webpack:///./src/javascript/app_2/Services/ws_methods.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Constants/ui.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/chart_markers.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/details.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/digits.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/Helpers/logic.js","webpack:///./src/javascript/app_2/Stores/Modules/Contract/contract_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Portfolio/portfolio_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Constants/markers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/Helpers/barriers.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_barrier_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/chart_marker_store.js","webpack:///./src/javascript/app_2/Stores/Modules/SmartChart/smart_chart_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/Helpers/format_response.js","webpack:///./src/javascript/app_2/Stores/Modules/Statement/statement_store.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/purchase.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Actions/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/contract.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/query_string.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/ui.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Constants/validation_rules.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/barrier.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/chart.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/contract_type.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/currency.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/duration.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/process.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/proposal.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/start_date.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/Helpers/symbol.js","webpack:///./src/javascript/app_2/Stores/Modules/Trading/trade_store.js","webpack:///./src/javascript/app_2/Stores/Modules/index.js","webpack:///./src/javascript/app_2/Stores/base_store.js","webpack:///./src/javascript/app_2/Stores/client_store.js","webpack:///./src/javascript/app_2/Stores/common_store.js","webpack:///./src/javascript/app_2/Stores/connect.js","webpack:///./src/javascript/app_2/Stores/index.js","webpack:///./src/javascript/app_2/Stores/ui_store.js","webpack:///./src/javascript/app_2/Utils/Date/date_time.js","webpack:///./src/javascript/app_2/Utils/Date/index.js","webpack:///./src/javascript/app_2/Utils/Events/storage.js","webpack:///./src/javascript/app_2/Utils/Language/fill_template.js","webpack:///./src/javascript/app_2/Utils/Language/index.js","webpack:///./src/javascript/app_2/Utils/Language/language.js","webpack:///./src/javascript/app_2/Utils/React/component.js","webpack:///./src/javascript/app_2/Utils/URL/base_name.js","webpack:///./src/javascript/app_2/Utils/URL/url_helper.js","webpack:///./src/javascript/app_2/Utils/Validator/declarative_validation_rules.js","webpack:///./src/javascript/app_2/Utils/Validator/errors.js","webpack:///./src/javascript/app_2/Utils/Validator/index.js","webpack:///./src/javascript/app_2/Utils/Validator/validator.js","webpack:///./src/javascript/app_2/Utils/gtm.js","webpack:///./src/javascript/app_2/Utils/pwa/index.js","webpack:///./src/javascript/app_2/Utils/pwa/register_service_worker.js","webpack:///./src/javascript/app_2/index.js","webpack:///./src/javascript/config.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_ref","styles","props","React","createElement","xmlns","width","height","viewBox","fill","d","UpgradeButton","onClick","propTypes","PropTypes","func","Calendar","date_format","start_date","current_date","moment","utc","format","state","calendar_date","selected_date","calendar_view","children","footer","has_today_btn","id","max_date","min_date","isPeriodDisabled","navigators","calendarViews","panelSelectors","setToday","PureComponent","nextMonth","navigateTo","previousMonth","nextYear","previousYear","nextDecade","previousDecade","nextCentury","previousCentury","date","e","is_disabled","updateSelectedDate","month","updateSelected","year","decade","setState","value","unit","is_add","new_date","onSelect","moment_date","dataset","startOf","is_before","isBefore","is_after","isAfter","formatted_date","type","view_map","split","resetCalendar","default_date","now","start_of_period","end_of_period","endOf","defaultProps","add","object","string","bool","is_nativepicker","oneOfType","number","CalendarButton","className","is_hidden","label","array","CalendarFooter","CalendarHeader","is_date_view","is_month_view","is_year_view","is_decade_view","hidden","clone","subtract","CalendarPanel","calendar_panel","default","getDays","dates","days","moment_today","moment_cur_date","num_of_days","daysInMonth","moment_month_start","moment_month_end","first_day","day","last_day","moment_min_date","moment_max_date","moment_selected","push","idx","replace","moment_start_date","unix","map","is_active","isSame","is_today","active","today","disabled","week_headers","CalendarDays","item","CalendarPanelTypes","CalendarDecades","selected_year","decades","min_year","max_year","range","start_year","end_year","getMonthHeaders","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","CalendarMonths","selected_month","month_headers","CalendarYears","current_year","years","Drawer","is_this_drawer_on","setRef","node","ref","hide","scrollToggle","hideDrawers","handleClickOutside","event","contains","is_open","document","body","classList","toggle","alignment","closeBtn","drawer_bg_class","drawer_class","is_main_drawer_on","is_notifications_drawer_on","Component","icon_class","icon_link","drawer_component","ui","DrawerHeader","drawer_header_class","DrawerItem","drawerItemClicked","collapseItems","link_to","text","icon","custom_action","href","drawer_item_component","DrawerItems","is_collapsed","items","list_is_collapsed","visibility","parent_item_class","drawer_items_class","DrawerToggle","to_toggle","ToggleDrawer","showDrawer","showMainDrawer","showNotificationsDrawer","closeDrawer","toggle_class","shape","ErrorBoundary","componentDidCatch","error","info","hasError","render","message","ErrorComponent","msg","str","replacers","FullPageModal","cancel_button_text","confirm_button_text","onConfirm","onCancel","is_visible","title","InkBar","left","inkbar_style","InkBarDiv","updateInkbarPosition","closest","clearInkBar","el","offsetLeft","offsetWidth","window","addEventListener","querySelector","active_el","removeEventListener","other_props","Children","cloneElement","child","Notifications","list","PopConfirm","setWrapperRef","wrapper_ref","handleClose","handleOpen","popconfirm_element","cancel_text","confirm_text","PopConfirmElement","onClose","wrapperRef","popconfirm_class","PortfolioDrawer","onMount","onUnmount","active_positions","currency","is_empty","is_portfolio_drawer_on","toggleDrawer","body_content","portfolio_position","MobxPropTypes","arrayOrObservableArray","any","is_loading","modules","client","portfolio","togglePortfolioDrawer","PortfolioDrawerCard","expiry_time","indicative","status","underlying","LanguageDialog","is_settings_on","language_dialog_class","toLowerCase","SettingsControl","name","style","SettingsDialog","footer_settings_btn","toggleDialog","settings_dialog_class","settings_dialog_container_class","is_language_dialog_visible","settings_content","header","content","GeneralSettings","ChartSettings","Tabs","active_tab_index","setActiveTab","index","TabContents","tab_container_class","tab_header_class","icon_name","TabsItem","elements","onChange","tab_class","TabsWrapper","getSizes","rootBounds","root","getBoundingClientRect","sizes","els","forEach","bounds","right","getUnderlineStyle","size","transition","CloseButton","DEFAULT_DELAY","POSITIONS","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPES","ERROR","INFO","SUCCESS","WARNING","Toast","data","removeToastMessage","destroy","is_closed_by_user","closeOnClick","is_auto_close","undefined","setTimeout","delay","position","toUpperCase","Localize","localized","test","LoginPrompt","IconComponent","onLogin","onSignup","Money","amount","has_sign","is_formatted","sign","abs_value","Math","abs","final_amount","ToggleButton","toggled","toggle_style","Tooltip","UILoader","loading_class","DatePicker","is_datepicker_visible","is_close_btn_visible","handleVisibility","onClickOutside","mainNode","mode","updateDatePickerValue","onMouseEnter","is_clearable","onMouseLeave","onSelectCalendar","isValid","onChangeInput","clearDatePickerInput","updateStore","calendar","nativeEvent","iosClearDefault","defaultValue","placeholder","show","is_read_only","DatePickerInput","class_name","Dropdown","onKeyPressed","keyCode","is_list_visible","preventDefault","curr_index","handleToggle","prev_index","next_index","char","firstChars","x","bind","handleSelect","Items","highlightedIdx","NativeSelect","Array","isArray","getDisplayText","findInArray","arr_list","find","some","getItemFromValue","findIndex","getValueFromIndex","result","getPrevIndex","getNextIndex","Button","has_effect","wrapperClassName","classes","button","wrapper","Fieldset","tooltip","field_left_class","InputField","error_messages","fractional_digits","helper","is_float","is_signed","max_length","prefix","required","has_error","has_valid_length","changeValue","signed_regex","is_number","RegExp","is_not_completed_number","has_zero_at_end","is_scientific_notation","input","TimePickerDropdown","selectOption","is_enabled","prev_hour","prev_minute","is_type_selected","last_updated_type","clear","stopPropagation","resetValues","hours","a","slice","minutes","is_hour_selected","is_minute_selected","prevProps","prevState","preClass","sessions","start_moment","start_moment_clone","minute","second","hour","saveHourRef","h","saveMinuteRef","mm","TimePicker","toggleDropDown","handleChange","arg","saveRef","nodeName","target_element","prefix_class","is_align_right","padding","value_split","NetworkStatus","class","ToggleFullScreen","onFullScreen","is_full_screen","fullscreen_map","element","toggleFullScreen","to_exit","documentElement","fncToCall","fnc","fnc_enter","fnc_exit","full_screen_icon_class","TogglePortfolio","toggle_portfolio_class","ToggleSettings","is_language_visible","is_settings_visible","toggleSettings","toggle_settings_class","AccountInfo","balance","loginid","is_dialog_on","is_upgrade_enabled","onClickUpgrade","account_type","InstallPWAButton","prompt_event","showPrompt","prompt","userChoice","then","choice_result","outcome","LoginButton","redirectToLogin","MenuLinks","arrayOf","ToggleMenuDrawer","ToggleNotificationsDrawer","BinaryLink","to","path","route","Error","exact","BinaryRoutes","ButtonLink","normalizePath","findRouteByPath","routes_config","route_info","routes","isRouteVisible","is_logged_in","is_authenticated","getPath","route_path","params","reduce","p","getContractPath","contract_id","contract","RouteWithSubRoutes","renderFactory","component","Redirect","location","pathname","icon_component","default_title","GTM","pushDataLayer","website_name","header_links","trade","statement","ContractDetails","Portfolio","Settings","Statement","AccountPassword","ApiToken","AuthorizedApplications","CashierPassword","FinancialAssessment","Limits","LoginHistory","PersonalDetails","SelfExclusion","Page404","initRoutesConfig","IconPortfolio","IconStatement","Trade","settings","personal","financial","account_password","cashier_password","exclusion","limits","history","token","apps","error404","route_default","getRoutesConfig","AccountSwitcher","accounts_toggle_btn","switchAccount","account_list","account","doSwitch","requestLogout","account_switcher","virtual_account_loginid","URL","urlFor","DenialOfServiceModal","denial_of_service","is_client_allowed_to_visit","MenuDrawer","is_dark_mode","is_mobile","is_purchase_locked","toggleDarkMode","togglePurchaseLock","is_purchase_confirmed","togglePurchaseConfirmation","is_dark_mode_on","is_purchase_confirm_on","is_purchase_lock_on","AppContents","ProptTypes","Footer","is_settings_dialog_on","network_status","toggleSettingsDialog","common","is_language_dialog_on","Header","can_upgrade","hideInstallButton","is_acc_switcher_on","is_install_button_visible","pwa_prompt_event","setPWAPromptEvent","showInstallButton","toggleAccountsDialog","console","log","account_title","is_accounts_switcher_on","ThemeWrapper","is_dark_theme","theme_wrapper_class","dark","light","Routes","objectOrObservableObject","LanguageSettings","is_asset_visible","is_countdown_visible","is_layout_default","toggleAsset","toggleCountdown","toggleLayout","is_chart_layout_default","is_chart_asset_info_visible","is_chart_countdown_visible","toggleChartAssetInfo","toggleChartCountdown","toggleChartLayout","curr_language","showLanguage","current_language","showLanguageDialog","hideLanguageDialog","RemainingTime","end_time","start_time","remaining_time","isRequired","server_time","ServerTime","gmt_time","ToastMessage","toast_messages","toast","enforceActions","initApp","Client","init","root_store","RootStore","NetworkMonitor","OutdatedBrowser","app","getElementById","App","IconArrow","IconBack","IconClose","IconError","IconExclamation","IconEntrySpot","color","IconFlag","IconTick","circle_color","tick_color","IconMaximize","IconQuickPortfolio","IconSettings","IconLogout","IconBell","IconCashier","IconHamburger","IconTrade","IconTradeCategory","category","IconCategory","IconTradeType","IconType","IconLock","getContractTypeDisplay","ASIANU","ASIAND","CALL","CALLE","PUT","PUTE","DIGITMATCH","DIGITDIFF","DIGITODD","DIGITEVEN","DIGITOVER","DIGITUNDER","EXPIRYMISS","EXPIRYRANGE","EXPIRYRANGEE","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","MAX_MOBILE_WIDTH","MAX_TABLET_WIDTH","DetailsContents","buy_id","details_expiry","details_info","longcode","DetailsGroup","DetailsHeader","header_config","title_purchased","purchased","title_result","icon_purchased","icon_result","oneOf","DigitDisplay","digit_info","digit_number","digit_class","is_win","last","is_last","digit","InfoBoxDigit","InfoBoxExpired","InfoBoxGeneral","contract_info","digits_info","is_ended","digits_array","sort","spot_time","count","tick_count","latest_digit","display_array","last_item","has_flag","has_percentage","sell_info","profit","profit_percentage","percentage_text","transaction_id","buy_price","date_expiry","indicative_price","is_started","onClickSell","SellButton","is_sell_requested","is_valid_to_sell","sell_message","validation_error","SellInfo","sell_price","ContractError","onClickClose","transaction_ids","display_status","buy","onClickNewTrade","error_message","ContractSell","InfoBox","is_trade_page","removeError","is_digit","contract_type","box_class","Contents","removeSellError","ContractTypeCell","EmptyPortfolioMessage","MarkerLine","line_style","MarkerSpot","align","spot_value","FullScreenDialog","visible","checkVisibility","remove","scrollToElement","parent","viewport_offset","top","clientHeight","innerHeight","new_el_top","scrollTop","handleClick","tagName","scrollToTarget","currentTarget","MobileWidget","open","handleDialogClose","handleWidgetClick","ContractTypeDialog","ContractTypeItem","contracts","ContractTypeList","ContractTypeWidget","is_dialog_open","getStyles","container_classes","join","ErrorBalance","ErrorGeneral","ErrorLogin","MessageBox","purchase_info","error_code","PurchaseResult","payout","PurchaseLock","ContractInfo","barrier_count","contract_title","proposal_info","icon_type","stake","returns","Amount","basis","basis_list","currencies_list","is_minimized","is_single_currency","validation_errors","o","amount_container_class","observableObject","Barrier","barrier_1","barrier_2","expiry_list","now_date","min_date_duration","max_date_duration","min_date_expiry","min_day","max_day","start_date_time","Duration","contract_expiry_type","duration","duration_unit","duration_units_list","duration_min_max","expiry_date","expiry_type","moment_now","new_min_day","min","new_max_day","max","moment_expiry","is_same_day","date_time","moment_start_date_time","duration_unit_text","datepicker_footer","has_end_time","expiry","pop","endtime_container_class","last_digit_numbers","LastDigit","last_digit","StartDate","start_dates_list","Number","current_date_config","FormLayout","is_contract_visible","is_trade_enabled","ScreenLarge","ScreenSmall","Contract","contract_types_list","Purchase","is_purchase_enabled","onClickPurchase","onHoverPurchase","resetPurchase","trade_types","purchase_button","is_purchase_error","echo_req","onPurchase","requestProposal","Test","setVisibility","stateVisibility","container","fontSize","lineHeight","zIndex","background","marginTop","display","overflowY","prop_name","componentDidMount","componentWillUnmount","ctrlKey","entries","k","v","JSON","stringify","SmartChart","lazy","form_wrapper_class","symbol","chart_id","onSymbolChange","chart_type","granularity","updateChartType","updateGranularity","is_contract_mode","smart_chart","TradeParams","component_name","form_components","includes","filter","isVisible","trade_store","client_store","renderCards","BinarySocketGeneral","WS","logout","doLogout","response","clearAllAccounts","set","SocketCache","reload","common_store","store","NetworkMonitorBase","is_online","is_network_online","src","$buoop","vs","f","s","c","api","url","noclose","reminder","onshow","nomessage","insecure","script","setAttribute","appendChild","showError","rel","onDisconnect","setIsSocketOpened","onOpen","is_ready","Login","isLoginPages","is_valid_login","subscribeWebsiteStatus","ResponseHandlers","websiteStatus","get","onMessage","handleError","msg_type","is_active_tab","sessionStorage","getItem","removeItem","State","authorize","responseAuthorize","subscribeBalance","getSettings","getAccountStatus","payoutCurrencies","mt5LoginList","setResidence","country","accounts","residence","is_virtual","getSelfExclusion","BinarySocket","sendBuffered","accepted_bch","get_settings","country_code","setEmail","email","responsePayoutCurrencies","payout_currencies","landingCompany","setBalance","wait","setError","is_available","website_status","site_status","availability","SubscriptionManager","subscriptions","forget_requested","subscription_id","subscribe","request_obj","fncCallback","should_forget_first","forget","sub_id","request","stream_id","subscribers","send","callback","dispatch","hasCallbackFunction","forgetStream","sub_info","match_values","sub_ids","forgets_list","hasValues","splice","Promise","all","forgetAll","msg_types","types_to_forget","resolve","forget_all","values_obj","every","activeSymbols","active_symbols","proposal_id","price","contractsFor","contracts_for","get_account_status","get_self_exclusion","landing_company","mt5_login_list","oauthApps","oauth_apps","proposalOpenContract","proposal_open_contract","sell","sellExpired","sell_expired","sendRequest","request_object","limit","offset","date_boundaries","description","cb","subscribeProposal","req","subscribeProposalOpenContract","subscribeTicks","ticks","subscribeTicksHistory","subscribeTransaction","transaction","getHeaderConfig","won","lost","createChartBarrier","SmartChartStore","removeBarriers","barrier","high_barrier","low_barrier","createBarriers","BARRIER_LINE_STYLES","SOLID","not_draggable","updateBarrierShade","createChartMarkers","ContractStore","marker_creators","marker_type","markers","marker_config","createMarker","MARKER_TYPES_CONFIG","LINE_END","createMarkerEndTime","LINE_PURCHASE","createMarkerPurchaseTime","LINE_START","createMarkerStartTime","SPOT_ENTRY","createMarkerSpotEntry","SPOT_EXIT","createMarkerSpotExit","createMarkerConfig","purchase_time","date_start","entry_tick_time","is_sold_before_start","entry_tick","end_spot_time","end_spot","y","content_config","detailsProps","details_props","initDetailsProps","entry_spot","purchase_price","exit_spot","exit_spot_time","getDetailsInfo","sell_time","txt_start_time","txt_entry_spot","getDetailsExpiry","is_user_sold","isDigitContract","getDigitInfo","entry","createDigitInfo","current_spot_time","exit_time","exit_tick_time","is_after_expiry","current","current_spot","spot","isWin","win_checker","getChartConfig","start","end","calculateGranularity","end_epoch","start_epoch","hour_to_granularity_map","m","getDisplayStatus","isEnded","getEndSpot","is_path_dependent","sell_spot","exit_tick","getEndSpotTime","sell_spot_time","getFinalPrice","bid_price","getIndicativePrice","is_expired","is_settleable","isSoldBeforeStart","isStarted","is_forward_starting","isUserSold","isValidToSell","action","bound","chart_config","onSwitchAccount","accountSwitcherListener","setContractMode","updateProposal","disposeSwitchAccount","forgetProposalOpenContract","removeMarkers","handleDigits","handleSell","proposal_response","sold_for","BaseStore","observable","computed","formatPortfolioPosition","portfolio_pos","purchase","parseFloat","reference","details","PortfolioStore","pos","pos1","pos2","act","res","new_pos","pushNewPosition","proposalOpenContractHandler","removePositionById","proposal","prev_indicative","new_indicative","display_name","unshift","initializePortfolio","clearTable","server_epoch","portfolioHandler","transactionHandler","CONTRACT_SHADES","DEFAULT_SHADES","BARRIER_COLORS","GREEN","RED","DASHED","DOTTED","tick_chart_types","MARKER_X_POSITIONER","EPOCH","NONE","MARKER_Y_POSITIONER","VALUE","MARKER_CONTENT_TYPES","LINE","ContentComponent","xPositioner","yPositioner","SPOT","isBarrierSupported","barriersToString","is_relative","barriers_list","barriersObjectToArray","barriers","ChartBarrierStore","onChartBarrierChange","lineStyle","onBarrierChange","high","low","shade","default_shade","has_barrier","relative","draggable","hidePriceLines","should_display","updateBarriers","ChartMarkerStore","local_storage_properties","wsSubscribe","wsForget","wsSendRequest","time","timePromise","is_title_enabled","main","config","assetInformation","countdown","lang","theme","main_barrier","formatStatementTransaction","moment_obj","transaction_time","date_str","time_str","balance_after","should_exclude_currency","action_type","refid","isNaN","desc","app_id","batch_size","StatementStore","has_loaded_all","date_from","date_to","statementHandler","formatted_transactions","transactions","fetchNextBatch","scrollHeight","left_to_scroll","clearDateFilter","onChangeContractTypeList","ContractType","getContractType","onChangeContractType","getContractValues","onChangeExpiry","obj_barriers","getBarriers","processPurchase","onChangeStartDate","obj_contract_start_type","getStartType","contract_start_type","obj_sessions","getSessions","obj_start_time","getStartTime","obj_duration_units_list","getDurationUnitsList","obj_duration_unit","getDurationUnit","obj_expiry_date","getExpiryDate","obj_expiry_time","getExpiryTime","obj_duration_min_max","getDurationMinMax","onChangeSymbolAsync","buildContractTypesConfig","getLocalizedBasis","multiplier","getContractTypesConfig","rise_fall","components","high_low","touch","stay","asian","match_diff","even_odd","over_under","lb_call","lb_put","lb_high_low","getContractCategoriesConfig","allowed_query_string_variables","non_proposal_query_string_variable","proposal_properties_alternative_names","barrier2","removable_proposal_properties","getValidationRules","rules","condition","options","inputs","trigger","buildBarriersConfig","obj_barrier","field","setChartBarrier","available_contract_types","available_categories","contract_types","contract_categories","r","available","sub_cats","has_spot","start_type","durations","buildTradeTypesConfig","forward_starting_dates","contract_display","getArrayDefaultValue","arr_new_values","getComponents","obj_basis","getBasis","obj_trade_types","getTradeTypes","obj_start_dates","getStartDates","obj_start_type","obj_duration_units_min_max","l","ct","c_type","duration_units","arr_units","current_start_date","option","getValidTime","compare_moment","buildMoment","moment_start","is_invalid","end_moment","isSameOrBefore","is_end_of_day","is_end_of_session","barrier_values","toString","arr_basis","localized_basis","cur","bas","getContractCategories","buildCurrenciesList","fiat","crypto","getDefaultCurrency","supported_currencies","values","b","default_currency","getDurationMaps","t","order","to_second","buildDurationConfig","min_max","units_display","obj_min","getDurationFromString","min_contract_duration","obj_max","max_contract_duration","convertDurationUnit","duration_maps","u","from_unit","to_unit","parseInt","duration_string","match","getExpiryType","duration_is_day","expiry_is_after_today","convertDurationLimit","isInteger","floor","processTradeParams","new_state","snapshot","getSnapshot","getMethodsList","extendOrReplace","ContractTypeHelper","new_values","to_replace","getProposalInfo","ask_price","toFixed","display_value","createProposalRequests","requests","new_req","createProposalRequestForContract","current_req","proposal_requests","type_of_contract","obj_expiry","getProposalParametersName","proper_param_name","alternative_name","buildForwardStartingConfig","forward_starting_config","forward_starting_options","duplicated_option","opt","current_session","close","isBeforeDate","should_only_check_hour","now_moment","isSessionAvailable","isBetween","session","pickDefaultSymbol","symbol_info","submarket","Symbol","TradeStore","URLHelper","pruneQueryString","session_storage_properties","validation_rules","debouncedProposal","defineProperty","enumerable","writable","changeDurationValidationRules","query_string_values","updateQueryString","is_invalid_symbol","addToastMessage","setQueryParam","processNewValuesAsync","selectCurrency","is_over","contract_data","pushPurchaseData","is_trade_component_mounted","obj_new_values","is_changed_by_user","is_barrier_changed","is_query_string_applied","validateAllProperties","proper_proposal_params_for_query_string","onProposalResponse","query_params","param","duration_options","validateProperty","refresh","prepareTradeStore","ModulesStore","switchAccountDisposer","switch_account_listener","setValidationRules","setupReactionForLocalStorage","setupReactionForSessionStorage","retrieveFromStorage","properties","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","localStorage","setItem","constructor","local_storage_snapshot","parse","session_storage_snapshot","propertyName","messages","addRule","property","change","newValue","validator","Validator","isPassed","setValidationErrorMessages","errors","listener","switch_broadcast","switchEndSignal","freeze","storage_key","ClientStore","cashier_confirmed","LocalStore","setObject","upgradeable_landing_companies","getResponse","can_open_multi","can_upgrade_to","landing_company_shortcode","canUpgrade","landing_companies","session_start","valueOf","landing_company_name","updateAccountList","excluded_until","param_to_set","value_to_set","switched","getObject","upgrade_info","getBasicUpgradeInfo","registerReactions","getAccount","all_loginids","switchAccountHandler","setLoginFlag","resetLocalStorageValues","getToken","forced","broadcastAccountChange","selected_currency","isDisabled","getAccountInfo","valid_login_ids_regex","acc","CommonStore","is_socket_opened","currentLanguage","SPECIAL_REACT_KEYS","MobxProvider","stores","baseStores","context","mobxStores","Provider","childContextTypes","connect_global_store","mapper","connect","StoreClass","observed","StoredComponent","wrappedDisplayName","displayName","UIStore","handleResize","screen_width","innerWidth","toast_message","toMoment","epoch","setTime","convertToUnix","toGMTFormat","formatDate","daysFromTodayTo","diff","getDiffDuration","formatDuration","asDays","seconds","formatted_str","setStorageEvents","evt","is_logging_in","convertObjectToReactElement","fillTemplate","template","open_tag_id","tag","tag_id","before","pair_code","isValidElement","arr","getAllowedLanguages","exclude_languages","language_list","getURL","getComponentProperties","getOwnPropertyNames","prop","getPropFromStores","getBaseName","regex_string","basename","exec","query_string","search","URLSearchParams","url_object","param_object","delete","append","replaceState","set_query_string","getQueryParams","validRequired","String","validEmail","validPassword","Password","checkPassword","selector","validLetterSymbol","validGeneral","validAddress","validPostCode","validPhone","validRegular","regex","validEmailToken","trim","validTaxID","validBarrier","validCompare","$","val","validNotEqual","validMin","validLength","validNumber","opts","allow_empty","is_ok","decimals","format_money","isMoreThanMax","getPreBuildDVRs","initPreBuildDVRs","address","compare","general","letter_symbol","not_equal","password","phone","postcode","regular","signup_token","tax_id","pre_build_dvrs","getPasswordLengthConfig","Errors","attribute","has","error_count","rule","name1","name2","ruleObject","getRuleObject","is_valid","addFailure","check","is_rule_string","rule_object","bom_ui","barrier1","portfolio_drawer","purchase_confirm","chart","toolbar_position","chart_asset_info","GTMBase","unregister","register","navigator","path_name","sw_url","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ready","check_new_release","checkNewRelease","domain_app_ids","getCurrentBinaryDomain","domain","hostname","isProduction","all_domains","binary_desktop_app_id","getAppId","user_app_id","config_app_id","is_new_app","isBinaryApp","getSocketURL","server_url","is_real","server","module","exports"],"mappings":";AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iDAAyC,4eAA4e,6BAA6B,smBAAsmB;AACxpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA,yCAAiC;;AAEjC;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAwB,kCAAkC;AAC1D,cAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA,kDAA0C,oBAAoB,WAAW;;AAEzE;AACA;AACA;AACA;AACA,wBAAgB,u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","file":"binary.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"binary\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + ({\"404\":\"404\",\"account_password\":\"account_password\",\"api_toke\":\"api_toke\",\"authorized_application\":\"authorized_application\",\"cashier_password\":\"cashier_password\",\"contract\":\"contract\",\"financial_assessment\":\"financial_assessment\",\"limits\":\"limits\",\"login_history\":\"login_history\",\"personal_details\":\"personal_details\",\"portfolio\":\"portfolio\",\"self_exclusion\":\"self_exclusion\",\"settings\":\"settings\",\"statement\":\"statement\",\"vendors~smart_chart\":\"vendors~smart_chart\",\"smart_chart\":\"smart_chart\"}[chunkId]||chunkId) + \"-\" + {\"404\":\"1f20d1cb6ffbf53419ed\",\"account_password\":\"67c66084bc424d34b10b\",\"api_toke\":\"7c72ca04a060c6e8363d\",\"authorized_application\":\"97635409ac3488b8a4dc\",\"cashier_password\":\"0061f340e2203b85c4de\",\"contract\":\"d5ff3abe544011cd2843\",\"financial_assessment\":\"fa615b65ab7d51a072e8\",\"limits\":\"6122a66075b7120f5152\",\"login_history\":\"f73b0e94430bafb6dff4\",\"personal_details\":\"8c2c516db1200e2e67f1\",\"portfolio\":\"1584857c9715b9ff1453\",\"self_exclusion\":\"10c70715aab8e89cdf0f\",\"settings\":\"b65a79071afa6712cab7\",\"statement\":\"0024c341cb419b599fb3\",\"vendors~smart_chart\":\"46f7af5d2158a76c674c\",\"smart_chart\":\"3bd5fe29258265801823\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/app/js/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/javascript/app_2/index.js\",\"binary_common\",\"react_mobx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var map = {\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ja\";","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from \"react\";\nexport default ((_ref) => {\n  let {\n    styles = {}\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"styles\"]);\n\n  return React.createElement(\n    \"svg\",\n    _extends({ xmlns: \"http://www.w3.org/2000/svg\", width: \"46\", height: \"46\", viewBox: \"0 0 60.47 60.47\" }, props),\n    React.createElement(\"path\", { fill: \"#fff\", d: \"M51.61 8.85a30.24 30.24 0 1 0 0 42.77 30.26 30.26 0 0 0 0-42.77z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M21.8 38.17A5.51 5.51 0 0 0 24.33 42l-.58-1.08s1.11-2.92-1.95-2.75z\" }),\n    React.createElement(\"path\", { fill: \"#2a3052\", d: \"M50.08 10.38a28.08 28.08 0 1 0 0 39.72 28.1 28.1 0 0 0 0-39.72zm-2.9 36.81l-.92.87c-6.75 5.5-11.94 2.76-12 2.76-3.52-.7-5.27-.71-6.26-1.37-.25-.17-1-.59-1.23-.49a2.25 2.25 0 0 1-2.72-.16l-.25-.23a1.93 1.93 0 0 1-.37-2.67c.26-.26-.2-1-.2-1s-1.32-2-2.22-3.15a8.79 8.79 0 0 1-1.14-3.91 10.46 10.46 0 0 1-1.46-2.14 5.55 5.55 0 0 0-.78-.94 5 5 0 0 1-.47-.51.21.21 0 0 1 0-.16 5.65 5.65 0 0 1 1.55-2c.32-.21 1.68-1 1.68-1a2.71 2.71 0 0 1 2.08-1.21 9.93 9.93 0 0 1 3.93.6l.84.27c1.42.45 2.67 1 3.66 1.42a16.55 16.55 0 0 0 2 .79c1.75.46 4.85-1 5.5-1.56 1.07-1 1.53-1.63 1.54-2.16a1.2 1.2 0 0 0-.43-.88c-.16-.14-.36-.42-.62-.67a1.12 1.12 0 0 0-.14-.12c-3-3.15-2.46-5.13-2.45-5.16.13-1.42-.69-2.33-1.56-3.27l-.14-.18a1 1 0 0 1-.1-.11 37.8 37.8 0 0 0 4.59 1 8.79 8.79 0 0 0 2.08.11c1.54 0 2.77-.18 2.85-.54a21.27 21.27 0 0 1-4.11-1.21 65.92 65.92 0 0 0-2.72-1c-1.24-.42-2.58-1-2.58-1 5.35 1.4 7.1 2 9.54 2A7.68 7.68 0 0 0 46 18c.35-.06 1.43-.31 1.55-.68a8.74 8.74 0 0 1-3-.48c-6.24-2.06-6.77-3.09-10.23-4.44a31.17 31.17 0 0 0-5.25-1.67 10.13 10.13 0 0 0-4.54 0c-4.73-1.11-5.81-1-7.2-.69a24 24 0 0 1 29.86 3.23 24.46 24.46 0 0 1 2.92 3.54l.11.17a24 24 0 0 1-3 30.19zM31.46 20.13a5.51 5.51 0 0 1 3.1 3.34c-3 .68-2.36-2.37-2.36-2.37z\" })\n  );\n});","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst UpgradeButton = ({ onClick }) => (\n    <Button\n        id='acc-balance-btn'\n        className='primary orange'\n        has_effect\n        text={localize('Upgrade')}\n        onClick={onClick}\n    />\n);\n\nUpgradeButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport { UpgradeButton };\n","import moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarFooter from './calendar_footer.jsx';\nimport CalendarHeader from './calendar_header.jsx';\nimport CalendarPanel  from './calendar_panel.jsx';\n\nclass Calendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        const { date_format, start_date } = props;\n        const current_date = moment.utc(start_date).format(date_format);\n        this.state = {\n            calendar_date: current_date, // calendar date reference\n            selected_date: '',           // selected date\n            calendar_view: 'date',\n        };\n    }\n\n    // navigates to next or previous's month/year/decade/century\n    navigators = {\n        nextMonth      : () => { this.navigateTo(1,   'months', true); },\n        previousMonth  : () => { this.navigateTo(1,   'months', false); },\n        nextYear       : () => { this.navigateTo(1,   'years',  true); },\n        previousYear   : () => { this.navigateTo(1,   'years',  false); },\n        nextDecade     : () => { this.navigateTo(10,  'years',  true); },\n        previousDecade : () => { this.navigateTo(10,  'years',  false); },\n        nextCentury    : () => { this.navigateTo(100, 'years',  true); },\n        previousCentury: () => { this.navigateTo(100, 'years',  false); },\n    };\n\n    // selects a day, a month, a year, or a decade\n    panelSelectors = {\n        date  : (e, is_disabled) => { this.updateSelectedDate(e, is_disabled); },\n        month : (e) => { this.updateSelected(e, 'month'); },\n        year  : (e) => { this.updateSelected(e, 'year'); },\n        decade: (e) => { this.updateSelected(e, 'decade'); },\n    };\n\n    // sets Calendar active view\n    calendarViews = {\n        date  : () => { this.setState({ calendar_view: 'date'   }); },\n        month : () => { this.setState({ calendar_view: 'month'  }); },\n        year  : () => { this.setState({ calendar_view: 'year'   }); },\n        decade: () => { this.setState({ calendar_view: 'decade' }); },\n    };\n\n    navigateTo = (value, unit, is_add) => {\n        const { date_format, max_date, min_date } = this.props;\n\n        let new_date = moment.utc(this.state.calendar_date, date_format)[is_add ? 'add' : 'subtract'](value, unit).format(date_format);\n\n        if (unit === 'months' && this.isPeriodDisabled(new_date, 'month')) return;\n\n        if (unit === 'years'  && this.isPeriodDisabled(new_date, 'years')) {\n            new_date = is_add ? max_date : min_date;\n        }\n\n        this.setState({ calendar_date: moment.utc(new_date, date_format).format(date_format) }); // formatted date\n    };\n\n    updateSelectedDate = (e, is_disabled) => {\n        if (is_disabled) {\n            return;\n        }\n\n        const { date_format, max_date, min_date, onSelect } = this.props;\n\n        const moment_date = moment.utc(e.target.dataset.date).startOf('day');\n        const is_before   = moment_date.isBefore(moment.utc(min_date));\n        const is_after    = moment_date.isAfter(moment.utc(max_date));\n\n        if (is_before || is_after) {\n            return;\n        }\n\n        const formatted_date = moment_date.format(date_format);\n        this.setState({\n            calendar_date: formatted_date,\n            selected_date: formatted_date,\n        });\n\n        if (onSelect) {\n            onSelect(formatted_date);\n        }\n    };\n\n    updateSelected = (e, type) => {\n        const view_map = {\n            month : 'date',\n            year  : 'month',\n            decade: 'year',\n        };\n        const date = moment.utc(this.state.calendar_date, this.props.date_format)[type === 'decade' ? 'year' : type](e.target.dataset[type].split('-')[0]).format(this.props.date_format);\n\n        if (this.isPeriodDisabled(date, type)) return;\n\n        this.setState({\n            calendar_date: date,\n            calendar_view: view_map[type],\n        });\n    };\n\n    resetCalendar = () => {\n        const { date_format, start_date } = this.props;\n\n        const default_date = moment.utc(start_date).format(date_format);\n        this.setState({\n            calendar_date: default_date,\n            selected_date: '',\n            calendar_view: 'date',\n        });\n    };\n\n    setToday = () => {\n        const { date_format, onSelect } = this.props;\n\n        const now = moment().utc().format(date_format);\n        this.setState({\n            calendar_date: now,\n            selected_date: now,\n            calendar_view: 'date',\n        });\n\n        if (onSelect) {\n            onSelect(now, true);\n        }\n    };\n\n    isPeriodDisabled = (date, unit) => {\n        const { max_date, min_date } = this.props;\n\n        const start_of_period = moment.utc(date).startOf(unit);\n        const end_of_period   = moment.utc(date).endOf(unit);\n        return end_of_period.isBefore(moment.utc(min_date))\n            || start_of_period.isAfter(moment.utc(max_date));\n    };\n\n    render() {\n        const { children, date_format, footer, has_today_btn, id, max_date, min_date, start_date } = this.props;\n        const { calendar_date, calendar_view, selected_date  } = this.state;\n\n        return (\n            <div id={id} className='calendar' value={selected_date}>\n                { children }\n                <CalendarHeader\n                    calendar_date={calendar_date}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    onClick={this.navigators}\n                    onSelect={this.calendarViews}\n                    calendar_view={calendar_view}\n                />\n                <CalendarPanel\n                    calendar_date={calendar_date}\n                    date_format={date_format}\n                    isPeriodDisabled={this.isPeriodDisabled}\n                    max_date={max_date}\n                    min_date={min_date}\n                    start_date={start_date}\n                    onClick={this.panelSelectors}\n                    selected_date={selected_date}\n                    calendar_view={calendar_view}\n                />\n                <CalendarFooter\n                    footer={footer}\n                    onClick={this.setToday}\n                    has_today_btn={has_today_btn}\n                />\n            </div>\n        );\n    }\n}\n\nCalendar.defaultProps = {\n    date_format: 'YYYY-MM-DD',\n    min_date   : moment(0).utc().format('YYYY-MM-DD'),              // by default, min_date is set to Unix Epoch (January 1st 1970)\n    max_date   : moment().utc().add(120, 'y').format('YYYY-MM-DD'), // by default, max_date is set to 120 years after today\n};\n\nCalendar.propTypes = {\n    children       : PropTypes.object,\n    date_format    : PropTypes.string,\n    footer         : PropTypes.string,\n    has_today_btn  : PropTypes.bool,\n    id             : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    max_date       : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onSelect  : PropTypes.func,\n    start_date: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default Calendar;\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nexport default function CalendarButton({ children, className, is_hidden, label, onClick }) {\n    return (\n        <React.Fragment>\n            { !is_hidden &&\n                <span\n                    type='button'\n                    className={className}\n                    onClick={onClick}\n                >\n                    {label}\n                    {children}\n                </span>\n            }\n        </React.Fragment>\n    );\n}\n\nCalendarButton.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    className: PropTypes.string,\n    is_hidden: PropTypes.bool,\n    label    : PropTypes.string,\n    onClick  : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarFooter({ footer, has_today_btn, onClick }) {\n    return (\n        <div className='calendar-footer'>\n            { footer && <span className='calendar-footer-extra'>{footer}</span> }\n            { has_today_btn &&\n                <CalendarButton className='calendar-footer-btn'>\n                    <a role='button' onClick={onClick}>{localize('Today')}</a>\n                </CalendarButton>\n            }\n        </div>\n    );\n}\n\nCalendarFooter.propTypes = {\n    footer       : PropTypes.string,\n    has_today_btn: PropTypes.bool,\n    onClick      : PropTypes.func,\n};\n","import classNames     from 'classnames';\nimport moment         from 'moment';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport CalendarButton from './calendar_button.jsx';\n\nexport default function CalendarHeader({ calendar_date, isPeriodDisabled, onClick, onSelect, calendar_view }) {\n    const is_date_view   = calendar_view === 'date';\n    const is_month_view  = calendar_view === 'month';\n    const is_year_view   = calendar_view === 'year';\n    const is_decade_view = calendar_view === 'decade';\n    const moment_date    = moment.utc(calendar_date);\n\n    return (\n        <div className='calendar-header'>\n            <CalendarButton\n                className={classNames('calendar-prev-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    (is_date_view || is_month_view) && onClick.previousYear())\n                    || (is_year_view   && onClick.previousDecade())\n                    || (is_decade_view && onClick.previousCentury()\n                    )\n                }\n            />\n            <CalendarButton\n                className={classNames('calendar-prev-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().subtract(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.previousMonth}\n            />\n\n            <div className='calendar-select'>\n                { is_date_view &&\n                    <CalendarButton\n                        className='calendar-select-month-btn'\n                        is_hidden={!is_date_view}\n                        label={moment_date.format('MMM')}\n                        onClick={onSelect.month}\n                    />\n                }\n                <CalendarButton\n                    className='calendar-select-year-btn'\n                    onClick={() => ((is_date_view || is_month_view) ? onSelect.year() : onSelect.decade())}\n                >\n                    { (is_date_view || is_month_view) && moment_date.year() }\n                    { is_year_view   && `${moment_date.clone().subtract(1, 'years').year()}-${moment_date.clone().add(10, 'years').year()}`  }\n                    { is_decade_view && `${moment_date.clone().subtract(10, 'years').year()}-${moment_date.clone().add(109, 'years').year()}` }\n                </CalendarButton>\n            </div>\n\n            <CalendarButton\n                className={classNames('calendar-next-month-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                is_hidden={!is_date_view}\n                onClick={onClick.nextMonth}\n            />\n            <CalendarButton\n                className={classNames('calendar-next-year-btn', {\n                    hidden: isPeriodDisabled(moment_date.clone().add(1, 'month'), 'month'),\n                })}\n                onClick={() => (\n                    ((is_date_view || is_month_view) && onClick.nextYear())\n                    || (is_year_view   && onClick.nextDecade())\n                    || (is_decade_view && onClick.nextCentury())\n                )}\n            />\n        </div>\n    );\n}\n\nCalendarHeader.propTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    onClick         : PropTypes.object,\n    onSelect        : PropTypes.object,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport {\n    CalendarDays,\n    CalendarMonths,\n    CalendarYears,\n    CalendarDecades } from './panels';\n\nexport default function CalendarPanel(props) {\n    const calendar_panel = {\n        date  : <CalendarDays    {...props} />,\n        month : <CalendarMonths  {...props} />,\n        year  : <CalendarYears   {...props} />,\n        decade: <CalendarDecades {...props} />,\n    };\n\n    return (\n        <div className='calendar-panel'>\n            { calendar_panel[props.calendar_view] }\n        </div>\n    );\n}\n\nCalendarPanel.propTypes = {\n    calendar_view: PropTypes.string,\n};\n","export default from './calendar.jsx';\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { padLeft }        from '_common/string_util';\nimport CalendarPanelTypes from './types';\n\nconst getDays = ({ calendar_date, date_format, max_date, min_date, start_date, onClick, selected_date }) => {\n    const dates = [];\n    const days  = [];\n    const moment_today       = moment().utc().startOf('day');\n    const moment_cur_date    = moment.utc(calendar_date);\n    const num_of_days        = moment_cur_date.daysInMonth() + 1;\n    const moment_month_start = moment_cur_date.clone().startOf('month');\n    const moment_month_end   = moment_cur_date.clone().endOf('month');\n    const first_day          = moment_month_start.day();\n    const last_day           = moment_month_end.day();\n    const moment_min_date    = moment.utc(min_date);\n    const moment_max_date    = moment.utc(max_date);\n    const moment_selected    = moment.utc(selected_date);\n\n    for (let i = first_day; i > 0; i--) {\n        dates.push(moment_month_start.clone().subtract(i, 'day').format(date_format));\n    }\n    for (let idx = 1; idx < num_of_days; idx += 1) {\n        dates.push(moment_cur_date.clone().format(date_format.replace('DD', padLeft(idx, 2, '0'))));\n    }\n    for (let i = 1; i <= 6 - last_day; i++) {\n        dates.push(moment_month_end.clone().add(i, 'day').format(date_format));\n    }\n\n    const moment_start_date = moment.unix(start_date).utc().startOf('day');\n    dates.map((date) => {\n        const moment_date = moment.utc(date).startOf('day');\n        const is_active   = selected_date && moment_date.isSame(moment_selected);\n        const is_today    = moment_date.isSame(moment_today, 'day');\n        const is_disabled = moment_date.isBefore(moment_min_date) || moment_date.isAfter(moment_max_date) ||\n            // for forward starting accounts, only show same day as start date and the day after\n            (start_date && (moment_date.isBefore(moment_start_date) || moment_date.isAfter(moment_start_date.clone().add(1, 'day'))));\n\n        days.push(\n            <span\n                key={date}\n                className={classNames('calendar-date', {\n                    active  : is_active && !is_disabled,\n                    today   : is_today,\n                    disabled: is_disabled,\n                })}\n                onClick={(e) => { onClick.date(e, is_disabled); }}\n                data-date={date}\n            >\n                {moment_date.date()}\n            </span>\n        );\n    });\n\n    return days;\n};\n\nconst week_headers = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n\nexport const CalendarDays = (props) => {\n    const days = getDays(props).map(day => day);\n\n    return (\n        <div className='calendar-date-panel'>\n            {week_headers.map((item, idx) => (<span key={idx} className='calendar-date-header'>{item}</span>))}\n            {days}\n        </div>\n    );\n};\n\nCalendarDays.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarDecades = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n\n    const decades = [];\n    let min_year  = moment_date.year() - 10;\n    for (let i = 0; i < 12; i++) {\n        const max_year = min_year + 9;\n        const range    = `${min_year}-${max_year}`;\n        decades.push(range);\n        min_year = max_year + 1;\n    }\n\n    return (\n        <div className='calendar-decade-panel'>\n            {decades.map((range, idx) => {\n                const [start_year, end_year] = range.split('-');\n                return (\n                    <span\n                        key={idx}\n                        className={classNames('calendar-decade', {\n                            disabled: isPeriodDisabled(moment_date.year(start_year), 'year') && isPeriodDisabled(moment_date.year(end_year), 'year'),\n                            active  : start_year === selected_year,\n                        })}\n                        onClick={onClick.decade}\n                        data-decade={range}\n                    >\n                        {range}\n                    </span>\n                );\n            })}\n        </div>\n    );\n};\n\nCalendarDecades.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport { localize }       from '_common/localize';\nimport CalendarPanelTypes from './types';\n\nconst getMonthHeaders = () => ({\n    Jan: localize('Jan'),\n    Feb: localize('Feb'),\n    Mar: localize('Mar'),\n    Apr: localize('Apr'),\n    May: localize('May'),\n    Jun: localize('Jun'),\n    Jul: localize('Jul'),\n    Aug: localize('Aug'),\n    Sep: localize('Sep'),\n    Oct: localize('Oct'),\n    Nov: localize('Nov'),\n    Dec: localize('Dec'),\n});\n\nexport const CalendarMonths = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const moment_date    = moment.utc(calendar_date);\n    const selected_month = moment.utc(selected_date).month();\n    const month_headers  = getMonthHeaders();\n\n    return (\n        <div className='calendar-month-panel'>\n            {Object.keys(month_headers).map((month, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-month', {\n                        active  : idx === selected_month,\n                        disabled: isPeriodDisabled(moment_date.month(month), 'month'),\n                    })}\n                    onClick={onClick.month}\n                    data-month={idx}\n                >\n                    {month_headers[month]}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarMonths.propTypes = { ...CalendarPanelTypes };\n","import classNames         from 'classnames';\nimport moment             from 'moment';\nimport React              from 'react';\nimport CalendarPanelTypes from './types';\n\nexport const CalendarYears = ({ calendar_date, isPeriodDisabled, onClick, selected_date }) => {\n    const selected_year = moment.utc(selected_date).year();\n    const moment_date   = moment.utc(calendar_date);\n    const current_year  = moment_date.year();\n    const years         = [];\n    for (let year = current_year - 1; year < current_year + 11; year++) {\n        years.push(year);\n    }\n    return (\n        <div className='calendar-year-panel'>\n            {years.map((year, idx) => (\n                <span\n                    key={idx}\n                    className={classNames('calendar-year', {\n                        disabled: isPeriodDisabled(moment_date.year(year), 'year'),\n                        active  : year === selected_year,\n                    })}\n                    onClick={onClick.year}\n                    data-year={year}\n                >\n                    {year}\n                </span>\n            ))}\n        </div>\n    );\n};\n\nCalendarYears.propTypes = { ...CalendarPanelTypes };\n","export * from './calendar_days.jsx';\nexport * from './calendar_months.jsx';\nexport * from './calendar_years.jsx';\nexport * from './calendar_decades.jsx';\n","import PropTypes from 'prop-types';\n\nexport const CalendarPanelTypes = {\n    calendar_date   : PropTypes.string,\n    calendar_view   : PropTypes.string,\n    date_format     : PropTypes.string,\n    isPeriodDisabled: PropTypes.func,\n    max_date        : PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    min_date: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.string,\n    ]),\n    onClick      : PropTypes.object,\n    selected_date: PropTypes.string,\n};\n","import classNames       from 'classnames';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport { connect }      from 'Stores/connect';\nimport { DrawerHeader } from './drawer_header.jsx';\n\nclass Drawer extends React.Component {\n    state = {\n        is_this_drawer_on: false,\n    };\n\n    setRef = (node) => {\n        this.ref = node;\n    };\n\n    scrollToggle(state) {\n        this.is_open = state;\n        document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.alignment === 'left') {\n            state.is_this_drawer_on = props.is_main_drawer_on;\n        } else if (props.alignment === 'right'){\n            state.is_this_drawer_on = props.is_notifications_drawer_on;\n        }\n\n        return state;\n    }\n\n    hide = () => {\n        this.scrollToggle(false);\n        this.props.hideDrawers();\n    };\n\n    handleClickOutside = (event) => {\n        if (this.state.is_this_drawer_on) {\n            if (this.ref && !this.ref.contains(event.target)) {\n                this.hide();\n            }\n        }\n    };\n\n    render() {\n        const { is_this_drawer_on } = this.state;\n        const { alignment, closeBtn, children } = this.props;\n\n        const drawer_bg_class = classNames('drawer-bg', {\n            'show': is_this_drawer_on,\n        });\n        const drawer_class = classNames('drawer', alignment);\n\n        return (\n            <CSSTransition\n                in={is_this_drawer_on}\n                timeout={150}\n                classNames='drawer-container'\n                unmountOnExit\n            >\n                <aside className='drawer-container'>\n                    <div\n                        className={drawer_bg_class}\n                        onClick={this.handleClickOutside}\n                    >\n                        <div\n                            ref={this.setRef}\n                            className={drawer_class}\n                        >\n                            <DrawerHeader\n                                alignment={alignment}\n                                closeBtn={closeBtn}\n                            />\n                            {children}\n                        </div>\n                    </div>\n                </aside>\n            </CSSTransition>\n        );\n    }\n}\n\nDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    closeBtn                  : PropTypes.func,\n    footer                    : PropTypes.func,\n    hideDrawers               : PropTypes.func,\n    icon_class                : PropTypes.string,\n    icon_link                 : PropTypes.string,\n    is_main_drawer_on         : PropTypes.bool,\n    is_notifications_drawer_on: PropTypes.bool,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        is_main_drawer_on         : ui.is_main_drawer_on,\n        is_notifications_drawer_on: ui.is_notifications_drawer_on,\n        hideDrawers               : ui.hideDrawers,\n    })\n)(Drawer);\n\nexport { drawer_component as Drawer };\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { localize }  from '_common/localize';\nimport { IconClose } from 'Assets/Common';\n\nexport const DrawerHeader = ({\n    alignment,\n    closeBtn,\n}) => {\n    const drawer_header_class = classNames('drawer-header', alignment);\n    return (\n        <React.Fragment>\n            {alignment && alignment === 'right' ?\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='notifications-header'>\n                        <h4>{localize('all notifications')}</h4>\n                    </div>\n                </div>\n                :\n                <div className={drawer_header_class}>\n                    <div className='icons btn-close' onClick={closeBtn}>\n                        <IconClose />\n                    </div>\n                    <div className='icons brand-logo'>\n                        <div className='img' />\n                    </div>\n                </div>\n            }\n        </React.Fragment>\n    );\n};\n\nDrawerHeader.propTypes = {\n    alignment: PropTypes.string,\n    closeBtn : PropTypes.func,\n};\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport { BinaryLink } from '../../Routes';\n\nclass DrawerItem extends React.Component {\n    drawerItemClicked = () => {\n        this.props.hideDrawers();\n        if (this.props.collapseItems) {\n            this.props.collapseItems();\n        }\n    };\n\n    render() {\n        const { link_to, text, icon, custom_action } = this.props;\n\n        return (\n            <div className='drawer-item' onClick={this.drawerItemClicked}>\n                {custom_action ?\n                    <a href='javascript:;' onClick={custom_action}>\n                        <span>{icon}{text}</span>\n                    </a>\n                    :\n                    <BinaryLink to={link_to}>\n                        <span>{icon}{text}</span>\n                    </BinaryLink>\n                }\n            </div>\n        );\n    }\n}\n\nDrawerItem.propTypes = {\n    collapseItems: PropTypes.func,\n    custom_action: PropTypes.func,\n    hideDrawers  : PropTypes.func,\n    href         : PropTypes.string,\n    icon         : PropTypes.node,\n    link_to      : PropTypes.string,\n    text         : PropTypes.string,\n};\n\nconst drawer_item_component = connect(({ ui }) => ({\n    hideDrawers: ui.hideDrawers,\n}))(DrawerItem);\n\nexport { drawer_item_component as DrawerItem };\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { DrawerItem } from './drawer_item.jsx';\n\nclass DrawerItems extends React.Component {\n    state = { is_collapsed: false };\n\n    collapseItems = () => {\n        this.setState({\n            is_collapsed: !this.state.is_collapsed,\n        });\n    };\n\n    render() {\n        const { is_collapsed } = this.state;\n        const { text, items } = this.props;\n\n        const list_is_collapsed = {\n            visibility: is_collapsed ? 'visible' : 'hidden',\n        };\n        const parent_item_class = classNames('parent-item', {\n            'show': is_collapsed,\n        });\n        const drawer_items_class = classNames('drawer-items', {\n            'show': is_collapsed,\n        });\n        return (\n            <React.Fragment>\n                <div className='drawer-item' onClick={this.collapseItems}>\n                    <span className={parent_item_class}>{text}</span>\n                </div>\n                <div\n                    className={drawer_items_class}\n                    style={list_is_collapsed}\n                >\n                    <div className='items-group'>\n                        {items.map((item, idx) => (\n                            <DrawerItem key={idx} {...item} collapseItems={this.collapseItems} />\n                        ))}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nDrawerItems.propTypes = {\n    items: PropTypes.array,\n    text : PropTypes.string,\n};\n\nexport { DrawerItems };\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst DrawerToggle = ({\n    text,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='drawer-item__toggle' onClick={toggle}>\n        <span>{text}</span>\n        <ToggleButton\n            toggled={to_toggle}\n        />\n    </div>\n);\n\nDrawerToggle.propTypes = {\n    text     : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport { DrawerToggle };\n","export * from './drawer_header.jsx';\nexport * from './drawer_item.jsx';\nexport * from './drawer_items.jsx';\nexport * from './drawer.jsx';\nexport * from './drawer_toggle.jsx';\nexport * from './toggle_drawer.jsx';\n","import classNames  from 'classnames';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\nimport { Drawer }  from './drawer.jsx';\n\nclass ToggleDrawer extends React.Component {\n    showDrawer = () => {\n        const { alignment } = this.props;\n        if (alignment === 'left') {\n            this.props.showMainDrawer();\n        } else if (alignment === 'right') {\n            this.props.showNotificationsDrawer();\n        }\n    };\n\n    closeDrawer = () => {\n        this.props.hideDrawers();\n    };\n\n    render() {\n        const { icon_class, icon, alignment, children } = this.props;\n\n        const toggle_class = classNames('navbar-icons', icon_class);\n\n        return (\n            <React.Fragment>\n                <div className={toggle_class} onClick={this.showDrawer}>\n                    {icon}\n                </div>\n                <Drawer\n                    alignment={alignment}\n                    closeBtn={this.closeDrawer}\n                >\n                    {children}\n                </Drawer>\n            </React.Fragment>\n        );\n    }\n}\n\nToggleDrawer.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    footer     : PropTypes.func,\n    hideDrawers: PropTypes.func,\n    icon       : PropTypes.shape({\n        className: PropTypes.string,\n    }),\n    icon_class             : PropTypes.string,\n    showMainDrawer         : PropTypes.func,\n    showNotificationsDrawer: PropTypes.func,\n};\n\nconst drawer_component = connect(\n    ({ ui }) => ({\n        showMainDrawer         : ui.showMainDrawer,\n        showNotificationsDrawer: ui.showNotificationsDrawer,\n        hideDrawers            : ui.hideDrawers,\n    })\n)(ToggleDrawer);\n\nexport { drawer_component as ToggleDrawer };\n","import React from 'react';\n\nexport default class ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    }\n\n    render = () => this.state.hasError ?\n        (\n            <div className='error-box'>\n                {this.state.error.message}\n            </div>\n        ) : this.props.children\n}\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport IconError    from 'Assets/Common/icon_error.jsx';\nimport { localize } from '_common/localize';\nimport Localize     from '../localize.jsx';\n\nconst ErrorComponent = ({ type, message }) => {\n    let msg = '';\n    if (typeof message === 'object') {\n        msg = <Localize\n            str={message.str}\n            replacers={message.replacers}\n        />;\n    } else {\n        msg = message;\n    }\n    return (\n        <div className='error-container'>\n            <IconError type={type} />\n            <p>{msg || localize('Sorry, an error occured while processing your request.')}</p>\n        </div>\n    );\n};\n\nErrorComponent.propTypes = {\n    message: PropTypes.oneOfType([\n        PropTypes.shape({\n            replacers: PropTypes.object,\n            str      : PropTypes.string,\n        }),\n        PropTypes.string,\n    ]),\n    type: PropTypes.string,\n};\n\nexport default ErrorComponent;\n","export default from './error_component.jsx';\n","import React     from 'react';\nimport PropTypes from 'prop-types';\n\nconst FullPageModal = ({\n    cancel_button_text,\n    children,\n    confirm_button_text,\n    onConfirm,\n    onCancel,\n    is_visible,\n    title,\n}) => {\n    if (is_visible) {\n        return (\n            <div className='full-page-modal'>\n                <div className='modal-dialog'>\n                    <h1>{title}</h1>\n                    <p>{children}</p>\n                    <div className='modal-footer'>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onCancel}\n                        >\n                            <span>{cancel_button_text}</span>\n                        </div>\n                        <div\n                            className='btn flat effect primary'\n                            onClick={onConfirm}\n                        >\n                            <span>{confirm_button_text}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return <React.Fragment />;\n};\n\nFullPageModal.propTypes = {\n    cancel_button_text : PropTypes.string,\n    confirm_button_text: PropTypes.string,\n    is_visible         : PropTypes.bool,\n    onCancel           : PropTypes.func,\n    onConfirm          : PropTypes.func,\n    title              : PropTypes.string,\n};\n\nexport default FullPageModal;\n","export default from './inkbar_div.jsx';\nexport *       from './inkbar.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst InkBar = ({ left, width }) => {\n    const inkbar_style = {\n        left,\n        width,\n    };\n\n    return (\n        <span style={inkbar_style} className='inkbar' />\n    );\n};\n\nInkBar.propTypes = {\n    left : PropTypes.number,\n    width: PropTypes.number,\n};\n\nexport { InkBar };\n","import classnames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport { InkBar } from './inkbar.jsx';\n\nclass InkBarDiv extends React.Component {\n    constructor(props) {\n        super(props);\n        window.addEventListener('resize', this.updateInkbarPosition);\n        this.state = {\n            left : 0,\n            width: 0,\n        };\n    }\n\n    componentDidMount() {\n        if (!this.node) return;\n        this.updateInkbarPosition(this.node.querySelector('a[class=\"active\"]'));\n    }\n\n    componentDidUpdate() {\n        const active_el = this.node.querySelector('a[class=\"active\"]');\n        if (active_el) {\n            this.updateInkbarPosition(active_el);\n        } else if (this.state.left !== 0 || this.state.width !== 0) {\n            this.clearInkBar(); // clear InkBar when active element doesn't exist\n        }\n    }\n\n    componentWillUnMount() {\n        window.removeEventListener('resize', this.updateInkbarPosition);\n        this.clearInkBar();\n    }\n\n    onClick = (e) => {\n        if (!e.target) return;\n        this.updateInkbarPosition(e.target.closest('a'));\n    };\n\n    clearInkBar = () => {\n        this.setState({\n            left : 0,\n            width: 0,\n        });\n    };\n\n    updateInkbarPosition = (el) => {\n        if (!el) return;\n        const { offsetLeft: left, offsetWidth: width } = el;\n        if (this.state.width !== width) {\n            this.setState({ width });\n        }\n        if (this.state.left !== left) {\n            this.setState({ left });\n        }\n    };\n\n    render() {\n        const { className, ...other_props } = this.props;\n        const props = {\n            className: classnames('has-inkbar', className),\n            ...other_props,\n        };\n\n        return (\n            <div ref={(node) => this.node = node} {...props}>\n                {\n                    React.Children.map(this.props.children, child => (\n                        React.cloneElement(child, {\n                            onClick: this.onClick,\n                        })\n                    ))\n                }\n                <InkBar left={this.state.left} width={this.state.width} />\n            </div>\n        );\n    }\n}\n\nInkBarDiv.propTypes = {\n    children : PropTypes.array,\n    className: PropTypes.string,\n};\n\nexport default InkBarDiv;\n","export * from './notifications.jsx';\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { localize }        from '_common/localize';\nimport { IconBell }        from 'Assets/Header/NavBar';\nimport { DrawerItem }      from '../Drawer';\n\nconst Notifications = ({ list }) => (\n    <React.Fragment>\n        {\n            list && list.length ?\n                list.map((item, idx) => (\n                    <React.Fragment key={idx}>\n                        <DrawerItem text={item[idx]} />\n                    </React.Fragment>\n                ))\n                :\n                <div className='no-notifications-container'>\n                    <div className='notification-message'>\n                        <div className='bell-icon'>\n                            <IconBell />\n                        </div>\n                        <div>\n                            <h4>{localize('No Notifications')}</h4>\n                            <span className='no-notifications-message'>{localize('You have yet to receive any notifications')}</span>\n                        </div>\n                    </div>\n                </div>\n        }\n\n    </React.Fragment>\n);\n\nNotifications.propTypes = {\n    'list': PropTypes.object,\n};\n\nexport { Notifications };\n","export * from './popconfirm.jsx';\nexport * from './popconfirm_element.jsx';\n","import React                 from 'react';\nimport PropTypes             from 'prop-types';\nimport { PopConfirmElement } from './popconfirm_element.jsx';\n\nclass PopConfirm extends React.Component {\n    state = {\n        is_open: false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_open) {\n            this.setState({ is_open: false });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ is_open: false });\n    };\n\n    handleOpen = (event) => {\n        if (!this.wrapper_ref.contains(event.target)) {\n            this.setState({ is_open: true });\n        }\n    };\n\n    render() {\n        const popconfirm_element = (\n            <PopConfirmElement\n                wrapperRef={this.setWrapperRef}\n                alignment={this.props.alignment}\n                cancel_text={this.props.cancel_text}\n                confirm_text={this.props.confirm_text}\n                is_visible={this.state.is_open}\n                message={this.props.message}\n                onConfirm={this.props.children.props.onClick}\n                onClose={this.handleClose}\n            />\n        );\n        return (\n            <React.Fragment>\n                {React.Children.map(this.props.children, child => (\n                    React.cloneElement(child, {\n                        onClick: this.handleOpen,\n                    }, popconfirm_element)\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nPopConfirm.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    children    : PropTypes.object,\n    confirm_text: PropTypes.string,\n    message     : PropTypes.string,\n};\n\nexport { PopConfirm };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { IconExclamation } from 'Assets/Common';\n\nconst PopConfirmElement = ({\n    alignment,\n    cancel_text,\n    confirm_text,\n    is_visible,\n    message,\n    onClose,\n    onConfirm,\n    wrapperRef,\n}) => {\n    const popconfirm_class = classNames('popconfirm', alignment, {\n        'open': is_visible,\n    });\n    return (\n        <div ref={wrapperRef} className={popconfirm_class}>\n            <div className='popconfirm-title'>\n                <IconExclamation />\n                <h4>{message}</h4>\n            </div>\n            <div className='popconfirm-buttons'>\n                <div\n                    className='btn flat effect'\n                    onClick={onClose}\n                >\n                    <span>{cancel_text}</span>\n                </div>\n                <div\n                    className='btn flat effect'\n                    onClick={onConfirm}\n                >\n                    <span>{confirm_text}</span>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nPopConfirmElement.propTypes = {\n    alignment   : PropTypes.string,\n    cancel_text : PropTypes.string,\n    confirm_text: PropTypes.string,\n    is_visible  : PropTypes.bool,\n    message     : PropTypes.string,\n    onClose     : PropTypes.func,\n    onConfirm   : PropTypes.func,\n    wrapperRef  : PropTypes.func,\n};\n\nexport { PopConfirmElement };\n","export default from './portfolio_drawer.jsx';\n","import classNames                     from 'classnames';\nimport { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport SimpleBar                      from 'simplebar-react';\nimport { localize }                   from '_common/localize';\nimport { IconClose }                  from 'Assets/Common';\nimport EmptyPortfolioMessage          from 'Modules/Portfolio/Components/empty_portfolio_message.jsx';\nimport { connect }                    from 'Stores/connect';\nimport PortfolioDrawerCard            from './portfolio_drawer_card.jsx';\n\nclass PortfolioDrawer extends React.Component {\n    componentDidMount()    { this.props.onMount(); }\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            active_positions,\n            error,\n            currency,\n            is_empty,\n            is_portfolio_drawer_on,\n            toggleDrawer,\n        } = this.props;\n\n        let body_content;\n\n        if (error) {\n            body_content = <p>{error}</p>;\n        } else if (is_empty) {\n            body_content = <EmptyPortfolioMessage />;\n        } else {\n            body_content = active_positions.map((portfolio_position) => (\n                <PortfolioDrawerCard\n                    key={portfolio_position.id}\n                    currency={currency}\n                    {...portfolio_position}\n                />\n            ));\n        }\n\n        return (\n            <div className={classNames('portfolio-drawer', { 'portfolio-drawer--open': is_portfolio_drawer_on })}>\n                <div className='portfolio-drawer__header'>\n                    <span className='portfolio-drawer__icon-main ic-portfolio' />\n                    <span className='portfolio-drawer__title'>{localize('Portfolio Quick Menu')}</span>\n                    <div\n                        className='portfolio-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <IconClose />\n                    </div>\n                </div>\n                <div className='portfolio-drawer__body'>\n                    <SimpleBar style={{ height: '100%' }}>\n                        {body_content}\n                    </SimpleBar>\n                </div>\n            </div>\n        );\n    }\n}\n\nPortfolioDrawer.propTypes = {\n    active_positions      : MobxPropTypes.arrayOrObservableArray,\n    children              : PropTypes.any,\n    currency              : PropTypes.string,\n    error                 : PropTypes.string,\n    is_empty              : PropTypes.bool,\n    is_loading            : PropTypes.bool,\n    is_portfolio_drawer_on: PropTypes.bool,\n    onMount               : PropTypes.func,\n    onUnmount             : PropTypes.func,\n    toggleDrawer          : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, client, ui }) => ({\n        active_positions      : modules.portfolio.active_positions,\n        is_loading            : modules.portfolio.is_loading,\n        error                 : modules.portfolio.error,\n        is_empty              : modules.portfolio.is_empty,\n        onMount               : modules.portfolio.onMount,\n        onUnmount             : modules.portfolio.onUnmount,\n        currency              : client.currency,\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n        toggleDrawer          : ui.togglePortfolioDrawer,\n    })\n)(PortfolioDrawer);\n","import PropTypes           from 'prop-types';\nimport React               from 'react';\nimport ContractTypeCell    from 'Modules/Portfolio/Components/contract_type_cell.jsx';\nimport Money               from '../money.jsx';\nimport BinaryLink          from '../../Routes/binary_link.jsx';\nimport { getContractPath } from '../../Routes/helpers';\nimport RemainingTime       from '../../../Containers/remaining_time.jsx';\n\nconst PortfolioDrawerCard = ({\n    currency,\n    expiry_time,\n    id,\n    indicative,\n    status,\n    type,\n    underlying,\n}) => (\n    <BinaryLink className='portfolio-drawer-card' to={getContractPath(id)}>\n        <React.Fragment>\n            <div className='portfolio-drawer-card__type'>\n                <ContractTypeCell type={type} />\n            </div>\n            <div className={`portfolio-drawer-card__indicative portfolio-drawer-card__indicative--${status}`}>\n                <Money amount={indicative} currency={currency} />\n            </div>\n            <span className='portfolio-drawer-card__symbol'>{underlying}</span>\n            <span className='portfolio-drawer-card__remaining-time'>\n                <RemainingTime end_time={expiry_time} />\n            </span>\n        </React.Fragment>\n    </BinaryLink>\n);\n\nPortfolioDrawerCard.propTypes = {\n    currency   : PropTypes.string,\n    expiry_time: PropTypes.PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    id        : PropTypes.number,\n    indicative: PropTypes.number,\n    status    : PropTypes.string,\n    type      : PropTypes.string,\n    underlying: PropTypes.string,\n};\n\nexport default PortfolioDrawerCard;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { IconBack }    from 'Assets/Common';\nimport {\n    getAllowedLanguages,\n    getURL }           from 'Utils/Language';\n\nconst LanguageDialog = ({ hide, is_visible, is_settings_on }) => {\n    const language_dialog_class = classNames('language-dialog-container', {\n        'show': is_visible && is_settings_on,\n    });\n\n    return (\n        <div className={language_dialog_class}>\n            <div className='language-header' onClick={hide}>\n                <IconBack className='arrow-back' />\n                <span>{localize('language')}</span>\n            </div>\n            <div className='language-container'>\n                {Object.keys(getAllowedLanguages()).map(key => (\n                    <React.Fragment key={key}>\n                        <div className='language-row'>\n                            <a href={getURL(key)} >\n                                <i className={`flag ic-flag-${key.replace(/(\\s|_)/, '-').toLowerCase()}`} />\n                                <span>{getAllowedLanguages()[key]}</span>\n                            </a>\n                        </div>\n                    </React.Fragment>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nLanguageDialog.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default LanguageDialog;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ToggleButton from '../toggle_button.jsx';\n\nconst SettingsControl = ({\n    children,\n    name,\n    onClick,\n    style,\n    to_toggle,\n    toggle,\n}) => (\n    <div className='settings-row' onClick={toggle || onClick}>\n        <span>{name}</span>\n        {toggle ?\n            <ToggleButton\n                toggled={to_toggle}\n                style={style}\n            />\n            :\n            children\n        }\n    </div>\n);\n\nSettingsControl.propTypes = {\n    children : PropTypes.node,\n    name     : PropTypes.string,\n    onClick  : PropTypes.func,\n    style    : PropTypes.string,\n    to_toggle: PropTypes.bool,\n    toggle   : PropTypes.func,\n};\n\nexport default SettingsControl;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { Tabs }        from '../Tabs';\nimport {\n    ChartSettings,\n    GeneralSettings,\n    LanguageSettings } from '../../../Containers/SettingsDialog';\n\nclass SettingsDialog extends React.PureComponent {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    // TODO - Simplify this\n    handleClickOutside = (event) => {\n        const footer_settings_btn = !(event.target.classList.contains('ic-settings', 'ic-settings active'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.props.is_open && footer_settings_btn) {\n            this.props.toggleDialog();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    static get settings_content() {\n        return {\n            1: { header: localize('General'), content: GeneralSettings },\n            2: { header: localize('Chart'), content: ChartSettings },\n        };\n    }\n\n    render() {\n        const settings_dialog_class = classNames('settings-dialog', {\n            'show': this.props.is_open,\n        });\n        const settings_dialog_container_class = classNames('settings-dialog-container', {\n            hide: this.props.is_language_dialog_visible,\n        });\n        return (\n            <div ref={this.setWrapperRef} className={settings_dialog_class}>\n                <div className={settings_dialog_container_class}>\n                    <span className='settings-header'>{localize('Settings')}</span>\n                    <Tabs alignment='center' list={SettingsDialog.settings_content} />\n                </div>\n                <LanguageSettings />\n            </div>\n        );\n    }\n}\n\nSettingsDialog.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_open                   : PropTypes.bool,\n    toggleDialog              : PropTypes.func,\n};\n\nexport default SettingsDialog;\n","export * from './tabs.jsx';\nexport * from './tabs_item.jsx';\nexport * from './tabs_wrapper.jsx';\n","import classNames      from 'classnames';\nimport React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { TabsWrapper } from './tabs_wrapper.jsx';\n\nclass Tabs extends React.PureComponent {\n    state = {\n        active_tab_index: '1',\n    };\n\n    setActiveTab = (index) => {\n        this.setState({ active_tab_index: index });\n    };\n\n    render() {\n        const TabContents = this.props.list[this.state.active_tab_index].content;\n        const tab_container_class = classNames('tab-container', this.props.alignment);\n        const tab_header_class = (icon_name) => classNames(\n            { icon: icon_name },\n            icon_name,\n        );\n\n        return (\n            <div className={tab_container_class}>\n                <TabsWrapper\n                    active={this.state.active_tab_index}\n                    onChange={active => this.setActiveTab(active)}\n                >\n                    {\n                        Object.keys(this.props.list).map(key => (\n                            <React.Fragment key={key}>\n                                <span\n                                    className={tab_header_class(this.props.list[key].icon)}\n                                    title={this.props.list[key].header}\n                                >\n                                    {this.props.list[key].header}\n                                </span>\n                            </React.Fragment>\n                        ))\n                    }\n                </TabsWrapper>\n                <TabContents />\n            </div>\n        );\n    }\n}\n\nTabs.propTypes = {\n    alignment: PropTypes.string,\n    list     : PropTypes.shape({\n        header: PropTypes.string,\n        icon  : PropTypes.string,\n    }),\n};\n\nexport { Tabs };\n","import classNames from 'classnames';\nimport React      from 'react';\nimport PropTypes  from 'prop-types';\n\nconst TabsItem = ({\n    active,\n    children,\n    elements,\n    onChange,\n}) => (\n    React.Children.map(children, (child) => {\n        const tab_class = classNames(\n            'tab',\n            { 'tab--active': child.key === active },\n        );\n        return (\n            <div\n                className={tab_class}\n                ref={el => elements[child.key] = el}\n                onClick={() => {\n                    onChange(child.key);\n                }}\n            >\n                {child}\n            </div>\n        );\n    })\n);\n\nTabsItem.propTypes = {\n    active  : PropTypes.string,\n    children: PropTypes.node,\n    elements: PropTypes.object,\n    onChange: PropTypes.func,\n};\n\nexport { TabsItem };\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { TabsItem } from './tabs_item.jsx';\n\nclass TabsWrapper extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sizes: {},\n        };\n        this.els = {};\n    }\n\n    componentDidMount() {\n        this.getSizes();\n        window.addEventListener('resize', this.getSizes);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.getSizes);\n    }\n\n    getSizes = () => {\n        const rootBounds = this.root.getBoundingClientRect();\n        const sizes = {};\n        Object.keys(this.els).forEach((key) => {\n            const el = this.els[key];\n            const bounds = el.getBoundingClientRect();\n\n            const left = bounds.left - rootBounds.left;\n            const right = rootBounds.right - bounds.right;\n\n            sizes[key] = { left, right };\n        });\n        this.setState({ sizes });\n    };\n\n    getUnderlineStyle = () => {\n        if (this.props.active == null || Object.keys(this.state.sizes).length === 0) {\n            return { left: '0', right: '100%' };\n        }\n        const size = this.state.sizes[this.props.active];\n        return {\n            left      : `${size.left}px`,\n            right     : `${size.right}px`,\n            transition: 'left 0.2s, right 0.25s',\n        };\n    };\n\n    render() {\n        return (\n            <div\n                className='tab-wrapper'\n                ref={el => this.root = el}\n            >\n                <TabsItem\n                    active={this.props.active}\n                    onChange={this.props.onChange}\n                    elements={this.els}\n                >\n                    {this.props.children}\n                </TabsItem>\n                <div\n                    className='tab-underline'\n                    style={this.getUnderlineStyle()}\n                />\n            </div>\n        );\n    }\n}\n\nTabsWrapper.propTypes = {\n    active      : PropTypes.string,\n    children    : PropTypes.node,\n    onChange    : PropTypes.func,\n    toggleDialog: PropTypes.func,\n};\n\nexport { TabsWrapper };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst CloseButton = ({ onClick }) => (\n    <button\n        className='toast__body__close-button'\n        type='button'\n        onClick={onClick}\n    />\n);\n\nCloseButton.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default CloseButton;\n","export const DEFAULT_DELAY = 5000;\n\nexport const POSITIONS = {\n    TOP_LEFT     : 'toast--top-left',\n    TOP_RIGHT    : 'toast--top-right',\n    TOP_CENTER   : 'toast--top-center',\n    BOTTOM_LEFT  : 'toast--bottom-left',\n    BOTTOM_RIGHT : 'toast--bottom-right',\n    BOTTOM_CENTER: 'toast--bottom-center',\n};\n\nexport const TYPES = {\n    ERROR  : 'toast__body--error',\n    INFO   : 'toast__body--info',\n    SUCCESS: 'toast__body--success',\n    WARNING: 'toast__body--warning',\n};\n","export default from './toast.jsx';\nexport * from './constants.js';\n","import PropTypes   from 'prop-types';\nimport React       from 'react';\nimport classNames  from 'classnames';\nimport CloseButton from './close_button.jsx';\nimport {\n    DEFAULT_DELAY,\n    POSITIONS,\n    TYPES }        from './constants';\n\nconst Toast = ({\n    data,\n    removeToastMessage,\n}) => {\n    const destroy = (is_closed_by_user) => {\n        removeToastMessage(data);\n\n        if (typeof data.closeOnClick === 'function') {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close || data.is_auto_close === undefined) {\n        setTimeout(destroy, data.delay || DEFAULT_DELAY);\n    }\n\n    return (\n        <div\n            className={classNames('toast__body', POSITIONS.TOP_RIGHT, data.position, TYPES[data.type.toUpperCase()])}\n            onClick={onClick}\n        >\n            <div className='toast__body__icon'>\n                <span className={`toast__body__icon--${data.type.toLowerCase()}`} />\n            </div>\n            <div className='toast__body__message'>\n                {data.message}\n            </div>\n            <CloseButton onClick={onClick} />\n        </div>\n    );\n};\n\nToast.propTypes = {\n    data: PropTypes.shape({\n        closeOnClick : PropTypes.func,\n        delay        : PropTypes.number,\n        is_auto_close: PropTypes.bool,\n        message      : PropTypes.node,\n        position     : PropTypes.string,\n        type         : PropTypes.string,\n    }),\n    removeToastMessage: PropTypes.func,\n};\n\nexport default Toast;\n\n","import PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport { fillTemplate } from 'Utils/Language/fill_template';\n\nconst Localize = ({ str, replacers }) => {\n    const localized = localize(str /* localize-ignore */); // should be localized on the caller side\n\n    if (!/\\[_\\d+\\]/.test(localized)) {\n        return <React.Fragment>{localized}</React.Fragment>;\n    }\n\n    return (\n        <React.Fragment>\n            {fillTemplate(localized, replacers)}\n        </React.Fragment>\n    );\n};\n\nLocalize.propTypes = {\n    replacers: PropTypes.object,\n    str      : PropTypes.string,\n};\n\nexport default Localize;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport Localize     from './localize.jsx';\n\nconst LoginPrompt = ({\n    IconComponent,\n    onLogin,\n    onSignup,\n}) => (\n    <div className='login-prompt'>\n        <div className='login-prompt__icon'>\n            { IconComponent && // TODO: needs a general icon in case not specified in route\n                <IconComponent className='disabled' />\n            }\n        </div>\n        <div className='login-prompt__message'>\n            <Localize\n                str='Please [_1]log in[_2] or [_3]sign up[_2] to view this page.'\n                replacers={{\n                    '1_2': <a href='javascript:;' onClick={onLogin} />,\n                    '3_2': <a href='javascript:;' onClick={onSignup} />,\n                }}\n            />\n        </div>\n    </div>\n);\n\nLoginPrompt.propTypes = {\n    IconComponent: PropTypes.func,\n    onLogin      : PropTypes.func,\n    onSignup     : PropTypes.func,\n};\n\nexport default LoginPrompt;\n\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { formatMoney } from '_common/base/currency_base';\n\nconst Money = ({\n    amount,\n    currency = 'USD',\n    has_sign,\n    is_formatted = true,\n}) => {\n    let sign = '';\n    if (+amount && (amount < 0 || has_sign)) {\n        sign = amount > 0 ? '+' : '-';\n    }\n\n    const abs_value = Math.abs(amount);\n    const final_amount = is_formatted ? formatMoney(currency, abs_value, true) : abs_value;\n\n    return (\n        <React.Fragment>\n            {sign}\n            <span className={`symbols ${currency.toLowerCase()}`} />\n            {final_amount}\n        </React.Fragment>\n    );\n};\n\nMoney.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    currency    : PropTypes.string,\n    has_sign    : PropTypes.bool,\n    is_formatted: PropTypes.bool,\n};\n\nexport default Money;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst ToggleButton = ({ style, toggled }) => {\n    const toggle_style = style || 'toggle-button';\n    const icon_class = classNames(toggle_style, {\n        'toggled': toggled,\n    });\n\n    return (\n        <div className={icon_class} />\n    );\n};\n\nToggleButton.propTypes = {\n    style  : PropTypes.string,\n    toggled: PropTypes.bool,\n};\n\nexport default ToggleButton;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst Tooltip = ({\n    message,\n    alignment,\n    children,\n    icon, // only question or info accepted\n}) => {\n    const icon_name = (icon === 'question' || icon === 'info') ? icon : 'question';\n    const icon_class = classNames(icon_name);\n    return (\n        <span className='tooltip' data-tooltip={message} data-tooltip-pos={alignment}>\n            {icon ?\n                <i className={icon_class} />\n                :\n                children\n            }\n        </span>\n    );\n};\n\nTooltip.propTypes = {\n    alignment: PropTypes.string,\n    children : PropTypes.node,\n    icon     : PropTypes.string,\n    message  : PropTypes.string,\n};\n\nexport default Tooltip;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst UILoader = ({ className }) => {\n    const loading_class = classNames('loading', className);\n    return (\n        <div className='block-ui'>\n            <div className={loading_class}>\n                <div className='spinner'>\n                    <svg className='circular' viewBox='25 25 50 50'>\n                        <circle className='path' cx='50' cy='50' r='20' fill='none' strokeWidth='4' strokeMiterlimit='10' />\n                    </svg>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nUILoader.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default UILoader;\n","import classNames      from 'classnames';\nimport moment          from 'moment';\nimport React           from 'react';\nimport { IconArrow }   from 'Assets/Common';\nimport {\n    formatDate,\n    daysFromTodayTo }  from 'Utils/Date';\nimport DatePickerInput from './date_picker_input.jsx';\nimport Calendar        from '../../Elements/Calendar';\n\nclass DatePicker extends React.PureComponent {\n    state = {\n        value                : '',\n        is_datepicker_visible: false,\n        is_close_btn_visible : false,\n    };\n\n    componentDidMount() {\n        document.addEventListener('click', this.onClickOutside, true);\n        const { value, mode } = this.props;\n        this.updateDatePickerValue(value, mode);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('click', this.onClickOutside, true);\n    }\n\n    handleVisibility = () => {\n        this.setState({ is_datepicker_visible: !this.state.is_datepicker_visible });\n    }\n\n    onClickOutside = (e) => {\n        if (!this.mainNode.contains(e.target) && this.state.is_datepicker_visible) {\n            this.setState({ is_datepicker_visible: false });\n            if (!!this.state.value && this.props.mode !== 'duration') {\n                this.updateDatePickerValue(formatDate(this.state.value));\n            }\n        }\n    }\n\n    onMouseEnter = () => {\n        if (this.state.value && (!('is_clearable' in this.props) || this.props.is_clearable)) {\n            this.setState({ is_close_btn_visible: true });\n        }\n    }\n\n    onMouseLeave = () => {\n        this.setState({ is_close_btn_visible: false });\n    }\n\n    onSelectCalendar = (selected_date, is_datepicker_visible) => {\n        let value = selected_date;\n        if (!moment.utc(value).isValid) { value = ''; }\n\n        if (this.props.mode === 'duration') {\n            this.updateDatePickerValue(daysFromTodayTo(value), 'duration');\n        } else {\n            this.updateDatePickerValue(value);\n        }\n        this.setState({ is_datepicker_visible });\n    }\n\n    onChangeInput = (e) => {\n        const value = e.target.value;\n        this.updateDatePickerValue(value, this.props.mode);\n    }\n\n    clearDatePickerInput = () => {\n        this.setState({ value: '' }, this.updateStore);\n        this.calendar.resetCalendar();\n    };\n\n    // TODO: handle cases where user inputs date before min_date and date after max_date\n    updateDatePickerValue = (value, mode) => {\n        this.setState({ value }, this.updateStore);\n\n        // update Calendar\n        const { date_format, start_date } = this.props;\n        const new_date = (mode === 'duration') ? moment.utc().add(value, 'days').format(date_format) : value;\n        if (this.calendar && (moment.utc(new_date, date_format).isValid() || !new_date)) {\n            if (!new_date) {\n                const current_date = moment.utc(start_date).format(date_format);\n                this.calendar.setState({\n                    calendar_date: current_date,\n                    selected_date: current_date,\n                });\n            } else {\n                this.calendar.setState({\n                    calendar_date: formatDate(new_date),\n                    selected_date: formatDate(new_date),\n                });\n            }\n        }\n    }\n\n    // update MobX store\n    updateStore = () => {\n        const { name, onChange } = this.props;\n        if (onChange) {\n            onChange({ target: { name, value: this.state.value } });\n        }\n    };\n\n    render() {\n        if (this.props.is_nativepicker) {\n            return (\n                <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                    <input\n                        id={this.props.name}\n                        name={this.props.name}\n                        className='datepicker-display'\n                        type='date'\n                        value={this.state.value}\n                        min={this.props.min_date}\n                        max={this.props.max_date}\n                        onChange={(e) => {\n                            // fix for ios issue: clear button doesn't work\n                            // https://github.com/facebook/react/issues/8938\n                            const target = e.nativeEvent.target;\n                            function iosClearDefault() { target.defaultValue = ''; }\n                            window.setTimeout(iosClearDefault, 0);\n\n                            this.onSelectCalendar(e.target.value);\n                        }}\n                    />\n                    <label className='datepicker-native-overlay' htmlFor={this.props.name}>\n                        {this.state.value || this.props.placeholder}\n                        <IconArrow className='datepicker-native-overlay__arrowhead' />\n                    </label>\n                </div>\n            );\n        }\n\n        return (\n            <div ref={node => { this.mainNode = node; }} className='datepicker-container'>\n                <div\n                    className='datepicker-display-wrapper'\n                    onMouseEnter={this.onMouseEnter}\n                    onMouseLeave={this.onMouseLeave}\n                >\n                    <DatePickerInput\n                        class_name='datepicker-display'\n                        mode={this.props.mode}\n                        name={this.props.name}\n                        placeholder={this.props.placeholder}\n                        onClick={this.handleVisibility}\n                        is_read_only={true}\n                        value={this.state.value}\n                    />\n                    <span\n                        className={classNames('picker-calendar-icon', {\n                            show: !this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.handleVisibility}\n                    />\n                    <span\n                        className={classNames('close-circle-icon', {\n                            show: this.state.is_close_btn_visible,\n                        })}\n                        onClick={this.clearDatePickerInput}\n                    />\n                </div>\n                <div\n                    className={classNames('datepicker-calendar', {\n                        show: this.state.is_datepicker_visible,\n                    })}\n                >\n                    <Calendar\n                        ref={node => { this.calendar = node; }}\n                        onSelect={this.onSelectCalendar}\n                        {...this.props}\n                    >\n                        <DatePickerInput\n                            class_name='calendar-input'\n                            mode={this.props.mode}\n                            name={this.props.name}\n                            onChange={this.onChangeInput}\n                            placeholder={this.props.placeholder}\n                            is_read_only={'is_read_only' in this.props ? this.props.is_read_only : false}\n                            value={this.state.value}\n                        />\n                    </Calendar>\n                </div>\n            </div>\n        );\n    }\n}\n\nDatePicker.defaultProps = {\n    date_format: Calendar.defaultProps.date_format,\n    mode       : 'date',\n};\n\nDatePicker.propTypes = {\n    ...DatePickerInput.propTypes,\n    ...Calendar.propTypes,\n};\n\nexport default DatePicker;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nexport default function DatePickerInput(props) {\n    return (\n        <input\n            id={props.id}\n            name={props.name}\n            className={props.class_name}\n            readOnly={props.is_read_only}\n            placeholder={props.placeholder\n                || (props.mode === 'duration' ? localize('Select a duration') : localize('Select date'))}\n            onChange={props.onChange}\n            onClick={props.onClick}\n            value={props.value}\n        />\n    );\n}\n\nDatePickerInput.propTypes = {\n    class_name  : PropTypes.string,\n    id          : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    is_read_only: PropTypes.bool,\n    mode        : PropTypes.string,\n    name        : PropTypes.string,\n    onChange    : PropTypes.func,\n    onClick     : PropTypes.func,\n    placeholder : PropTypes.string,\n    value       : PropTypes.oneOfType([\n        PropTypes.number, // duration\n        PropTypes.string, // date\n    ]),\n};\n","export default from './date_picker.jsx';\n","import { isArrayLike }   from 'mobx';\nimport { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport SimpleBar         from 'simplebar-react';\nimport { IconArrow }     from 'Assets/Common';\nimport {\n    getDisplayText,\n    getItemFromValue,\n    getValueFromIndex,\n    getPrevIndex,\n    getNextIndex,\n}  from './helpers';\n\nclass Dropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleVisibility   = this.handleVisibility.bind(this);\n        this.handleSelect       = this.handleSelect.bind(this);\n        this.setWrapperRef      = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n        this.state = {\n            is_list_visible: false,\n            curr_index     : getItemFromValue(this.props.list, this.props.value).number,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect(item) {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    }\n\n    onKeyPressed = (event) => {\n        if (event.keyCode === 9) { // Tab is pressed\n            if (this.state.is_list_visible) {\n                this.handleVisibility();\n            }\n            return;\n        }\n        event.preventDefault();\n        const index = getItemFromValue(this.props.list, this.props.value);\n        const value = getValueFromIndex(this.props.list, this.state.curr_index);\n        const handleToggle = () => {\n            if (this.state.is_list_visible && this.props.value !== value) {\n                this.props.onChange({ target: { name: this.props.name, value } });\n            }\n            this.handleVisibility();\n        };\n        switch (event.keyCode) {\n            case 13: // Enter is pressed\n            case 32: // Space is pressed\n                handleToggle();\n                break;\n            case 38: // Up Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const prev_index = getPrevIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: prev_index });\n                }\n                break;\n            case 40: // Down Arrow is pressed\n                if (this.state.is_list_visible) {\n                    const next_index = getNextIndex(this.state.curr_index, index.length);\n                    this.setState({ curr_index: next_index });\n                }\n                break;\n            default:\n        }\n\n        // For char presses, we do a search for the item:\n        if (event.key.length === 1) {\n            const char = event.key.toLowerCase();\n            const firstChars = this.props.list.map(x => x.text[0].toLowerCase());\n            let idx;\n            // Tapping the same character again jumps to the next match:\n            if (this.state.curr_index) {\n                idx = firstChars.indexOf(char, this.state.curr_index + 1);\n            }\n            if (idx === undefined || idx === -1) {\n                idx = firstChars.indexOf(char);\n            }\n            if (idx >= 0) {\n                this.setState({ curr_index: idx });\n            }\n        }\n    }\n\n    setWrapperRef(node) {\n        this.wrapper_ref = node;\n    }\n\n    scrollToggle(state) {\n        this.is_open = state;\n        // Used to disable y-scroll on body - disabled in this component for now\n        // document.body.classList.toggle('no-scroll', this.is_open);\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_list_visible) {\n            this.setState({ is_list_visible: false });\n            this.scrollToggle(this.state.is_list_visible);\n        }\n    }\n\n    handleVisibility() {\n        this.setState({ is_list_visible: !this.state.is_list_visible });\n        this.scrollToggle(!this.state.is_list_visible);\n    }\n\n    render() {\n        // TODO: Fix list not being populated in native picker dropdown before re-enabling\n        // if (this.props.is_nativepicker) {\n        //     return (\n        //         <NativeSelect\n        //             name={this.props.name}\n        //             value={this.props.value}\n        //             list={this.props.list}\n        //             onChange={this.props.onChange}\n        //         />\n        //     );\n        // }\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={`dropdown-container ${this.props.className ? this.props.className : ''} ${this.state.is_list_visible ? 'show' : ''}`}\n            >\n                <div\n                    className={`dropdown-display ${this.state.is_list_visible ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                    tabIndex='0'\n                    onKeyDown={this.onKeyPressed}\n                >\n                    <span name={this.props.name} value={this.props.value}>\n                        {getDisplayText(this.props.list, this.props.value)}\n                    </span>\n                </div>\n                <IconArrow className='select-arrow' />\n                <CSSTransition\n                    in={this.state.is_list_visible}\n                    timeout={100}\n                    classNames='dropdown-list'\n                    unmountOnExit\n                >\n                    <div className='dropdown-list'>\n                        <div className='list-container'>\n                            <SimpleBar style={{ 'height': '100%' }}>\n                                {isArrayLike(this.props.list) ?\n                                    <Items\n                                        highlightedIdx={this.state.curr_index}\n                                        items={this.props.list}\n                                        name={this.props.name}\n                                        value={this.props.value}\n                                        handleSelect={this.handleSelect}\n                                    /> :\n                                    Object.keys(this.props.list).map(key => (\n                                        <React.Fragment key={key}>\n                                            <div className='list-label'><span>{key}</span></div>\n                                            <Items\n                                                highlightedIdx={this.state.curr_index}\n                                                items={this.props.list[key]}\n                                                name={this.props.name}\n                                                value={this.props.value}\n                                                handleSelect={this.handleSelect}\n                                            />\n                                        </React.Fragment>\n                                    ))\n                                }\n                            </SimpleBar>\n                        </div>\n                    </div>\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n\nconst Items = ({\n    items,\n    name,\n    value,\n    handleSelect,\n    highlightedIdx,\n}) => (\n    items.map((item, idx) => (\n        <React.Fragment key={idx}>\n            <div\n                className={`list-item ${ value === item.value ? 'selected' : ''} ${highlightedIdx === idx ? 'highlighted' : ''}`}\n                key={idx}\n                name={name}\n                value={item.value}\n                onClick={handleSelect.bind(null, item)}\n            >\n                <span>{item.text}</span>\n            </div>\n        </React.Fragment>\n    ))\n);\n\nconst NativeSelect = ({\n    name,\n    value,\n    list,\n    onChange,\n}) => (\n    <div className='select-wrapper'>\n        <select name={name} value={value} onChange={onChange}>\n            {Array.isArray(list) ?\n                list.map((item, idx) => (\n                    <option key={idx} value={item.value}>{item.text}</option>\n                ))\n                :\n                Object.keys(list).map(key => (\n                    <React.Fragment key={key}>\n                        <optgroup label={key}>\n                            {list[key].map((item, idx) => (\n                                <option key={idx} value={item.value}>{item.text}</option>\n                            ))}\n                        </optgroup>\n                    </React.Fragment>\n                ))}\n        </select>\n    </div>\n);\n\n// ToDo: Refactor Drop-down.\n// It's now too risky to refactor Dropdown for 'list' and 'value' prop types.\nDropdown.propTypes = {\n    className      : PropTypes.string,\n    is_nativepicker: PropTypes.bool,\n    list           : PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    type    : PropTypes.string,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\n// ToDo: Refactor NativeSelect\nNativeSelect.propTypes = {\n    list: PropTypes.oneOfType([\n        PropTypes.object,\n        PropTypes.array,\n    ]),\n    name    : PropTypes.string,\n    onChange: PropTypes.func,\n    value   : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(Dropdown);\n","import { isArrayLike } from 'mobx';\n\nexport const getDisplayText = (list, value) => {\n    const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n    let text = '';\n    if (isArrayLike(list)) {\n        text = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            text = findInArray(list[key]);\n            return text;\n        });\n    }\n    return text;\n};\n\nexport const getItemFromValue = (list, value) => {\n    const findInArray = (arr_list) => arr_list.findIndex(item => item.value === value);\n    let item = {};\n    if (isArrayLike(list)) {\n        item = { number: findInArray(list), length: list.length };\n    } else {\n        Object.keys(list).some(key => {\n            item = { number: findInArray(list[key]), length: list[key].length };\n            return item;\n        });\n    }\n    return item;\n};\n\nexport const getValueFromIndex = (list, index) => {\n    const findInArray = (arr_list) => arr_list[index];\n    let result;\n    if (isArrayLike(list)) {\n        result = findInArray(list);\n    } else {\n        Object.keys(list).some(key => {\n            result = findInArray(list[key]);\n            return result.value;\n        });\n    }\n    return result.value;\n};\n\nexport const getPrevIndex = (index, length) => {\n    const prev_index = (index - 1) < 0 ? (length - 1) : index - 1;\n    return prev_index;\n};\n\nexport const getNextIndex = (index, length) => {\n    const next_index = (index + 1) === length ? 0 : index + 1;\n    return next_index;\n};\n","export default from './dropdown.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst Button = ({\n    children,\n    className = '',\n    has_effect,\n    id,\n    is_disabled,\n    onClick,\n    text,\n    wrapperClassName,\n}) => {\n    const classes = `btn${has_effect ? ' effect' : ''} ${className}`;\n    const button = (\n        <button id={id} className={classes} onClick={onClick || undefined} disabled={is_disabled}>\n            <span>{text}</span>\n            {children}\n        </button>\n    );\n    const wrapper = (<div className={wrapperClassName}>{button}</div>);\n\n    return wrapperClassName ? wrapper : button;\n};\n\nButton.propTypes = {\n    children        : PropTypes.object,\n    className       : PropTypes.string,\n    has_effect      : PropTypes.bool,\n    id              : PropTypes.string,\n    is_disabled     : PropTypes.bool,\n    onClick         : PropTypes.func,\n    text            : PropTypes.string,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default Button;\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\nimport Tooltip    from '../Elements/tooltip.jsx';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    icon,\n    onMouseEnter,\n    onMouseLeave,\n    tooltip,\n}) => {\n    const field_left_class = classNames('field-info left', { icon }, icon);\n\n    return (\n        <fieldset className={className}  onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header &&\n                <div className='fieldset-header'>\n                    <span className={field_left_class}>{header}</span>\n                </div>\n            }\n            {!!tooltip &&\n                <span className='field-info right'>\n                    <Tooltip\n                        alignment='left'\n                        icon='info'\n                        message={tooltip || 'Message goes here.'}\n                    />\n                </span>\n            }\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.object,\n    ]),\n    className   : PropTypes.string,\n    header      : PropTypes.string,\n    icon        : PropTypes.string,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n    tooltip     : PropTypes.string,\n};\n\nexport default Fieldset;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport Tooltip                   from '../Elements/tooltip.jsx';\n\nconst InputField = ({\n    className,\n    error_messages,\n    fractional_digits,\n    helper,\n    is_disabled,\n    is_float,\n    is_signed = false,\n    label,\n    max_length,\n    name,\n    onChange,\n    placeholder,\n    prefix,\n    required,\n    type,\n    value,\n}) => {\n    const has_error = error_messages && error_messages.length;\n    let has_valid_length = true;\n\n    const changeValue = (e) => {\n        if (type === 'number') {\n            const is_empty = !e.target.value || e.target.value === '';\n            const signed_regex = is_signed ? '(?!^([-+]0)$|^[-+]?$)^[+-]?' : '^';\n\n            const is_number = new RegExp(`${signed_regex}(\\\\d*)?${is_float ? '(\\\\.\\\\d+)?' : ''}$`)\n                .test(e.target.value);\n\n            const is_not_completed_number = is_float && new RegExp(`${signed_regex}(\\\\.|\\\\d+\\\\.)?$`)\n                .test(e.target.value);\n\n            // This regex check whether there is any zero at the end of fractional part or not.\n            const has_zero_at_end = new RegExp(`${signed_regex}(\\\\d+)?\\\\.(\\\\d+)?[0]+$`)\n                .test(e.target.value);\n\n            const is_scientific_notation = /e/.test(`${+e.target.value}`);\n\n            if (max_length && fractional_digits) {\n                has_valid_length = new RegExp(`${signed_regex}(\\\\d{0,${max_length}})(\\\\.\\\\d{0,${fractional_digits}})?$`)\n                    .test(e.target.value);\n            }\n\n            if ((is_number || is_empty) && has_valid_length) {\n                e.target.value = is_empty || is_signed || has_zero_at_end || is_scientific_notation\n                    ? e.target.value\n                    : +e.target.value;\n            } else if (!is_not_completed_number) {\n                e.target.value = value;\n                return;\n            }\n        }\n\n        onChange(e);\n    };\n\n    const input =\n        <input\n            className={classNames({ error: has_error })}\n            disabled={is_disabled}\n            data-for={`error_tooltip_${name}`}\n            data-tip\n            maxLength={fractional_digits ? max_length + fractional_digits + 1 : max_length}\n            name={name}\n            onChange={changeValue}\n            placeholder={placeholder || undefined}\n            required={required || undefined}\n            type={type === 'number' ? 'text' : type}\n            value={value}\n        />;\n\n    return (\n        <div\n            className={`input-field ${className || ''}`}\n        >\n            <Tooltip alignment='left' message={has_error ? error_messages[0] : null }>\n                {!!label &&\n                    <label htmlFor={name} className='input-label'>{label}</label>\n                }\n                {!!prefix &&\n                    <i><span className={`symbols ${prefix.toLowerCase()}`} /></i>\n                }\n                {!!helper &&\n                    <span className='input-helper'>{helper}</span>\n                }\n                { input }\n            </Tooltip>\n        </div>\n    );\n};\n\n// ToDo: Refactor input_field\n// supports more than two different types of 'value' as a prop.\n// Quick Solution - Pass two different props to input field.\nInputField.propTypes = {\n    className        : PropTypes.string,\n    error_messages   : MobxPropTypes.arrayOrObservableArray,\n    fractional_digits: PropTypes.number,\n    helper           : PropTypes.bool,\n    is_disabled      : PropTypes.string,\n    is_float         : PropTypes.bool,\n    is_signed        : PropTypes.bool,\n    label            : PropTypes.string,\n    max_length       : PropTypes.number,\n    name             : PropTypes.string,\n    onChange         : PropTypes.func,\n    placeholder      : PropTypes.string,\n    prefix           : PropTypes.string,\n    required         : PropTypes.bool,\n    type             : PropTypes.string,\n    value            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n};\n\nexport default observer(InputField);\n","import {\n    observer,\n    PropTypes as MobxPropTypes }      from 'mobx-react';\nimport moment                         from 'moment';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { localize }                   from '_common/localize';\nimport { isSessionAvailable }         from 'Stores/Modules/Trading/Helpers/start_date';\n\nclass TimePickerDropdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hours    = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n        this.minutes  = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n        this.state    = {\n            is_hour_selected  : false,\n            is_minute_selected: false,\n            last_updated_type : null,\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { is_hour_selected, is_minute_selected } = this.state;\n        if (is_hour_selected && is_minute_selected) {\n            this.resetValues();\n            this.props.toggle();\n        }\n        if (!prevProps.className && this.props.className === 'active') {\n            this.resetValues();\n        }\n        if (prevState.last_updated_type !== this.state.last_updated_type && this.state.last_updated_type) {\n            this.setState({ last_updated_type: null });\n        }\n    }\n\n    resetValues() {\n        this.setState({\n            is_hour_selected  : false,\n            is_minute_selected: false,\n        });\n    }\n\n    selectOption = (type, value, is_enabled = true) => {\n        if (is_enabled) {\n            const [ prev_hour, prev_minute ] = this.props.value.split(':');\n            if ((type === 'h' && value !== prev_hour) || (type === 'm' && value !== prev_minute)) {\n                const is_type_selected = type === 'h' ? 'is_hour_selected' : 'is_minute_selected';\n                this.setState({\n                    last_updated_type : type,\n                    [is_type_selected]: true,\n                });\n                this.props.onChange(`${type === 'h' ? value : prev_hour}:${type === 'm' ? value : prev_minute}`);\n            }\n        }\n    };\n\n    clear = (event) => {\n        event.stopPropagation();\n        this.resetValues();\n        this.props.onChange('');\n    };\n\n    render() {\n        const { preClass, value, toggle, start_date, sessions } = this.props;\n        const start_moment       = moment(start_date * 1000 || undefined).utc();\n        const start_moment_clone = start_moment.clone().minute(0).second(0);\n        const [ hour, minute ]   = value.split(':');\n        return (\n            <div className={`${preClass}-dropdown ${this.props.className}`}>\n                <div\n                    className={`${preClass}-panel`}\n                    onClick={toggle}\n                >\n                    <span className={value ? '' : 'placeholder'}>{value || localize('Select time')}</span>\n                    {(!('is_clearable' in this.props) || this.props.is_clearable) &&\n                        <span\n                            className={`${preClass}-clear`}\n                            onClick={this.clear}\n                        />\n                    }\n                </div>\n                <div className={`${preClass}-selector`}>\n                    <div\n                        ref={this.saveHourRef}\n                        className={`${preClass}-hours`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Hour')}</strong></div>\n                        <div className='list-container'>\n                            {this.hours.map((h, key) => {\n                                start_moment_clone.hour(h);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment, true);\n                                return (\n                                    <div\n                                        className={`list-item${hour === h ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('h', h, is_enabled); }}\n                                    >\n                                        {h}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                    <div\n                        ref={this.saveMinuteRef}\n                        className={`${preClass}-minutes`}\n                    >\n                        <div className='list-title center-text'><strong>{localize('Minute')}</strong></div>\n                        <div className='list-container'>\n                            {this.minutes.map((mm, key) => {\n                                start_moment_clone.hour(hour).minute(mm);\n                                const is_enabled = isSessionAvailable(sessions, start_moment_clone, start_moment);\n                                return (\n                                    <div\n                                        className={`list-item${minute === mm ? ' selected' : ''}${is_enabled ? '' : ' disabled'}`}\n                                        key={key}\n                                        onClick={() => { this.selectOption('m', mm, is_enabled); }}\n                                    >{mm}\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass TimePicker extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            is_open: false,\n            value  : '',\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    toggleDropDown = () => {\n        this.setState({ is_open: !this.state.is_open });\n    };\n\n    handleChange = (arg) => {\n        // To handle nativepicker;\n        const value = typeof arg === 'object' ? arg.target.value : arg;\n\n        if (value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value } });\n        }\n    };\n\n    saveRef = (node) => {\n        if (!node) return;\n        if (node.nodeName === 'INPUT') {\n            this.target_element = node;\n            return;\n        }\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)) {\n            if (this.state.is_open) {\n                this.setState({ is_open: false });\n            }\n        }\n    };\n\n    render() {\n        const prefix_class = 'time-picker';\n        const {\n            is_nativepicker,\n            value,\n            name,\n            is_align_right,\n            placeholder,\n            start_date,\n            sessions,\n        } = this.props;\n        return (\n            <div\n                ref={this.saveRef}\n                className={`${prefix_class}${this.props.padding ? ' padding' : ''}${this.state.is_open ? ' active' : ''}`}\n            >\n                {\n                    is_nativepicker\n                        ? <input\n                            type='time'\n                            id={`${prefix_class}-input`}\n                            value={value}\n                            onChange={this.handleChange}\n                            name={name}\n                        />\n                        : (\n                            <React.Fragment>\n                                <input\n                                    ref={this.saveRef}\n                                    type='text'\n                                    readOnly\n                                    id={`${prefix_class}-input`}\n                                    className={`${prefix_class}-input ${this.state.is_open ? 'active' : ''}`}\n                                    value={value}\n                                    onClick={this.toggleDropDown}\n                                    name={name}\n                                    placeholder={placeholder}\n                                />\n                                <TimePickerDropdown\n                                    className={`${this.state.is_open ? 'active' : ''}${is_align_right ? ' from-right' : '' }`}\n                                    toggle={this.toggleDropDown}\n                                    onChange={this.handleChange}\n                                    preClass={prefix_class}\n                                    start_date={start_date}\n                                    value={value}\n                                    sessions={sessions}\n                                    is_clearable={this.props.is_clearable}\n                                />\n                            </React.Fragment>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nTimePicker.propTypes = {\n    is_align_right : PropTypes.bool,\n    is_clearable   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    name           : PropTypes.string,\n    onChange       : PropTypes.func,\n    padding        : PropTypes.string,\n    placeholder    : PropTypes.string,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.number,\n    value          : PropTypes.string,\n};\n\nTimePickerDropdown.propTypes = {\n    className   : PropTypes.string,\n    is_clearable: PropTypes.bool,\n    onChange    : PropTypes.func,\n    preClass    : PropTypes.string,\n    sessions    : MobxPropTypes.arrayOrObservableArray,\n    start_date  : PropTypes.number,\n    toggle      : PropTypes.func,\n    value       : PropTypes.string,\n    value_split : PropTypes.bool,\n};\n\nexport default observer(TimePicker);\n","export * from './network_status.jsx';\nexport * from './toggle_fullscreen.jsx';\nexport * from './toggle_portfolio.jsx';\nexport * from './toggle_settings.jsx';\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from '../../Elements/tooltip.jsx';\n\nconst NetworkStatus = ({ status }) => (\n    <div className='network-status-wrapper'>\n        <Tooltip alignment='top' message={localize('Network status: [_1]', [(status.tooltip || localize('Connecting to server'))])}>\n            <div className={classNames('network-status-circle', status.class)} />\n        </Tooltip>\n    </div>\n);\n\nNetworkStatus.propTypes = {\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n","import classNames       from 'classnames';\nimport React            from 'react';\nimport { IconMaximize } from 'Assets/Footer';\n\nclass ToggleFullScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_full_screen: false,\n        };\n        this.fullscreen_map = {\n            event    : ['fullscreenchange',  'webkitfullscreenchange',  'mozfullscreenchange',  'MSFullscreenChange'],\n            element  : ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n            fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n            fnc_exit : ['exitFullscreen',    'webkitExitFullscreen',    'mozCancelFullScreen',  'msExitFullscreen'],\n        };\n\n    }\n\n    componentDidMount() {\n        this.fullscreen_map.event.forEach((event) => {\n            document.addEventListener(event, this.onFullScreen, false);\n        });\n    }\n\n    onFullScreen = () => {\n        const is_full_screen = this.fullscreen_map.element.some(el => document[el]);\n        this.setState({ is_full_screen });\n    };\n\n    toggleFullScreen = (e) => {\n        e.stopPropagation();\n\n        const to_exit   = this.state.is_full_screen;\n        const el        = to_exit ? document : document.documentElement;\n        const fncToCall = this.fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            this.setState({ is_full_screen: false }); // fullscreen API is not enabled\n        }\n    }\n\n    render() {\n        const full_screen_icon_class = classNames('ic-fullscreen', {\n            'active': this.state.is_full_screen,\n        });\n        return (\n            <a\n                href='javascript:;'\n                className={full_screen_icon_class}\n                onClick={this.toggleFullScreen}\n            >\n                <IconMaximize className='footer-icon' />\n            </a>\n        );\n    }\n}\n\nexport { ToggleFullScreen };\n","import classNames             from 'classnames';\nimport PropTypes              from 'prop-types';\nimport React                  from 'react';\nimport { IconQuickPortfolio } from 'Assets/Footer';\n\nconst TogglePortfolio = ({\n    is_portfolio_drawer_on,\n    togglePortfolioDrawer,\n}) => {\n    const toggle_portfolio_class = classNames('ic-portfolio', {\n        'active': is_portfolio_drawer_on,\n    });\n    return (\n        <a\n            href='javascript:;'\n            className={toggle_portfolio_class}\n            onClick={togglePortfolioDrawer}\n        >\n            <IconQuickPortfolio className='footer-icon' />\n        </a>\n    );\n};\n\nTogglePortfolio.propTypes = {\n    is_portfolio_drawer_on: PropTypes.bool,\n    togglePortfolioDrawer : PropTypes.func,\n};\n\nexport { TogglePortfolio };\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { IconSettings }  from 'Assets/Footer';\nimport SettingsDialog    from '../../Elements/SettingsDialog/settings_dialog.jsx';\n\nconst ToggleSettings = ({\n    is_language_visible,\n    is_settings_visible,\n    toggleSettings,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', {\n        'active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                href='javascript:;'\n                onClick={toggleSettings}\n                className={toggle_settings_class}\n            >\n                <IconSettings className='footer-icon' />\n            </a>\n            <CSSTransition\n                in={is_settings_visible}\n                timeout={100}\n                classNames='settings-dialog'\n                unmountOnExit\n            >\n                <SettingsDialog\n                    is_open={is_settings_visible}\n                    is_language_dialog_visible={is_language_visible}\n                    toggleDialog={toggleSettings}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    is_language_visible: PropTypes.bool,\n    is_settings_visible: PropTypes.bool,\n    toggleSettings     : PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { CSSTransition }   from 'react-transition-group';\nimport Localize            from 'App/Components/Elements/localize.jsx';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport { IconArrow }       from 'Assets/Common';\n\n// todo fix absolute path\n\nconst AccountInfo = ({\n    balance,\n    currency,\n    loginid,\n    is_dialog_on,\n    is_upgrade_enabled,\n    onClickUpgrade,\n    toggleDialog,\n    account_type,\n}) => (\n    <div className='acc-balance'>\n        <div className='acc-switcher-container'>\n            <div className={classNames('acc-info', { 'show': is_dialog_on })} onClick={toggleDialog}>\n                <p className='acc-balance-type'>\n                    <Localize str={`${account_type} Account`} />\n                </p>\n                <p className='acc-balance-id'>{loginid}</p>\n                <IconArrow className='select-arrow' />\n            </div>\n            <CSSTransition\n                in={is_dialog_on}\n                timeout={400}\n                classNames='acc-switcher-wrapper'\n                unmountOnExit\n            >\n                <div className='acc-switcher-wrapper'>\n                    <AccountSwitcher\n                        is_visible={is_dialog_on}\n                        toggle={toggleDialog}\n                        is_upgrade_enabled={is_upgrade_enabled}\n                        onClickUpgrade={onClickUpgrade}\n                    />\n                </div>\n            </CSSTransition>\n        </div>\n        {typeof balance !== 'undefined' &&\n        <p className='acc-balance-amount'>\n            <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n            {balance}\n        </p>\n        }\n    </div>\n);\n\nAccountInfo.propTypes = {\n    account_type      : PropTypes.string,\n    balance           : PropTypes.string,\n    currency          : PropTypes.string,\n    is_dialog_on      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    loginid           : PropTypes.string,\n    onClickUpgrade    : PropTypes.func,\n    toggleDialog      : PropTypes.func,\n};\n\nexport { AccountInfo };\n","export * from './account_info.jsx';\nexport * from './install_pwa_button.jsx';\nexport * from './login_button.jsx';\nexport * from './menu_links.jsx';\nexport * from './toggle_menu_drawer.jsx';\nexport * from './toggle_notifications_drawer.jsx';\n","import React        from 'react';\nimport PropTypes    from 'prop-types';\nimport { localize } from '_common/localize';\nimport Button       from '../../Form/button.jsx';\n\nconst InstallPWAButton = ({\n    prompt_event,\n    onClick,\n}) => {\n\n    const showPrompt = () => {\n        if (prompt_event) {\n            prompt_event.prompt();\n            prompt_event.userChoice\n                .then(choice_result => {\n                    if (choice_result.outcome === 'accepted') {\n                        onClick();\n                    }\n                });\n        }\n    };\n\n    return (\n        <Button\n            className='primary orange'\n            has_effect\n            text={localize('Install')}\n            onClick={showPrompt}\n        />\n    );\n};\n\nInstallPWAButton.propTypes = {\n    onClick     : PropTypes.func,\n    prompt_event: PropTypes.object,\n};\n\nexport { InstallPWAButton };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from '../../Form/button.jsx';\n\nconst LoginButton = () => (\n    <Button\n        className='secondary orange'\n        has_effect\n        text={localize('Log in')}\n        onClick={redirectToLogin}\n    />\n);\n\nexport { LoginButton };\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport Symbol         from 'Images/app_2/header/symbol.svg';\nimport InkBarDiv      from '../../Elements/InkBar';\nimport { BinaryLink } from '../../Routes';\n\nconst MenuLinks = ({ items }) => (\n    <React.Fragment>\n        <div className='navbar-icons binary-logo'>\n            <Symbol width='30px' height='30px' />\n        </div>\n        {!!items.length &&\n        <InkBarDiv className='menu-links'>\n            {items.map((item, idx) => (\n                <BinaryLink key={idx} to={item.link_to}>\n                    <span title={item.text}>{item.icon}{item.text}</span>\n                </BinaryLink>\n            ))}\n        </InkBarDiv>\n        }\n    </React.Fragment>\n);\n\nMenuLinks.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        icon: PropTypes.shape({\n            className: PropTypes.string,\n        }),\n        link_to: PropTypes.string,\n        text   : PropTypes.string,\n    })),\n};\n\nexport { MenuLinks };\n","import React             from 'react';\nimport { IconHamburger } from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport MenuDrawer        from '../../../Containers/Drawer/menu_drawer.jsx';\n\nconst ToggleMenuDrawer = () => (\n    <ToggleDrawer\n        alignment='left'\n        icon={<IconHamburger />}\n        icon_class='menu-toggle'\n    >\n        <MenuDrawer />\n    </ToggleDrawer>\n);\n\nexport { ToggleMenuDrawer };\n","import React             from 'react';\nimport { IconBell }      from 'Assets/Header/NavBar';\nimport { ToggleDrawer }  from '../../Elements/Drawer';\nimport { Notifications } from '../../Elements/Notifications';\n\nconst ToggleNotificationsDrawer = () => (\n    <ToggleDrawer\n        alignment='right'\n        icon={<IconBell />}\n        icon_class='notify-toggle'\n    >\n        <Notifications />\n    </ToggleDrawer>\n);\n\nexport { ToggleNotificationsDrawer };\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { NavLink }     from 'react-router-dom';\nimport {\n    findRouteByPath,\n    normalizePath }    from './helpers';\nimport getRoutesConfig from '../../Constants/routes_config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ to, children, ...props }) => {\n    const path  = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return (\n        to ?\n            <NavLink to={path} activeClassName='active' exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n            :\n            <a href='javascript:;' {...props}>\n                {children}\n            </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    children: PropTypes.object,\n    to      : PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React              from 'react';\nimport { Switch }         from 'react-router-dom';\nimport getRoutesConfig    from 'App/Constants/routes_config';\nimport UILoader           from 'App/Components/Elements/ui_loader.jsx';\nimport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n\nconst BinaryRoutes = (props) => (\n    <React.Suspense fallback={<UILoader />}>\n        <Switch>\n            {\n                getRoutesConfig().map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))\n            }\n        </Switch>\n    </React.Suspense>\n\n);\n\nexport default BinaryRoutes;\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { Link }       from 'react-router-dom';\n\nconst ButtonLink = ({ children, className, to }) => (\n    <Link\n        className={classNames('btn is-link', className, 'effect')}\n        to={to}\n    >\n        {children}\n    </Link>\n);\n\nButtonLink.propTypes = {\n    children : PropTypes.object,\n    className: PropTypes.string,\n    to       : PropTypes.string,\n};\n\nexport default ButtonLink;\n","import { matchPath } from 'react-router';\nimport routes        from 'Constants/routes';\n\nexport const normalizePath = (path) => /^\\//.test(path) ? path : `/${path || ''}`; // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some((route_info) => {\n        if (matchPath(path, route_info)) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) =>\n    !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) => (\n    Object.keys(params).reduce(\n        (p, name) => p.replace(`:${name}`, params[name]),\n        route_path,\n    )\n);\n\nexport const getContractPath = (contract_id) => getPath(routes.contract, { contract_id });\n","export BinaryLink         from './binary_link.jsx';\nexport ButtonLink         from './button_link.jsx';\nexport default            from './binary_routes.jsx';\nexport *                  from './helpers';\nexport RouteWithSubRoutes from './route_with_sub_routes.jsx';\n","import React               from 'react';\nimport {\n    Redirect,\n    Route }                from 'react-router-dom';\nimport { redirectToLogin } from '_common/base/login';\nimport routes              from 'Constants/routes';\nimport GTM                 from 'Utils/gtm';\nimport LoginPrompt         from '../Elements/login_prompt.jsx';\nimport { default_title }   from '../../Constants/app_config';\n\nconst RouteWithSubRoutes = route => {\n    const renderFactory = props => {\n        let result = null;\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else {\n            result = (\n                (route.is_authenticated && !route.is_logged_in) ?\n                    <LoginPrompt IconComponent={route.icon_component} onLogin={redirectToLogin} />\n                    :\n                    <route.component {...props} routes={route.routes} />\n            );\n        }\n\n        const title = route.title ? `${route.title} | ` : '';\n        document.title = `${ title }${ default_title }`;\n        GTM.pushDataLayer({ event: 'page_load' });\n        return result;\n    };\n\n    return <Route\n        exact={route.exact}\n        path={route.path}\n        render={renderFactory}\n    />;\n};\n\nexport default RouteWithSubRoutes;\n","export const website_name  = 'Binary.com';\nexport const default_title = website_name;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport {\n    IconPortfolio,\n    IconStatement,\n    IconTrade }     from 'Assets/Header/NavBar/index';\nimport { routes }   from 'Constants/index';\n\nconst header_links = [\n    {\n        icon   : <IconTrade className='ic-header__trade' />,\n        text   : localize('Trade'),\n        link_to: routes.trade,\n    },\n    {\n        icon   : <IconPortfolio className='ic-header__portfolio' />,\n        text   : localize('Portfolio'),\n        link_to: routes.portfolio,\n    },\n    {\n        icon   : <IconStatement className='ic-header__statement' />,\n        text   : localize('Statement'),\n        link_to: routes.statement,\n    },\n    // { icon: <IconCashier />,   text: localize('Cashier') },\n];\n\nexport default header_links;\n","import { lazy }        from 'react';\nimport { Redirect }    from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport { routes }      from 'Constants';\n\nimport {\n    IconPortfolio,\n    IconStatement }    from 'Assets/Header/NavBar';\n// import Statement       from 'Modules/Statement';\nimport Trade           from 'Modules/Trading';\n\nconst ContractDetails = lazy(() => import(/* webpackChunkName: \"contract\" */  'Modules/Contract'));\nconst Portfolio       = lazy(() => import(/* webpackChunkName: \"portfolio\" */ 'Modules/Portfolio'));\nconst Settings        = lazy(() => import(/* webpackChunkName: \"settings\" */  'Modules/settings/settings.jsx'));\nconst Statement       = lazy(() => import(/* webpackChunkName: \"statement\" */ 'Modules/Statement'));\n\n// Settings Routes\nconst AccountPassword        = lazy(() => import(/* webpackChunkName: \"account_password\" */       'Modules/settings/sections/account_password.jsx'));\nconst ApiToken               = lazy(() => import(/* webpackChunkName: \"api_toke\" */               'Modules/settings/sections/api_token.jsx'));\nconst AuthorizedApplications = lazy(() => import(/* webpackChunkName: \"authorized_application\" */ 'Modules/settings/sections/authorized_applications.jsx'));\nconst CashierPassword        = lazy(() => import(/* webpackChunkName: \"cashier_password\" */       'Modules/settings/sections/cashier_password.jsx'));\nconst FinancialAssessment    = lazy(() => import(/* webpackChunkName: \"financial_assessment\" */   'Modules/settings/sections/financial_assessment.jsx'));\nconst Limits                 = lazy(() => import(/* webpackChunkName: \"limits\" */                 'Modules/settings/sections/limits.jsx'));\nconst LoginHistory           = lazy(() => import(/* webpackChunkName: \"login_history\" */          'Modules/settings/sections/login_history.jsx'));\nconst PersonalDetails        = lazy(() => import(/* webpackChunkName: \"personal_details\" */       'Modules/settings/sections/personal_details.jsx'));\nconst SelfExclusion          = lazy(() => import(/* webpackChunkName: \"self_exclusion\" */         'Modules/settings/sections/self_exclusion.jsx'));\n\n// Error Routes\nconst Page404 = lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst initRoutesConfig = () => ([\n    { path: routes.contract,  component: ContractDetails, title: localize('Contract Details'),  is_authenticated: true },\n    { path: routes.index,     component: Redirect,        title: '',                            to: '/trade' },\n    { path: routes.portfolio, component: Portfolio,       title: localize('Portfolio'),         is_authenticated: true, icon_component: IconPortfolio },\n    { path: routes.root,      component: Redirect,        title: '',                            exact: true, to: '/trade' },\n    { path: routes.statement, component: Statement,       title: localize('Statement'),         is_authenticated: true, icon_component: IconStatement },\n    { path: routes.trade,     component: Trade,           title: localize('Trade'),             exact: true },\n    {\n        path            : routes.settings,\n        component       : Settings,\n        is_authenticated: true,\n        routes          : [\n            { path: routes.personal,         component: PersonalDetails,        title: localize('Personal Details') },\n            { path: routes.financial,        component: FinancialAssessment,    title: localize('Financial Assessment') },\n            { path: routes.account_password, component: AccountPassword,        title: localize('Account Password') },\n            { path: routes.cashier_password, component: CashierPassword,        title: localize('Cashier Password') },\n            { path: routes.exclusion,        component: SelfExclusion,          title: localize('Self Exclusion') },\n            { path: routes.limits,           component: Limits,                 title: localize('Account Limits') },\n            { path: routes.history,          component: LoginHistory,           title: localize('Login History') },\n            { path: routes.token,            component: ApiToken,               title: localize('API Token') },\n            { path: routes.apps,             component: AuthorizedApplications, title: localize('Authorized Applications') },\n        ],\n    },\n    { path: routes.error404, component: Page404, title: localize('Error 404') },\n]);\n\nlet routes_config;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default  = { component: Page404, title: localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routes_config) {\n        routes_config = initRoutesConfig();\n    }\n    routes_config.push(route_default);\n    return routes_config;\n};\n\nexport default getRoutesConfig;\n","import classNames        from 'classnames';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport { UpgradeButton } from 'App/Components/Elements/AccountSwitcher/upgrade_button.jsx';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport { requestLogout } from 'Services/index';\nimport { connect }       from 'Stores/connect';\n\nclass AccountSwitcher extends React.Component {\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        const accounts_toggle_btn = !(event.target.classList.contains('acc-info'));\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target)\n            && this.props.is_visible && accounts_toggle_btn) {\n            this.props.toggle();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    async doSwitch(loginid) {\n        this.props.toggle();\n        await this.props.switchAccount(loginid);\n    }\n\n    render() {\n        if (!this.props.is_logged_in) return false;\n\n        return (\n            <div className='acc-switcher-list' ref={this.setWrapperRef}>\n                {(this.props.account_list.length > 0) &&\n                this.props.account_list.map((account) => (\n                    <React.Fragment key={account.loginid}>\n                        <div\n                            className={classNames('acc-switcher-account', account.icon)}\n                            onClick={this.doSwitch.bind(this, account.loginid)}\n                        >\n                            <span className='acc-switcher-id'>{account.loginid}</span>\n                            <span className='acc-switcher-type'>{account.title}</span>\n                        </div>\n                    </React.Fragment>\n                ))}\n                {this.props.is_upgrade_enabled &&\n                <div className='acc-button'>\n                    <UpgradeButton onClick={this.props.onClickUpgrade} />\n                </div>\n                }\n                <div className='acc-logout' onClick={requestLogout}>\n                    <span className='acc-logout-text'>{localize('Log out')}</span>\n                    <IconLogout className='drawer-icon' />\n                </div>\n            </div>\n        );\n    }\n}\n\nAccountSwitcher.propTypes = {\n    account_list      : PropTypes.array,\n    is_logged_in      : PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    is_visible        : PropTypes.bool,\n    onClickUpgrade    : PropTypes.func,\n    toggle            : PropTypes.func,\n};\n\nconst account_switcher = connect(\n    ({ client }) => ({\n        account_list : client.account_list,\n        is_logged_in : client.is_logged_in,\n        switchAccount: client.switchAccount,\n    }),\n)(AccountSwitcher);\n\nexport { account_switcher as AccountSwitcher };\n","export * from './account_switcher.jsx';\n","import React         from 'react';\nimport PropTypes     from 'prop-types';\nimport { localize }  from '_common/localize';\nimport URL           from '_common/url';\nimport FullPageModal from 'App/Components/Elements/FullPageModal/full_page_modal.jsx';\nimport Localize      from 'App/Components/Elements/localize.jsx';\nimport { connect }   from 'Stores/connect';\n\nconst onConfirm = async (client) => {\n    await client.switchAccount(client.virtual_account_loginid);\n};\n\nconst onCancel = () => {\n    window.location.href = URL.urlFor('trading');\n};\n\nconst DenialOfServiceModal = ({ client, is_visible }) => (\n    <FullPageModal\n        title={localize('Whoops!')}\n        confirm_button_text={localize('Continue with my virtual account')}\n        cancel_button_text={localize('Visit main website')}\n        onConfirm={() => onConfirm(client)}\n        onCancel={onCancel}\n        is_visible={is_visible}\n    >\n        <Localize str='You are not allowed to access this feature with your real money account at the moment.' />\n    </FullPageModal>\n);\n\nDenialOfServiceModal.propTypes = {\n    client    : PropTypes.object,\n    is_visible: PropTypes.bool,\n};\n\nconst denial_of_service = connect(\n    ({ client }) => ({\n        is_visible: !client.is_client_allowed_to_visit,\n        client,\n    }),\n)(DenialOfServiceModal);\nexport default denial_of_service;\n","export default from './denial_of_service.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport {\n    DrawerItem,\n    DrawerToggle }       from 'App/Components/Elements/Drawer';\nimport { IconLogout }    from 'Assets/Header/Drawer';\nimport {\n    IconTrade,\n    IconPortfolio,\n    IconStatement }      from 'Assets/Header/NavBar';\nimport routes            from 'Constants/routes';\nimport { requestLogout } from 'Services';\nimport { connect }       from 'Stores/connect';\n\nconst MenuDrawer = ({\n    is_dark_mode,\n    is_logged_in,\n    is_mobile,\n    is_portfolio_drawer_on,\n    // is_purchase_confirmed,\n    is_purchase_locked,\n    toggleDarkMode,\n    togglePortfolioDrawer,\n    togglePurchaseLock,\n    // togglePurchaseConfirmation,\n}) => (\n    <div className='drawer-items-container'>\n        <div className='list-items-container'>\n            {is_mobile &&\n            <React.Fragment>\n                <DrawerItem\n                    text={localize('Trade')}\n                    icon={<IconTrade className='drawer-icon' />}\n                    link_to={routes.trade}\n                />\n                <DrawerItem\n                    text={localize('Portfolio')}\n                    icon={<IconPortfolio className='drawer-icon' />}\n                    link_to={routes.portfolio}\n                />\n                <DrawerItem\n                    text={localize('Statement')}\n                    icon={<IconStatement className='drawer-icon' />}\n                    link_to={routes.statement}\n                />\n                <hr />\n                <DrawerToggle\n                    text={localize('Dark Mode')}\n                    toggle={toggleDarkMode}\n                    to_toggle={is_dark_mode}\n                />\n                {/* Disabled until design is ready\n                <DrawerToggle\n                    text={localize('Purchase Confirmation')}\n                    toggle={togglePurchaseConfirmation}\n                    to_toggle={is_purchase_confirmed}\n                />\n                */}\n                <DrawerToggle\n                    text={localize('Purchase Lock')}\n                    toggle={togglePurchaseLock}\n                    to_toggle={is_purchase_locked}\n                />\n            </React.Fragment>}\n        </div>\n        {!!(is_logged_in && is_mobile) &&\n        <div className='drawer-footer'>\n            <DrawerItem\n                icon={<IconLogout className='drawer-icon' />}\n                text={localize('Logout')}\n                custom_action={() => {\n                    if (is_portfolio_drawer_on) {\n                        togglePortfolioDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n                    }\n                    requestLogout();\n                }}\n            />\n        </div>\n        }\n    </div>\n);\n\nMenuDrawer.propTypes = {\n    is_dark_mode              : PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_mobile                 : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    toggleDarkMode            : PropTypes.func,\n    togglePortfolioDrawer     : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_mobile                 : ui.is_mobile,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(MenuDrawer);\n","import classNames     from 'classnames';\nimport ProptTypes     from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst AppContents = ({ children, is_portfolio_drawer_on }) => (\n    <div\n        id='app_contents'\n        className={classNames('app-contents', {\n            'app-contents--show-portfolio-drawer': is_portfolio_drawer_on,\n        })}\n    >\n        {children}\n    </div>\n);\n\nAppContents.propTypes = {\n    children              : ProptTypes.any,\n    is_portfolio_drawer_on: ProptTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_portfolio_drawer_on: ui.is_portfolio_drawer_on,\n    })\n)(AppContents));\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport ServerTime     from '../server_time.jsx';\nimport {\n    NetworkStatus,\n    ToggleFullScreen,\n    TogglePortfolio,\n    ToggleSettings }  from '../../Components/Layout/Footer';\n\nconst Footer = ({\n    is_logged_in,\n    is_portfolio_drawer_on,\n    is_language_dialog_visible,\n    is_settings_dialog_on,\n    network_status,\n    toggleSettingsDialog,\n    togglePortfolioDrawer,\n}) => (\n    <React.Fragment>\n        <NetworkStatus status={network_status} />\n        <ServerTime />\n        <div className='footer-links'>\n            {\n                is_logged_in &&\n                <TogglePortfolio\n                    is_portfolio_drawer_on={is_portfolio_drawer_on}\n                    togglePortfolioDrawer={togglePortfolioDrawer}\n                />\n            }\n            <ToggleFullScreen />\n            <ToggleSettings\n                is_settings_visible={is_settings_dialog_on}\n                is_language_visible={is_language_dialog_visible}\n                toggleSettings={toggleSettingsDialog}\n            />\n        </div>\n    </React.Fragment>\n);\n\nFooter.propTypes = {\n    is_language_dialog_visible: PropTypes.bool,\n    is_logged_in              : PropTypes.bool,\n    is_portfolio_drawer_on    : PropTypes.bool,\n    is_settings_dialog_on     : PropTypes.bool,\n    network_status            : PropTypes.object,\n    togglePortfolioDrawer     : PropTypes.func,\n    toggleSettingsDialog      : PropTypes.func,\n};\n\nexport default connect(\n    ({ client, common, ui }) => ({\n        is_logged_in              : client.is_logged_in,\n        is_language_dialog_visible: ui.is_language_dialog_on,\n        is_portfolio_drawer_on    : ui.is_portfolio_drawer_on,\n        is_settings_dialog_on     : ui.is_settings_dialog_on,\n        network_status            : common.network_status,\n        togglePortfolioDrawer     : ui.togglePortfolioDrawer,\n        toggleSettingsDialog      : ui.toggleSettingsDialog,\n    })\n)(Footer);\n","import PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { withRouter }           from 'react-router';\nimport { formatMoney }          from '_common/base/currency_base';\nimport {\n    AccountInfo,\n    LoginButton,\n    InstallPWAButton,\n    MenuLinks,\n    ToggleMenuDrawer,\n    ToggleNotificationsDrawer } from 'App/Components/Layout/Header';\nimport header_links             from 'App/Constants/header_links';\nimport { connect }              from 'Stores/connect';\n\nconst Header = ({\n    account_type,\n    balance,\n    can_upgrade,\n    currency,\n    hideInstallButton,\n    is_acc_switcher_on,\n    is_install_button_visible,\n    is_logged_in,\n    is_mobile,\n    loginid,\n    onClickUpgrade,\n    pwa_prompt_event,\n    setPWAPromptEvent,\n    showInstallButton,\n    toggleAccountsDialog,\n}) => {\n\n    window.addEventListener('beforeinstallprompt', e => {\n        console.log('Going to show the installation prompt'); // eslint-disable-line no-console\n\n        e.preventDefault();\n\n        setPWAPromptEvent(e);\n        showInstallButton();\n\n    });\n\n    return (\n        <header className='header'>\n            <div className='menu-items'>\n                <div className='menu-left'>\n                    {is_mobile && <ToggleMenuDrawer />}\n                    <MenuLinks items={header_links} />\n                </div>\n                <div className='menu-right'>\n                    <div className='acc-balance-container'>\n                        { is_install_button_visible && is_logged_in &&\n                            <InstallPWAButton\n                                prompt_event={pwa_prompt_event}\n                                onClick={hideInstallButton}\n                            />\n                        }\n                        { is_logged_in ?\n                            <React.Fragment>\n                                <AccountInfo\n                                    account_type={account_type}\n                                    balance={formatMoney(currency, balance, true)}\n                                    is_upgrade_enabled={can_upgrade}\n                                    onClickUpgrade={onClickUpgrade}\n                                    currency={currency}\n                                    loginid={loginid}\n                                    is_dialog_on={is_acc_switcher_on}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </React.Fragment>\n                            :\n                            <LoginButton />\n                        }\n                    </div>\n                </div>\n                <ToggleNotificationsDrawer />\n            </div>\n        </header>\n    );\n};\n\nHeader.propTypes = {\n    account_type             : PropTypes.string,\n    balance                  : PropTypes.string,\n    can_upgrade              : PropTypes.bool,\n    currency                 : PropTypes.string,\n    hideInstallButton        : PropTypes.func,\n    is_acc_switcher_on       : PropTypes.bool,\n    is_dark_mode             : PropTypes.bool, // TODO: add dark theme handler\n    is_install_button_visible: PropTypes.bool,\n    is_logged_in             : PropTypes.bool,\n    is_mobile                : PropTypes.bool,\n    loginid                  : PropTypes.string,\n    onClickUpgrade           : PropTypes.func, // TODO: add click handler\n    pwa_prompt_event         : PropTypes.object,\n    setPWAPromptEvent        : PropTypes.func,\n    showInstallButton        : PropTypes.func,\n    toggleAccountsDialog     : PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <MenuLinks /> from being blocked\nexport default withRouter(connect(\n    ({ client, ui }) => ({\n        account_type             : client.account_title,\n        balance                  : client.balance,\n        can_upgrade              : client.can_upgrade,\n        currency                 : client.currency,\n        is_logged_in             : client.is_logged_in,\n        loginid                  : client.loginid,\n        hideInstallButton        : ui.hideInstallButton,\n        is_acc_switcher_on       : ui.is_accounts_switcher_on,\n        is_dark_mode             : ui.is_dark_mode_on,\n        is_install_button_visible: ui.is_install_button_visible,\n        is_mobile                : ui.is_mobile,\n        pwa_prompt_event         : ui.pwa_prompt_event,\n        setPWAPromptEvent        : ui.setPWAPromptEvent,\n        showInstallButton        : ui.showInstallButton,\n        toggleAccountsDialog     : ui.toggleAccountsDialog,\n    })\n)(Header));\n","import classNames     from 'classnames';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { withRouter } from 'react-router';\nimport { connect }    from 'Stores/connect';\n\nconst ThemeWrapper = ({ children, is_dark_theme }) => {\n    const theme_wrapper_class = classNames('theme-wrapper', {\n        dark : is_dark_theme,\n        light: !is_dark_theme,\n    });\n    return (\n        <div id='theme_wrapper' className={theme_wrapper_class}>\n            {children}\n        </div>\n    );\n};\n\nThemeWrapper.propTypes = {\n    children     : PropTypes.node,\n    is_dark_theme: PropTypes.bool,\n};\n\nexport default withRouter(connect(\n    ({ ui }) => ({\n        is_dark_theme: ui.is_dark_mode_on,\n    }),\n)(ThemeWrapper));\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { withRouter }                 from 'react-router';\nimport ErrorComponent                 from 'App/Components/Elements/Errors';\nimport BinaryRoutes                   from 'App/Components/Routes';\nimport { connect }                    from 'Stores/connect';\n\nconst Routes = (props) => {\n    if (props.has_error) {\n        return <ErrorComponent {...props.error} />;\n    }\n\n    return <BinaryRoutes is_logged_in={props.is_logged_in} />;\n};\n\nRoutes.propTypes = {\n    error       : MobxPropTypes.objectOrObservableObject,\n    has_error   : PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(connect(\n    ({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        error       : common.error,\n        has_error   : common.has_error,\n    })\n)(Routes));\n","export ChartSettings    from './settings_chart.jsx';\nexport GeneralSettings  from './settings_general.jsx';\nexport LanguageSettings from './settings_language.jsx';\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst ChartSettings = ({\n    is_asset_visible,\n    is_countdown_visible,\n    is_layout_default,\n    toggleAsset,\n    toggleCountdown,\n    toggleLayout,\n}) => (\n    <div className='tab-content'>\n        <div className='chart-setting-container'>\n            <SettingsControl\n                name={localize('Position')}\n                toggle={toggleLayout}\n                to_toggle={!is_layout_default}\n                style='toggle-chart-layout'\n            />\n            <SettingsControl\n                name={localize('Asset Information')}\n                toggle={toggleAsset}\n                to_toggle={is_asset_visible}\n            />\n            <SettingsControl\n                name={localize('Scale Countdown')}\n                toggle={toggleCountdown}\n                to_toggle={is_countdown_visible}\n            />\n        </div>\n    </div>\n);\n\nChartSettings.propTypes = {\n    is_asset_visible    : PropTypes.bool,\n    is_countdown_visible: PropTypes.bool,\n    is_layout_default   : PropTypes.bool,\n    toggleAsset         : PropTypes.func,\n    toggleCountdown     : PropTypes.func,\n    toggleLayout        : PropTypes.func,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        is_layout_default   : ui.is_chart_layout_default,\n        is_asset_visible    : ui.is_chart_asset_info_visible,\n        is_countdown_visible: ui.is_chart_countdown_visible,\n        toggleAsset         : ui.toggleChartAssetInfo,\n        toggleCountdown     : ui.toggleChartCountdown,\n        toggleLayout        : ui.toggleChartLayout,\n    })\n)(ChartSettings);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { connect }     from 'Stores/connect';\nimport SettingsControl from '../../Components/Elements/SettingsDialog/settings_control.jsx';\n\nconst GeneralSettings = ({\n    curr_language,\n    is_dark_mode,\n    is_purchase_confirmed,\n    is_purchase_locked,\n    showLanguage,\n    toggleDarkMode,\n    togglePurchaseConfirmation,\n    togglePurchaseLock,\n}) => (\n    <div className='tab-content'>\n        <div className='general-setting-container'>\n            <SettingsControl\n                name={localize('Language')}\n                onClick={showLanguage}\n            >\n                <i className={`flag ic-flag-${(curr_language || 'EN').toLowerCase()}`} />\n            </SettingsControl>\n            <SettingsControl\n                name={localize('Dark Mode')}\n                to_toggle={is_dark_mode}\n                toggle={toggleDarkMode}\n            />\n            <SettingsControl\n                name={localize('Purchase Confirmation')}\n                to_toggle={is_purchase_confirmed}\n                toggle={togglePurchaseConfirmation}\n            />\n            <SettingsControl\n                name={localize('Purchase Lock')}\n                to_toggle={is_purchase_locked}\n                toggle={togglePurchaseLock}\n            />\n        </div>\n    </div>\n);\n\nGeneralSettings.propTypes = {\n    curr_language             : PropTypes.string,\n    is_dark_mode              : PropTypes.bool,\n    is_language_visible       : PropTypes.bool,\n    is_purchase_confirmed     : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    showLanguage              : PropTypes.func,\n    toggleDarkMode            : PropTypes.func,\n    togglePurchaseConfirmation: PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n};\n\nexport default connect(\n    ({ common, ui }) => ({\n        curr_language             : common.current_language,\n        is_dark_mode              : ui.is_dark_mode_on,\n        is_language_visible       : ui.is_language_dialog_on,\n        is_purchase_confirmed     : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        showLanguage              : ui.showLanguageDialog,\n        toggleDarkMode            : ui.toggleDarkMode,\n        togglePurchaseConfirmation: ui.togglePurchaseConfirmation,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    })\n)(GeneralSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport LanguageDialog from '../../Components/Elements/SettingsDialog/language_dialog.jsx';\n\nconst LanguageSettings = ({\n    hide,\n    is_visible,\n    is_settings_on,\n}) => (\n    <LanguageDialog\n        hide={hide}\n        is_visible={is_visible}\n        is_settings_on={is_settings_on}\n    />\n);\n\nLanguageSettings.propTypes = {\n    hide          : PropTypes.func,\n    is_settings_on: PropTypes.bool,\n    is_visible    : PropTypes.bool,\n};\n\nexport default connect(\n    ({ ui }) => ({\n        hide          : ui.hideLanguageDialog,\n        is_settings_on: ui.is_settings_dialog_on,\n        is_visible    : ui.is_language_dialog_on,\n    })\n)(LanguageSettings);\n","import PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { connect }    from 'Stores/connect';\nimport {\n    formatDuration,\n    getDiffDuration } from 'Utils/Date';\n\nconst RemainingTime = ({\n    end_time = null,\n    start_time,\n}) => {\n    if (!+end_time || start_time.unix() > +end_time) {\n        return '';\n    }\n\n    const remaining_time = formatDuration(getDiffDuration(start_time.unix(), end_time));\n\n    return (\n        <div className='remaining-time'>{remaining_time}</div>\n    );\n};\n\nRemainingTime.propTypes = {\n    end_time: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]).isRequired,\n    start_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        start_time: common.server_time,\n    })\n)(RemainingTime);\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { connect }     from 'Stores/connect';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst ServerTime = ({ server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n\n    return (\n        <div className='server-time'>{gmt_time}</div>\n    );\n};\n\nServerTime.propTypes = {\n    server_time: PropTypes.object,\n};\n\nexport default connect(\n    ({ common }) => ({\n        server_time: common.server_time,\n    })\n)(ServerTime);\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport Toast  from '../Components/Elements/ToastMessage';\n\nclass ToastMessage extends React.Component {\n\n    render() {\n        return (\n            <div className={classNames('toast', this.props.position)}>\n                {\n                    this.props.toast_messages.map((toast, id) => (\n                        <Toast\n                            key={id}\n                            data={toast}\n                            removeToastMessage={this.props.removeToastMessage}\n                        />\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nToastMessage.propTypes = {\n    position          : PropTypes.string,\n    removeToastMessage: PropTypes.func,\n    toast_messages    : PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick : PropTypes.func,\n            delay        : PropTypes.number,\n            is_auto_close: PropTypes.bool,\n            message      : PropTypes.node,\n            position     : PropTypes.string,\n            type         : PropTypes.string,\n        }),\n    ),\n};\n\nexport default connect(\n    ({ ui }) => ({\n        removeToastMessage: ui.removeToastMessage,\n        toast_messages    : ui.toast_messages,\n    })\n)(ToastMessage);\n","import { configure }        from 'mobx';\nimport React                from 'react';\nimport { render }           from 'react-dom';\nimport Client               from '_common/base/client_base';\nimport NetworkMonitor       from 'Services/network_monitor';\nimport OutdatedBrowser      from 'Services/outdated_browser';\nimport RootStore            from 'Stores';\nimport { setStorageEvents } from 'Utils/Events/storage';\nimport App                  from './app.jsx';\n\nconfigure({ enforceActions: true });\n\nconst initApp = () => {\n    Client.init();\n\n    setStorageEvents();\n\n    const root_store = new RootStore();\n\n    NetworkMonitor.init(root_store);\n    OutdatedBrowser.init(root_store);\n    root_store.client.init();\n    root_store.modules.trade.init();\n\n    const app = document.getElementById('binary_app');\n\n    if (app) {\n        render(<App root_store={root_store} />, app);\n    }\n};\n\nexport default initApp;\n","import PropTypes                   from 'prop-types';\nimport React                       from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport getBaseName                 from 'Utils/URL/base_name';\nimport { MobxProvider }            from 'Stores/connect';\nimport ErrorBoundary               from './Components/Elements/Errors/error_boundary.jsx';\nimport PortfolioDrawer             from './Components/Elements/PortfolioDrawer';\nimport { POSITIONS }               from './Components/Elements/ToastMessage';\nimport ToastMessage                from './Containers/toast_message.jsx';\nimport AppContents                 from './Containers/Layout/app_contents.jsx';\nimport Footer                      from './Containers/Layout/footer.jsx';\nimport Header                      from './Containers/Layout/header.jsx';\nimport ThemeWrapper                from './Containers/Layout/theme_wrapper.jsx';\nimport Routes                      from './Containers/Routes/routes.jsx';\nimport DenialOfServiceModal        from './Containers/DenialOfServiceModal';\n\nconst App = ({ root_store }) => (\n    <Router basename={getBaseName()}>\n        <MobxProvider store={root_store}>\n            <ThemeWrapper>\n                <div id='header'>\n                    <Header />\n                </div>\n                <ErrorBoundary>\n                    <AppContents>\n                        <Routes />\n                        <PortfolioDrawer />\n                        <ToastMessage position={POSITIONS.TOP_RIGHT} />\n                    </AppContents>\n                    <DenialOfServiceModal />\n                </ErrorBoundary>\n\n                <footer id='footer'>\n                    <Footer />\n                </footer>\n            </ThemeWrapper>\n        </MobxProvider>\n    </Router>\n);\n\nApp.propTypes = {\n    root_store: PropTypes.object,\n};\n\nexport default App;\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconArrow = ({ className }) => (\n    <svg className={className} width='16' height='16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='arrow-path' d='M13.164 5.13a.5.5 0 1 1 .672.74l-5.5 5a.5.5 0 0 1-.672 0l-5.5-5a.5.5 0 0 1 .672-.74L8 9.824l5.164-4.694z' fill='#D2D3DA' fillRule='nonzero' />\n    </svg>\n);\n\nIconArrow.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconArrow };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBack = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path fill='#333' fillRule='nonzero' d='M3.6 8.5L7 12.2a.5.5 0 1 1-.8.6l-4-4.5a.5.5 0 0 1 0-.6l4-4.5a.5.5 0 0 1 .8.6L3.6 7.5h9.9a.5.5 0 1 1 0 1H3.6z' />\n    </svg>\n);\n\nIconBack.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBack };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconClose = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <path className='color1-fill' fill='#2A3052' fillRule='nonzero' d='M8 7.293l4.146-4.147a.5.5 0 0 1 .708.708L8.707 8l4.147 4.146a.5.5 0 0 1-.708.708L8 8.707l-4.146 4.147a.5.5 0 0 1-.708-.708L7.293 8 3.146 3.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n    </svg>\n);\n\nIconClose.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconClose };\n","import React from 'react';\n\nconst IconError = (/* { type } */) => ( // TODO: add icon for different types of error\n    <svg xmlns='http://www.w3.org/2000/svg' width='64' height='64' viewBox='0 0 64 64'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='32' cy='32' r='32' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 26 48)'>\n                <circle cx='6' cy='4' r='4' />\n                <path d='M6 12a4 4 0 0 1 4 4v12a4 4 0 1 1-8 0V16a4 4 0 0 1 4-4z' />\n            </g>\n        </g>\n    </svg>\n);\n\nexport default IconError;\n","import PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconExclamation = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'><circle cx='8' cy='8' r='8' fill='#FFC107' />\n            <g fill='#FFF' transform='matrix(1 0 0 -1 6.5 12)'>\n                <circle cx='1.5' cy='1' r='1' />\n                <path d='M1.5 3c.6 0 1 .4 1 1v3a1 1 0 1 1-2 0V4c0-.6.4-1 1-1z' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconExclamation.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconExclamation };\n","export * from './icon_arrow.jsx';\nexport * from './icon_back.jsx';\nexport * from './icon_close.jsx';\nexport * from './icon_exclamation.jsx';\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconEntrySpot = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path fill='#fff' fillRule='nonzero' d='M9.033 7.912c-1.107 1.014-2.214 2.03-3.33 3.037L5.701 8.84H0V6.88h5.7c.001-.979.002-1.822.005-2.107 1.099.982 2.178 1.987 3.27 2.977.044.047.151.108.058.16z' />\n            <path fill='#fff' fillRule='nonzero' d='M7.66 3.005c2.9 0 5.258 2.244 5.258 5 0 2.757-2.357 5-5.258 5a5.329 5.329 0 0 1-4.178-2h-2.46c1.184 2.361 3.71 4 6.638 4 4.059 0 7.361-3.14 7.361-7s-3.302-7-7.36-7c-2.929 0-5.455 1.64-6.64 4h2.46a5.33 5.33 0 0 1 4.18-2z' />\n        </g>\n    </svg>\n);\n\nIconEntrySpot.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconEntrySpot);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconFlag = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <path d='M0 0h16v16H0z' />\n            <path className='color1-fill' fill='#fff' fillRule='nonzero' d='M5.736 15.144c.082.377-.181.745-.588.821-.406.076-.802-.167-.885-.545L1.084.856c-.082-.377.181-.745.588-.821.406-.077.802.167.885.544l3.179 14.565zM13.136 1.235c-2.8.256-3.3-1.03-5.971-.993C5.638.264 4.12.638 3.364.917l1.897 8.692c.462-.153 1.14-.284 2.054-.22 1.213.083 1.667.897 4.38.708 1.952-.137 3.029-1.223 3.029-1.223l.873-8.548s-.544.734-2.461.91z' />\n        </g>\n    </svg>\n);\n\nIconFlag.propTypes = {\n    color: PropTypes.string,\n};\n\nexport default observer(IconFlag);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst IconTick = () => (\n    <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd'>\n            <circle cx='8' cy='8' r='8' fill='#4caf50' />\n            <path fill='#fff' fillRule='nonzero' d='M6.5 10.793l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L6.5 10.793z' />\n        </g>\n    </svg>\n);\n\nIconTick.propTypes = {\n    circle_color: PropTypes.string,\n    tick_color  : PropTypes.string,\n};\n\nexport default observer(IconTick);\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconMaximize = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-stroke color3-stroke' d='M1.5 10.5v4m4 0h-4m9 0h4m0 0v-4m0-9v4m0-4h-4m-5 0h-4m0 0v4' fill='none' strokeLinecap='square' stroke='#2A3052' />\n    </svg>\n);\n\nIconMaximize.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconMaximize };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconQuickPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 12'>\n        <path className='color1-fill color3-fill' fill='#2A3052' fillRule='evenodd' d='M1 0h14c.6 0 1 .4 1 1v10c0 .6-.4 1-1 1H1a1 1 0 0 1-1-1V1c0-.6.4-1 1-1zm0 1v10h5V1H1zm6 0v10h8V1H7zm1.5 1.5a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1zm-2 2a.5.5 0 1 1 0 1 .5.5 0 0 1 0-1zm2 0h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' />\n    </svg>\n);\n\nIconQuickPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconQuickPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconSettings = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <path className='color1-fill color3-fill' fill='#2A3052' d='M15 6.9v-.4L13.8 6a6 6 0 0 0-.4-.9l.6-1-.2-.4a7.3 7.3 0 0 0-1.6-1.6l-.3-.2-1.1.5a6.1 6.1 0 0 0-1-.3L9.6 1h-.4A7 7 0 0 0 8 .9a7.1 7.1 0 0 0-1.1 0l-.4.1L6 2.2a6.3 6.3 0 0 0-.9.3l-1-.5-.4.2a7.2 7.2 0 0 0-1.6 1.6l-.2.3.5 1.1-.3 1-1.2.3v.4A7.2 7.2 0 0 0 .9 8v1.1l.1.4 1.2.4c0 .3.2.6.4.9l-.6 1 .2.4a7 7 0 0 0 1.6 1.6l.3.2 1.1-.6 1 .4.3 1.2h.4A7.2 7.2 0 0 0 9 15h.4l.4-1.2a6.5 6.5 0 0 0 .9-.3l1 .5.4-.2.8-.8a7.2 7.2 0 0 0 .8-.8l.2-.3-.5-1.1.3-1 1.2-.3v-.4l.1-1.1a6.3 6.3 0 0 0 0-1.1zm-1 1v.7l-.6.2-.5.2-.1.5-.4.8-.2.5.5 1a5.7 5.7 0 0 1-.5.4 5.2 5.2 0 0 1-.4.5l-1-.5-.5.2a5.2 5.2 0 0 1-.8.4l-.5.1-.2.5-.1.6a5.3 5.3 0 0 1-1.3 0l-.2-.6-.2-.5-.5-.1a4.7 4.7 0 0 1-.8-.4l-.5-.2-.4.2-.5.3a5.6 5.6 0 0 1-1-1l.5-1-.2-.4a4.8 4.8 0 0 1-.4-.8L3.1 9l-1-.3a5.3 5.3 0 0 1 0-1.4L3 7l.1-.5.4-.8.2-.5-.2-.4-.3-.6a6 6 0 0 1 1-.9l1 .5.4-.2.8-.4.5-.1.2-.5.1-.6a6 6 0 0 1 1.4 0L9 3l.5.2.8.4.5.2 1-.5.9 1-.5 1 .2.4.4.8.1.5.5.2.6.1V8zM8 5.4A2.7 2.7 0 0 0 5.3 8 2.7 2.7 0 0 0 8 10.7 2.7 2.7 0 0 0 10.7 8 2.7 2.7 0 0 0 8 5.3zM9.1 9a1.6 1.6 0 0 1-1.1.5c-.4 0-.8-.2-1.1-.5A1.6 1.6 0 0 1 6.4 8c0-.4.2-.8.5-1.1A1.6 1.6 0 0 1 8 6.4c.4 0 .8.2 1.1.5a1.6 1.6 0 0 1 0 2.2z' />\n    </svg>\n);\n\nIconSettings.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconSettings };\n","export * from './icon_maximize.jsx';\nexport * from './icon_quick_portfolio.jsx';\nexport * from './icon_settings.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconLogout = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-fill' fill='#2A3052' fillRule='nonzero'>\n            <path d='M8.4 13.8c0 .8-.4 1.4-.9 1.4H2c-.5 0-1-.6-1-1.4V2.4C1 1.6 1.5 1 2 1h5.6c.5 0 .9.6.9 1.4 0 .2.1.4.4.4.2 0 .3-.2.3-.4C9.1 1.2 8.4.2 7.5.2H2C.9.2.2 1.2.2 2.4v11.4C.2 15 1 16 2 16h5.6c1 0 1.6-1 1.6-2.2 0-.2-.1-.4-.3-.4-.3 0-.4.2-.4.4z' />\n            <path d='M4.8 8.5h10.4c.2 0 .4-.2.4-.4s-.2-.4-.4-.4H4.8c-.2 0-.3.2-.3.4s.1.4.3.4z' />\n            <path d='M11.3 4.4l3.8 4h.6v-.6l-4-4a.4.4 0 0 0-.4 0c-.2.2-.2.4 0 .6z' />\n            <path d='M11.8 12.4l3.9-4v-.6a.4.4 0 0 0-.6 0l-3.8 4c-.2.2-.2.4 0 .6.1.2.3.2.5 0z' />\n        </g>\n    </svg>\n);\n\nIconLogout.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLogout };\n","export * from './icon_logout.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconBell = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g className='color1-stroke' fill='none' fillRule='evenodd' stroke='#2A3052'>\n            <path d='M12.8 11.6l-.3-.2V7a4.5 4.5 0 1 0-9 0v4.4l-.3.2a1 1 0 0 0 .3 1.9h9a1 1 0 0 0 .3-2z' />\n            <path d='M7 2.5h2v-1a1 1 0 1 0-2 0v1zm-.5 11v.5a1.5 1.5 0 0 0 3 0v-.5h-3z' />\n        </g>\n    </svg>\n);\n\nIconBell.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconBell };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconCashier = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g fill='none' fillRule='evenodd'>\n            <rect stroke='#2A3052' x='.5' y='5.5' width='15' height='9' rx='1' />\n            <path fill='#2A3052' d='M0 11h16v1H0z' />\n            <path stroke='#2A3052' d='M2.5 3.5h4v2h-4z' />\n            <rect stroke='#2A3052' x='9.5' y='1.5' width='6' height='2' rx='1' />\n            <path fill='#2A3052' d='M12 4h1v1h-1z' />\n            <rect fill='#2A3052' x='10' y='9' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='10' y='7' width='4' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='8' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='6' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='4' y='7' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='9' width='1' height='1' rx='.5' />\n            <rect fill='#2A3052' x='2' y='7' width='1' height='1' rx='.5' />\n        </g>\n    </svg>\n);\n\nIconCashier.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconCashier };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconHamburger = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'>\n        <path className='color1-fill' d='M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z' fill='#000' fillRule='evenodd' />\n    </svg>\n);\n\nIconHamburger.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconHamburger };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconPortfolio = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n        <g className='color2-fill' fill='none' fillRule='evenodd' stroke='none' strokeWidth='1'>\n            <g>\n                <path className='color1-stroke color2-fill color3-stroke' fill='none' stroke='#2A3052' d='M1.5 14.5h13a1 1 0 0 0 1-1v-9a1 1 0 0 0-1-1h-13a1 1 0 0 0-1 1v9a1 1 0 0 0 1 1z' />\n                <path className='color1-stroke color3-stroke color4-fill portfolio-fix' stroke='#2A3052' d='M5.5 3v-.5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1V3' />\n                <path className='color1-stroke scale-fix' stroke='#2A3052' strokeLinecap='square' d='M0 8l4.047 2.248a2 2 0 0 0 .971.252h5.964a2 2 0 0 0 .971-.252L16 8' />\n                <path className='color1-stroke' stroke='#2A3052' strokeLinecap='round' d='M6.5 8.5h3' />\n            </g>\n        </g>\n    </svg>\n);\n\nIconPortfolio.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconPortfolio };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconStatement = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color2-fill' fill='none' fillRule='evenodd'>\n            <g className='color1-stroke' stroke='#2A3052'>\n                <path d='M12.5 15.5V4.207L8.79.5H1a.5.5 0 0 0-.5.5v14a.5.5 0 0 0 .5.5h11.5zM12.5 6.5v9H14a1.5 1.5 0 0 0 1.5-1.5V7a.5.5 0 0 0-.5-.5h-2.5z' />\n            </g>\n            <path className='color1-fill' d='M3.5 5h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h6a.5.5 0 0 1 0 1h-6a.5.5 0 0 1 0-1zm0 2h3a.5.5 0 1 1 0 1h-3a.5.5 0 1 1 0-1z' fill='#2A3052' />\n        </g>\n    </svg>\n);\n\nIconStatement.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconStatement };\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTrade = ({ className }) => (\n    <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n        <g className='color1-stroke color3-stroke' stroke='#2A3052' fill='none' fillRule='evenodd'>\n            <path className='color2-fill stroke-fill' d='M.5 15.5h3V9a.5.5 0 0 0-.5-.5H1a.5.5 0 0 0-.5.5v6.5zM6.5 15.5h3V5a.5.5 0 0 0-.5-.5H7a.5.5 0 0 0-.5.5v10.5zM12.5 15.5h3V1a.5.5 0 0 0-.5-.5h-2a.5.5 0 0 0-.5.5v14.5z' />\n        </g>\n    </svg>\n);\n\nIconTrade.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconTrade };\n","export * from './icon_bell.jsx';\nexport * from './icon_cashier.jsx';\nexport * from './icon_hamburger.jsx';\nexport * from './icon_portfolio.jsx';\nexport * from './icon_statement.jsx';\nexport * from './icon_trade.jsx';\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { IconTradeType } from '../Types';\n\nconst IconTradeCategory = ({ category }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='call_barrier'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='put_barrier'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expirymiss'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='expiryrange'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='range'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='upordown'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitmatch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitdiff'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitodd'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digiteven'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitover'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='digitunder'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='onetouch'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='notouch'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asianu'\n                            />\n                        </div>\n                        <div className='category-wrapper'>\n                            <IconTradeType\n                                className='category-type'\n                                type='asiand'\n                            />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatcall'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbfloatput'\n                        />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='lbhighlow'\n                        />\n                    </div>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <IconTradeType\n                            className='category-type'\n                            type='unknown'\n                        />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className='categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n};\n\nexport { IconTradeCategory };\n","export * from './icon_trade_categories.jsx';\n","import classNames from 'classnames';\nimport PropTypes  from 'prop-types';\nimport React      from 'react';\n\nconst IconTradeType = ({ type, className }) => {\n    let IconType;\n    if (type) {\n        switch (type) {\n            case 'asiand':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path fill='#2A3052' d='M1 10.667h13.333V9.334H1zM1 6.667h13.333v-1H1zM1 4h13.333V3H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 6.093l5.541 6.427-1.01.87-4.728-5.483L6.22 8.918l-4.737-5.83 1.034-.842 3.93 4.836z' />\n                        <path fill='#2A3052' d='M13.576 13.6v-2.208l-1.006-1.007v2.19h-2.266l1.052 1.025z' />\n                    </g>\n                );\n                break;\n            case 'asianu':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path fill='#2A3052' d='M1 5.333h13.333v1.333H1zM1 9.333h13.333v1H1zM1 12h13.333v1H1z' />\n                        <path fill='#2A3052' fillRule='nonzero' d='M7.765 9.907l5.541-6.427-1.01-.87-4.728 5.483L6.22 7.082l-4.737 5.83 1.034.842 3.93-4.836z' />\n                        <path fill='#2A3052' d='M13.576 2.4v2.208L12.57 5.615v-2.19h-2.266L11.356 2.4z' />\n                    </g>\n                );\n                break;\n            case 'call_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='8' width='10' height='1' rx='.5' />\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82l-2.137-1.71z' fillRule='nonzero' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' fillRule='nonzero' />\n                    </g>\n\n                );\n                break;\n            case 'call':\n                IconType = (\n                    <g fill='#2A3052'>\n                        <path d='M3.812 8.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 0 0-.735-.68L5.949 9.82 3.812 8.11z' />\n                        <path d='M12 4v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H12z' />\n                    </g>\n\n                );\n                break;\n            case 'calle_light':\n                IconType = (\n                    <path d='M6.671 8l3.422-4.79A.5.5 0 0 1 10.5 3h1.79l-1.144-1.147a.5.5 0 1 1 .708-.706l1.963 1.966a.499.499 0 0 1 0 .774l-1.963 1.966a.5.5 0 0 1-.708-.706L12.291 4h-1.534L7.9 8h4.6a.5.5 0 1 1 0 1H7.186l-1.28 1.79a.5.5 0 0 1-.76.064l-2-2A.498.498 0 0 1 3.5 8h3.171zm-.714 1h-1.25l.73.73.52-.73zm6.897-2.147a.5.5 0 0 1-.708-.706l1.997-2a.5.5 0 1 1 .707.706l-1.996 2z' fill='#2A3052' fillRule='evenodd' />\n                );\n                break;\n            case 'digitdiff':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 6.75h-4v-1.5h4L4.5 4H6l1.5 2L6 8H4.5l1-1.25zM10.5 11.75h4v-1.5h-4l1-1.25H10l-1.5 2 1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digiteven':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M2.698 9.5H.218v-.537L1.36 7.762c.281-.32.422-.576.422-.764 0-.153-.033-.27-.1-.35-.067-.08-.163-.12-.29-.12a.362.362 0 0 0-.306.16.657.657 0 0 0-.117.4H.144A1.167 1.167 0 0 1 .762 6.05c.193-.104.41-.156.65-.156.383 0 .68.089.887.266.207.178.31.432.31.764 0 .14-.025.277-.077.41a1.793 1.793 0 0 1-.243.417 6.12 6.12 0 0 1-.531.584l-.46.53h1.4V9.5zM9.107 8.194h.47v.825h-.47V10h-1.07v-.98H6.252l-.064-.655 1.85-2.977v-.01h1.07v2.816zm-1.9 0h.83V6.772l-.066.108-.765 1.314zM15.205 5.894v.647h-.037c-.308 0-.56.074-.758.221a.933.933 0 0 0-.365.614.962.962 0 0 1 .703-.273c.308 0 .553.112.735.336.182.225.273.52.273.884 0 .226-.053.434-.16.623a1.141 1.141 0 0 1-.446.443c-.192.107-.404.16-.636.16-.253 0-.478-.058-.677-.172a1.183 1.183 0 0 1-.463-.492 1.62 1.62 0 0 1-.171-.738v-.33c0-.365.078-.695.235-.987.157-.292.381-.52.673-.687.291-.166.614-.249.97-.249h.124zm-.743 1.838a.47.47 0 0 0-.437.262v.246c0 .45.156.674.467.674.125 0 .23-.056.313-.168a.687.687 0 0 0 .126-.423.674.674 0 0 0-.128-.426.41.41 0 0 0-.34-.165z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitmatch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M5.5 8.75H2v-1.5h3.5L4.5 6H6l1.5 2L6 10H4.5l1-1.25zM10.5 8.75H14v-1.5h-3.5l1-1.25H10L8.5 8l1.5 2h1.5l-1-1.25zM7.5 0h1v16h-1z' fill='#2A3052' />\n                    </g>\n                );\n                break;\n            case 'digitodd':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M4.5 11.5h7v-7h-7v7zm8-8v9h-9v-9h9z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M2.041 9.5h-.825V6.873l-.81.237v-.625l1.56-.54h.075zM7.26 7.242h.505c.4 0 .6-.196.6-.587a.508.508 0 0 0-.143-.373c-.096-.096-.23-.145-.403-.145a.58.58 0 0 0-.37.124.378.378 0 0 0-.157.308h-1.07c0-.243.068-.46.203-.65.136-.191.323-.34.564-.446.24-.107.504-.16.792-.16.514 0 .918.117 1.212.352.294.234.441.557.441.968 0 .198-.06.386-.182.563a1.3 1.3 0 0 1-.532.43c.245.089.438.224.578.405.14.18.21.404.21.67 0 .414-.16.744-.477.991-.317.248-.734.371-1.25.371a2.05 2.05 0 0 1-.843-.172 1.32 1.32 0 0 1-.589-.48 1.246 1.246 0 0 1-.2-.696h1.076c0 .141.057.264.171.368a.605.605 0 0 0 .423.155.634.634 0 0 0 .45-.157.525.525 0 0 0 .168-.401c0-.233-.058-.398-.174-.495-.116-.098-.277-.146-.482-.146H7.26v-.797zM13.266 7.762l.217-1.817h2.078v.64h-1.409l-.08.706a.973.973 0 0 1 .23-.09c.096-.027.189-.04.28-.04.353 0 .625.105.814.314.19.209.285.502.285.88 0 .228-.051.434-.153.619a1.049 1.049 0 0 1-.428.426c-.184.1-.402.149-.652.149-.223 0-.432-.046-.628-.138a1.126 1.126 0 0 1-.459-.379.92.92 0 0 1-.163-.543h.825c.008.13.05.234.124.31a.395.395 0 0 0 .296.115c.277 0 .415-.205.415-.615 0-.38-.17-.569-.508-.569-.192 0-.335.062-.43.186l-.654-.154z' />\n                    </g>\n                );\n                break;\n            case 'digitover':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'digitunder':\n                IconType = (\n                    <g transform='matrix(1 0 0 -1 0 16)' fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 8)' y='7.5' width='16' height='1' rx='.5' />\n                        <path d='M12.866 5.834a.5.5 0 0 0 1 0V3.713a.5.5 0 0 0-.5-.5h-2.121a.5.5 0 0 0 0 1h1.62v1.621z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M.5 11a.5.5 0 1 0 0 1h5a.5.5 0 0 0 .354-.146l7.5-7.5a.5.5 0 0 0-.708-.708L5.293 11H.5z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'expirymiss':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 3.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 2l-1.147 1.146z' />\n                            <path d='M15.5 1.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrange':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'><path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'expiryrangee':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'><rect transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <rect transform='rotate(180 8 11)' y='10.5' width='16' height='1' rx='.5' />\n                        <g fillRule='nonzero'>\n                            <path d='M13.646 9.146a.5.5 0 1 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 1 0-.708.708L14.793 8l-1.147 1.146z' />\n                            <path d='M15.5 7.5h-5a.5.5 0 0 0 0 1h5a.5.5 0 1 0 0-1z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatcall':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 16h16V0H0z' />\n                        <path d='M.5 11a.5.5 0 0 0 0 1h15a.5.5 0 1 0 0-1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'><path d='M12.5 9V3a.5.5 0 0 1 1 0v6a.5.5 0 0 1-1 0z' />\n                            <path d='M13.021 8.586l1.061-1.06a.5.5 0 1 1 .707.706l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06zM13.021 3.172l1.061 1.06a.5.5 0 1 0 .707-.707l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 7.11a.5.5 0 0 0-.624.78l2.5 2a.5.5 0 0 0 .68-.05l6-6.5a.5.5 0 1 0-.735-.68L2.949 8.82.812 7.109z' />\n                            <path d='M9 3v1.5a.5.5 0 1 0 1 0v-2a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbfloatput':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 5a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 7v6a.5.5 0 0 0 1 0V7a.5.5 0 0 0-1 0z' />\n                            <path d='M13.021 7.414l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 12.828l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M.812 8.89a.5.5 0 0 1-.624-.78l2.5-2a.5.5 0 0 1 .68.05l6 6.5a.5.5 0 1 1-.735.68L2.949 7.18.812 8.891z' />\n                            <path d='M9 13v-1.5a.5.5 0 1 1 1 0v2a.5.5 0 0 1-.5.5h-2a.5.5 0 1 1 0-1H9z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'lbhighlow':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <path d='M.5 14a.5.5 0 1 1 0-1h15a.5.5 0 1 1 0 1H.5zM.5 3a.5.5 0 0 1 0-1h15a.5.5 0 1 1 0 1H.5z' fill='#2A3052' fillRule='nonzero' />\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M12.5 4.536v6.428c0 .296.224.536.5.536s.5-.24.5-.536V4.536C13.5 4.24 13.276 4 13 4s-.5.24-.5.536z' />\n                            <path d='M13.021 4.914l1.061 1.06a.5.5 0 1 0 .707-.706l-1.414-1.414a.5.5 0 0 0-.707 0l-1.414 1.414a.5.5 0 0 0 .707.707l1.06-1.06zM13.021 11.088l1.061-1.06a.5.5 0 1 1 .707.707l-1.414 1.414a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.06 1.06z' />\n                        </g>\n                        <g fill='#2A3052' fillRule='nonzero'>\n                            <path d='M9.496 6.5V8a.5.5 0 1 0 1 0V6a.5.5 0 0 0-.5-.5h-2a.5.5 0 1 0 0 1h1.5z' />\n                            <path d='M5.246 10.923L3.486 3.88c-.125-.497-.826-.508-.967-.016l-2 7a.5.5 0 1 0 .962.274l1.487-5.204 1.547 6.188a.5.5 0 0 0 .87.2l5-6a.5.5 0 1 0-.77-.641l-4.369 5.243z' />\n                        </g>\n                    </g>\n                );\n                break;\n            case 'notouch':\n                IconType = (\n                    <g fill='#2A3052' fillRule='nonzero'>\n                        <path d='M9.839 9.87a.5.5 0 0 0 .707 0l2.019-2.019a.5.5 0 1 0-.707-.707l-1.666 1.665-3.794-3.793a.5.5 0 0 0-.707 0l-.454.454-.823-.824a.5.5 0 1 0-.707.708L4.884 6.53a.5.5 0 0 0 .707 0l.454-.454L9.839 9.87z' />\n                        <path d='M12.428 8.79a.5.5 0 1 0 1 0V6.667a.5.5 0 0 0-.5-.5h-2.12a.5.5 0 1 0 0 1h1.62v1.621zM3 11.7h10.5a.5.5 0 1 0 0-1H3a.5.5 0 1 0 0 1z' />\n                    </g>\n                );\n                break;\n            case 'onetouch':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='stroke-white' d='M3 4h10.5' stroke='#2A3052' strokeLinecap='round' />\n                        <path d='M11.074 5.454a.5.5 0 0 0-.707-.708L5.924 9.191a.5.5 0 0 0 .041.744l.953.762-1.272 1.272a.5.5 0 0 0 .707.707l1.666-1.667a.5.5 0 0 0-.04-.744l-.953-.762 4.048-4.05z' fill='#2A3052' fillRule='nonzero' />\n                        <path fill='#2A3052' d='M11.263 4.556l.034 3.944H10.282V6.26l-.676-.76H7.34v-.944z' />\n                    </g>\n                );\n                break;\n            case 'put_barrier':\n                IconType = (\n                    <g fill='#2A3052' fillRule='evenodd'>\n                        <rect x='3' y='6.5' width='10' height='1' rx='.5' />\n                        <path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' fillRule='nonzero' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'put':\n                IconType = (\n                    <g fill='#2A3052'><path d='M11.62 12.325a.5.5 0 0 0 .76-.65l-6-7a.5.5 0 0 0-.692-.065l-2.5 2a.5.5 0 0 0 .624.78l2.123-1.698 5.685 6.633z' />\n                        <path d='M12 12h-1.5a.5.5 0 1 0 0 1h2a.5.5 0 0 0 .5-.5v-2a.5.5 0 1 0-1 0V12z' />\n                    </g>\n                );\n                break;\n            case 'range':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 11.5)' y='11' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 4.5)' y='4' width='16' height='1' rx='.5' />\n                        <path d='M12.646 9.146a.5.5 0 0 0 .708.708l1.5-1.5a.5.5 0 0 0 0-.708l-1.5-1.5a.5.5 0 0 0-.708.708L13.793 8l-1.147 1.146z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M11.167 7.5L9.3 6.1a.5.5 0 0 0-.716.123L6.955 8.665 4.885 6.18a.5.5 0 0 0-.739-.034L2.293 8H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .354-.146L4.466 7.24l2.15 2.58a.5.5 0 0 0 .8-.044l1.707-2.56L10.7 8.4a.5.5 0 0 0 .3.1h3.5a.5.5 0 1 0 0-1h-3.333z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            case 'upordown':\n                IconType = (\n                    <g fill='none' fillRule='evenodd'>\n                        <path className='transparent' d='M0 0h16v16H0z' />\n                        <rect fill='#2A3052' transform='rotate(180 8 12)' y='11.5' width='16' height='1' rx='.5' />\n                        <rect fill='#2A3052' transform='rotate(180 8 5)' y='4.5' width='16' height='1' rx='.5' />\n                        <path d='M13.277 3.772a.5.5 0 0 0 .966-.259l-.55-2.049a.5.5 0 0 0-.612-.353l-2.049.549a.5.5 0 0 0 .259.966l1.566-.42.42 1.566z' fill='#2A3052' fillRule='nonzero' />\n                        <path d='M4.876 6.17a.5.5 0 0 0-.766.018L2.26 8.5H.5a.5.5 0 0 0 0 1h2a.5.5 0 0 0 .39-.188L4.517 7.28l3.107 3.55a.5.5 0 0 0 .807-.075l5-8.5a.5.5 0 0 0-.862-.508L7.92 9.65 4.876 6.17z' fill='#2A3052' fillRule='nonzero' />\n                    </g>\n                );\n                break;\n            default:\n                IconType = (\n                    <path fill='#B0B3BF' fillRule='evenodd' d='M7 10.4L7.4 9 8 7.9l1-1c.4-.5.6-1 .6-1.5 0-.6-.1-1-.4-1.3-.2-.3-.6-.4-1.2-.4-.5 0-.9.1-1.2.4-.3.3-.4.6-.4 1H5c0-.7.3-1.4.9-1.9.5-.5 1.2-.7 2.1-.7 1 0 1.7.3 2.2.8.5.5.8 1.1.8 2 0 .9-.4 1.7-1.2 2.6l-.8.8c-.4.4-.5 1-.5 1.7H7zm0 2.3c0-.2 0-.4.2-.5l.6-.3c.3 0 .5.1.6.3.2.1.2.3.2.5 0 .3 0 .4-.2.6l-.6.2c-.2 0-.4 0-.6-.2a.8.8 0 0 1-.2-.6z' />\n                );\n                break;\n        }\n    }\n    return (\n        <svg className={classNames('inline-icon', className)} width='16' height='16' viewBox='0 0 16 16' xmlns='http://www.w3.org/2000/svg'>\n            {IconType}\n        </svg>\n\n    );\n};\n\nIconTradeType.propTypes = {\n    className: PropTypes.string,\n    type     : PropTypes.string,\n};\n\nexport { IconTradeType };\n","export * from './icon_trade_types.jsx';\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst IconLock = ({ className }) => (\n    <svg className={className} xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'>\n        <g fill='none' fillRule='evenodd' transform='translate(3 1)'>\n            <rect width='9' height='7' x='.5' y='6.5' stroke='#2A3052' rx='1' />\n            <circle cx='5' cy='10' r='1' fill='#2A3052' />\n            <path stroke='#2A3052' d='M5 .5C7 .5 8.5 2.1 8.5 4v2.5h-7V4C1.5 2 3.1.5 5 .5z' />\n        </g>\n    </svg>\n);\n\nIconLock.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { IconLock };\n","import { localize } from '_common/localize';\n\nexport const getContractTypeDisplay = () => ({\n    ASIANU      : localize('Asian Up'),\n    ASIAND      : localize('Asian Down'),\n    CALL        : localize('Higher'),\n    CALLE       : localize('Higher or equal'),\n    PUT         : localize('Lower'),\n    PUTE        : localize('Lower or equal'),\n    DIGITMATCH  : localize('Digit Matches'),\n    DIGITDIFF   : localize('Digit Differs'),\n    DIGITODD    : localize('Digit Odd'),\n    DIGITEVEN   : localize('Digit Even'),\n    DIGITOVER   : localize('Digit Over'),\n    DIGITUNDER  : localize('Digit Under'),\n    EXPIRYMISS  : localize('Ends Outside'),\n    EXPIRYRANGE : localize('Ends Between'),\n    EXPIRYRANGEE: localize('Ends Between'),\n    LBFLOATCALL : localize('Close-Low'),\n    LBFLOATPUT  : localize('High-Close'),\n    LBHIGHLOW   : localize('High-Low'),\n    RANGE       : localize('Stays Between'),\n    UPORDOWN    : localize('Goes Outside'),\n    ONETOUCH    : localize('Touches'),\n    NOTOUCH     : localize('Does Not Touch'),\n});\n","export *      from './contract';\nexport routes from './routes';\nexport *      from './ui';\n","const routes = {\n    error404        : '/404',\n    account_password: '/settings/account_password',\n    apps            : '/settings/apps',\n    cashier_password: '/settings/cashier_password',\n    contract        : '/contract/:contract_id',\n    exclusion       : '/settings/exclusion',\n    financial       : '/settings/financial',\n    history         : '/settings/history',\n    index           : '/index',\n    limits          : '/settings/limits',\n    personal        : '/settings/personal',\n    portfolio       : '/portfolio',\n    root            : '/',\n    settings        : '/settings',\n    statement       : '/statement',\n    token           : '/settings/token',\n    trade           : '/trade',\n};\n\nexport default routes;\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 980;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport DetailsGroup from './details_group.jsx';\n\nconst DetailsContents = ({\n    buy_id,\n    details_expiry,\n    details_info,\n    longcode,\n}) => (\n    <div className='contract-contents'>\n        <div className='longcode'>{longcode}</div>\n        <div className='ref-number'>{localize('Reference No:')} {buy_id}</div>\n        <DetailsGroup\n            title={localize('Contract Information')}\n            items={details_info}\n        />\n        <DetailsGroup\n            title={localize('Contract Expiry')}\n            items={details_expiry}\n        />\n    </div>\n);\n\nDetailsContents.propTypes = {\n    buy_id        : PropTypes.string,\n    details_expiry: PropTypes.object,\n    details_info  : PropTypes.object,\n    longcode      : PropTypes.string,\n};\n\nexport default observer(DetailsContents);\n","import { observer }      from 'mobx-react';\nimport PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { isEmptyObject } from '_common/utility';\n\nconst DetailsGroup = ({\n    items,\n    title,\n}) => (\n    !title || isEmptyObject(items)\n        ? ''\n        : (\n            <React.Fragment>\n                <div className='info-header'>{title}</div>\n                { Object.keys(items).map(key => (\n                    <div className='info-item' key={key}>\n                        <div>{key}</div>\n                        <div>{items[key]}</div>\n                    </div>\n                ))}\n            </React.Fragment>\n        )\n);\n\nDetailsGroup.propTypes = {\n    items: PropTypes.object,\n    title: PropTypes.string,\n};\n\nexport default observer(DetailsGroup);\n","import classNames          from 'classnames';\nimport { observer }        from 'mobx-react';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\nimport { getHeaderConfig } from 'Stores/Modules/Contract/Constants/ui';\n\nconst DetailsHeader = ({ status }) => {\n    const header_config   = getHeaderConfig();\n    const title_purchased = header_config.purchased.title;\n    const title_result    = header_config[status].title;\n    const icon_purchased  = header_config.purchased.icon;\n    const icon_result     = header_config[status].icon;\n\n    return (\n        <div className={classNames('contract-header', status)}>\n            <div className='header-wrapper'>\n                <div className='header-result'>\n                    {icon_result}\n                    {title_result}\n                </div>\n                <div className='header-purchased'>\n                    {icon_purchased}\n                    {title_purchased}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nDetailsHeader.propTypes = {\n    status: PropTypes.oneOf(['purchased', 'won', 'lost']),\n};\n\nexport default observer(DetailsHeader);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\n\nconst DigitDisplay = ({\n    digit_info = {},\n    digit_number,\n}) => {\n    const digit_class = classNames(\n        'digit-value',\n        digit_info.is_win ? 'win' : 'loss',\n        { last: digit_info.is_last },\n    );\n\n    return (\n        <div className='digit-info'>\n            <div className={digit_class}>{digit_info.digit}</div>\n            <div className='tick-number'>{localize('Tick [_1]', [digit_number])}</div>\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    digit_info  : PropTypes.object,\n    digit_number: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","export InfoBoxDigit   from './info_box_digit.jsx';\nexport InfoBoxExpired from './info_box_expired.jsx';\nexport InfoBoxGeneral from './info_box_general.jsx';\n","import { observer }   from 'mobx-react';\nimport PropTypes      from 'prop-types';\nimport React          from 'react';\nimport { localize }   from '_common/localize';\nimport DigitDisplay   from './digit_display.jsx';\nimport InfoBoxExpired from './info_box_expired.jsx';\n\nconst InfoBoxDigit = ({\n    contract_info,\n    digits_info,\n    is_ended,\n}) => {\n    const digits_array = Object.keys(digits_info).sort().map(spot_time => digits_info[spot_time]);\n    const count = +contract_info.tick_count;\n    const latest_digit = digits_array.slice(-1)[0] || {};\n    const display_array = [...Array(count).keys()].map(i => {\n        // manually put the last one at the end because some ticks are missing from responses\n        const last_item = i + 1 === count && latest_digit.is_last ? latest_digit : {};\n        return digits_array[i] && !digits_array[i].is_last ? digits_array[i] : last_item;\n    });\n\n    return (\n        <div className='digits'>\n            <div className='digit-title'>{localize('Last Digit')}</div>\n            <div className='digit-list'>\n                { display_array.map((info, idx) => (\n                    <DigitDisplay digit_info={info} digit_number={idx + 1} key={idx} />\n                ))}\n            </div>\n            <InfoBoxExpired\n                contract_info={contract_info}\n                has_flag={is_ended}\n                has_percentage={is_ended}\n            />\n        </div>\n    );\n};\n\nInfoBoxDigit.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    is_ended     : PropTypes.bool,\n};\n\nexport default observer(InfoBoxDigit);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Money        from 'App/Components/Elements/money.jsx';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport SellInfo     from '../Sell/sell_info.jsx';\n\nconst InfoBoxExpired = ({\n    contract_info,\n    has_flag = true,\n    has_percentage = true,\n    sell_info = {},\n}) => {\n    const {\n        currency,\n        profit,\n        profit_percentage,\n    } = contract_info;\n\n    const percentage_text = `${profit_percentage > 0 ? '+' : ''}${profit_percentage}%`;\n\n    return (\n        <div className={`expired ${profit > 0 ? 'won' : 'lost'}`}>\n            { sell_info.transaction_id &&\n                <SellInfo contract_info={contract_info} sell_info={sell_info} />\n            }\n            { has_flag &&\n                <IconFlag />\n            }\n            <div>\n                <div>{localize('Profit/Loss')}:</div>\n                <div className='pl-value'>\n                    <Money amount={profit} currency={currency} has_sign />\n                    { has_percentage &&\n                        <span className='percentage'>({percentage_text})</span>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n};\n\nInfoBoxExpired.propTypes = {\n    contract_info : PropTypes.object,\n    has_flag      : PropTypes.bool,\n    has_percentage: PropTypes.bool,\n    sell_info     : PropTypes.object,\n};\n\nexport default observer(InfoBoxExpired);\n","import classNames       from 'classnames';\nimport { observer }     from 'mobx-react';\nimport PropTypes        from 'prop-types';\nimport React            from 'react';\nimport { localize }     from '_common/localize';\nimport Money            from 'App/Components/Elements/money.jsx';\nimport RemainingTime    from 'App/Containers/remaining_time.jsx';\nimport {\n    getIndicativePrice,\n    isEnded,\n    isStarted }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractSell     from '../../Containers/contract_sell.jsx';\n\nconst InfoBoxGeneral = ({ className, contract_info }) => {\n    const {\n        buy_price,\n        currency,\n        date_expiry,\n        profit,\n    } = contract_info;\n\n    const indicative_price = getIndicativePrice(contract_info);\n    const is_started       = isStarted(contract_info);\n    const is_ended         = isEnded(contract_info);\n\n    return (\n        <div className={classNames('general', className)}>\n            <div>\n                <div>{localize('Purchase Price')}</div>\n                <div>{localize('Indicative Price')}</div>\n                <div>{localize('Profit/Loss')}</div>\n            </div>\n            <div className='values'>\n                <div>\n                    <Money amount={buy_price} currency={currency} />\n                </div>\n                <div>\n                    <Money amount={indicative_price} currency={currency} />\n                </div>\n                <div className={profit >= 0 ? 'profit' : 'loss'}>\n                    <Money amount={profit} currency={currency} has_sign />\n                </div>\n            </div>\n            { !is_ended &&\n                <div>\n                    <div>{localize('Remaining Time')}</div>\n                    <strong>\n                        {is_started && date_expiry ?\n                            <RemainingTime end_time={date_expiry} />\n                            :\n                            '-'\n                        }\n                    </strong>\n                </div>\n            }\n            <ContractSell />\n        </div>\n    );\n};\n\nInfoBoxGeneral.propTypes = {\n    className    : PropTypes.string,\n    contract_info: PropTypes.object,\n    onClickSell  : PropTypes.func,\n};\n\nexport default observer(InfoBoxGeneral);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Tooltip      from 'App/Components/Elements/tooltip.jsx';\nimport Button       from 'App/Components/Form/button.jsx';\n\nconst SellButton = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => {\n    const sell_message = is_valid_to_sell\n        ? localize('Contract will be sold at the prevailing market price when the request is received by our servers. This price may differ from the indicated price.')\n        : contract_info.validation_error;\n\n    return (\n        <React.Fragment>\n            <Tooltip alignment='left' icon='question' message={sell_message} />\n            <Button\n                className='secondary green'\n                is_disabled={!is_valid_to_sell || is_sell_requested}\n                text={localize('Sell')}\n                onClick={onClickSell}\n            />\n        </React.Fragment>\n    );\n};\n\nSellButton.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default observer(SellButton);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Localize     from 'App/Components/Elements/localize.jsx';\nimport Money        from 'App/Components/Elements/money.jsx';\n\nconst SellInfo = ({\n    contract_info,\n    sell_info,\n}) => (\n    <div className='sell-info'>\n        <div>\n            <Localize\n                str='You have sold this contract at [_1]'\n                replacers={{\n                    '1': <Money\n                        key={sell_info.transaction_id}\n                        currency={contract_info.currency}\n                        amount={sell_info.sell_price}\n                    />,\n                }}\n            />\n        </div>\n        <div>{localize('Your transaction reference number is [_1]', [sell_info.transaction_id])}</div>\n    </div>\n);\n\nSellInfo.propTypes = {\n    contract_info: PropTypes.object,\n    sell_info    : PropTypes.object,\n};\n\nexport default observer(SellInfo);\n","import PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\n// TODO: move to App/Components, Refactor svg, consider other types, more features;\n// when a general design and more icons for all messages is ready\nconst ContractError = ({\n    message = '',\n    onClickClose,\n}) => !message ? null : (\n    <div className='message'>\n        <div className='message-icon'>\n            <svg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 16 16'>\n                <g fill='none' fillRule='evenodd'>\n                    <circle cx='8' cy='8' r='8' fill='#F44336' />\n                    <path fill='#FFF' fillRule='nonzero' d='M8 7.293l3.146-3.147a.5.5 0 0 1 .708.708L8.707 8l3.147 3.146a.5.5 0 0 1-.708.708L8 8.707l-3.146 3.147a.5.5 0 0 1-.708-.708L7.293 8 4.146 4.854a.5.5 0 1 1 .708-.708L8 7.293z' />\n                </g>\n            </svg>\n        </div>\n        <div className='message-text'>{message}</div>\n        <div className='message-close' onClick={onClickClose}>\n            <IconClose />\n        </div>\n    </div>\n);\n\nContractError.propTypes = {\n    message     : PropTypes.string,\n    onClickClose: PropTypes.func,\n};\n\nexport default ContractError;\n","import PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { Link }        from 'react-router-dom';\nimport { localize }    from '_common/localize';\nimport UILoader        from 'App/Components/Elements/ui_loader.jsx';\nimport routes          from 'Constants/routes';\nimport { connect }     from 'Stores/connect';\nimport DetailsContents from '../Components/Details/details_contents.jsx';\nimport DetailsHeader   from '../Components/Details/details_header.jsx';\nimport ErrorComponent  from '../../../App/Components/Elements/Errors';\n\nclass ContractDetails extends React.Component {\n    componentDidMount() { this.props.onMount(this.props.contract_id); }\n\n    componentWillUnmount() { this.props.onUnmount(); }\n\n    render() {\n        const {\n            contract_id,\n            longcode,\n            transaction_ids,\n        } = this.props.contract_info;\n\n        if (contract_id && !this.props.has_error) {\n            return (\n                <React.Fragment>\n                    <div className='contract-container'>\n                        <DetailsHeader status={this.props.display_status} />\n                        <DetailsContents\n                            buy_id={transaction_ids.buy}\n                            details_expiry={this.props.details_expiry}\n                            details_info={this.props.details_info}\n                            longcode={longcode}\n                        />\n                        <Link\n                            className='btn secondary orange'\n                            to={routes.trade}\n                            onClick={this.props.onClickNewTrade}\n                        >\n                            <span>{localize('Start a new trade')}</span>\n                        </Link>\n                    </div>\n                </React.Fragment>\n            );\n        } else if (!contract_id && !this.props.has_error) {\n            return (\n                <UILoader />\n            );\n        }\n        return (\n            <ErrorComponent message={this.props.error_message} />\n        );\n        \n    }\n}\n\nContractDetails.propTypes = {\n    contract_id    : PropTypes.string,\n    contract_info  : PropTypes.object,\n    details_expiry : PropTypes.object,\n    details_info   : PropTypes.object,\n    display_status : PropTypes.string,\n    error_message  : PropTypes.string,\n    has_error      : PropTypes.bool,\n    onClickNewTrade: PropTypes.func,\n    onMount        : PropTypes.func,\n    onUnmount      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info : modules.contract.contract_info,\n        details_info  : modules.contract.details_info,\n        details_expiry: modules.contract.details_expiry,\n        display_status: modules.contract.display_status,\n        error_message : modules.contract.error_message,\n        has_error     : modules.contract.has_error,\n        onMount       : modules.contract.onMount,\n        onUnmount     : modules.contract.onUnmount,\n    }),\n)(ContractDetails);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { connect }  from 'Stores/connect';\nimport SellButton   from '../Components/Sell/sell_button.jsx';\n\nconst ContractSell = ({\n    contract_info,\n    is_sell_requested,\n    is_valid_to_sell,\n    onClickSell,\n}) => contract_info.tick_count ? null : ( // Sell is not available for tick contracts\n    <div className='sell'>\n        <SellButton\n            contract_info={contract_info}\n            is_sell_requested={is_sell_requested}\n            is_valid_to_sell={is_valid_to_sell}\n            onClickSell={onClickSell}\n        />\n    </div>\n);\n\nContractSell.propTypes = {\n    contract_info    : PropTypes.object,\n    is_sell_requested: PropTypes.bool,\n    is_valid_to_sell : PropTypes.bool,\n    onClickSell      : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info    : modules.contract.contract_info,\n        is_sell_requested: modules.contract.is_sell_requested,\n        is_valid_to_sell : modules.contract.is_valid_to_sell,\n        onClickSell      : modules.contract.onClickSell,\n    })\n)(ContractSell);\n","import classNames          from 'classnames';\nimport PropTypes           from 'prop-types';\nimport React               from 'react';\n// import { CSSTransition }   from 'react-transition-group';\nimport { connect }         from 'Stores/connect';\nimport { isDigitContract } from 'Stores/Modules/Contract/Helpers/digits';\nimport { isEnded }         from 'Stores/Modules/Contract/Helpers/logic';\nimport ContractError       from '../Components/contract_error.jsx';\nimport {\n    InfoBoxDigit,\n    InfoBoxExpired,\n    InfoBoxGeneral }       from '../Components/InfoBox';\n\nconst InfoBox = ({\n    // is_contract_mode,\n    contract_info,\n    digits_info,\n    is_trade_page,\n    removeError,\n    sell_info,\n}) => {\n    const is_digit = isDigitContract(contract_info.contract_type);\n    const is_ended = isEnded(contract_info);\n    const box_class = classNames('info-box', {\n        'ended': is_ended,\n    });\n\n    let Contents = is_ended ? InfoBoxExpired : InfoBoxGeneral;\n    if (is_digit && is_trade_page) { // we don't display digit info in Statement/Portfolio because of API shortages\n        Contents = InfoBoxDigit;\n    }\n\n    return (\n        // TODO: Resolve issue with undefined contract_info showing upon unmounting transition\n        // <CSSTransition\n        //     in={is_contract_mode}\n        //     timeout={400}\n        //     classNames='info-box-container'\n        //     unmountOnExit\n        // >\n        <div className='info-box-container'>\n            { contract_info.contract_type &&\n                <div className={box_class}>\n                    <Contents\n                        contract_info={contract_info}\n                        digits_info={digits_info}\n                        is_ended={is_ended}\n                        sell_info={sell_info}\n                    />\n                </div>\n            }\n            <ContractError\n                message={sell_info.error_message}\n                onClickClose={removeError}\n            />\n        </div>\n        // </CSSTransition>\n    );\n};\n\nInfoBox.propTypes = {\n    contract_info: PropTypes.object,\n    digits_info  : PropTypes.object,\n    // is_contract_mode: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    removeError  : PropTypes.func,\n    sell_info    : PropTypes.object,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        contract_info: modules.contract.contract_info,\n        digits_info  : modules.contract.digits_info,\n        removeError  : modules.contract.removeSellError,\n        sell_info    : modules.contract.sell_info,\n        // is_contract_mode: modules.smart_chart.is_contract_mode,\n    })\n)(InfoBox);\n","import React                      from 'react';\nimport PropTypes                  from 'prop-types';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { IconTradeType }          from 'Assets/Trading/Types';\n\nconst ContractTypeCell = ({ type }) => (\n    <div className='contract-type'>\n        <div className='type-wrapper'>\n            <IconTradeType type={type.toLowerCase()} className='type' />\n        </div>\n        <span>\n            {getContractTypeDisplay()[type] || ''}\n        </span>\n    </div>\n);\n\nContractTypeCell.propTypes = {\n    type: PropTypes.string,\n};\n\nexport default ContractTypeCell;\n","import React             from 'react';\nimport { localize }      from '_common/localize';\nimport { IconPortfolio } from 'Assets/Header/NavBar';\n\nconst EmptyPortfolioMessage = () => (\n    // TODO: combine with statement component, once design is final\n    <div className='portfolio-empty'>\n        <IconPortfolio className='portfolio-empty__icon' />\n        <span className='portfolio-empty__text'>{localize('No open positions.')}</span>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\n\nconst MarkerLine = ({\n    label,\n    line_style,\n}) => (\n    <div className={line_style}>\n        <div>{label}</div>\n    </div>\n);\n\nMarkerLine.propTypes = {\n    label     : PropTypes.string,\n    line_style: PropTypes.string,\n};\nexport default observer(MarkerLine);\n","import classNames   from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { addComma } from '_common/base/currency_base';\n\nconst MarkerSpot = ({\n    align,\n    icon,\n    spot_value,\n    status,\n}) => (\n    <div className={classNames('chart-spot', align, status)}>\n        <div className='content'>\n            {icon}\n            {addComma(spot_value)}\n        </div>\n        <div className='arrow' />\n        <div className='spot' />\n    </div>\n);\n\nMarkerSpot.propTypes = {\n    align     : PropTypes.oneOf(['left', 'right']),\n    icon      : PropTypes.object,\n    spot_value: PropTypes.string,\n    status    : PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpot);\n","import classNames    from 'classnames';\nimport PropTypes     from 'prop-types';\nimport React         from 'react';\nimport { IconClose } from 'Assets/Common';\n\nconst FullScreenDialog = (props) => {\n    const { title, visible, children } = props;\n\n    const checkVisibility = () => {\n        if (props.visible) {\n            document.body.classList.add('no-scroll');\n            document.getElementById('binary_app').classList.add('no-scroll');\n        } else {\n            document.body.classList.remove('no-scroll');\n            document.getElementById('binary_app').classList.remove('no-scroll');\n        }\n    };\n\n    const scrollToElement = (parent, el) => {\n        const viewport_offset = el.getBoundingClientRect();\n        const hidden = viewport_offset.top + el.clientHeight + 20 > window.innerHeight;\n        if (hidden) {\n            const new_el_top = (window.innerHeight - el.clientHeight) / 2;\n            parent.scrollTop += viewport_offset.top - new_el_top;\n        }\n    };\n\n    // sometimes input is covered by virtual keyboard on mobile chrome, uc browser\n    const handleClick = (e) => {\n        if (e.target.tagName === 'INPUT' && e.target.type === 'number') {\n            const scrollToTarget = scrollToElement(e.currentTarget, e.target);\n            window.addEventListener('resize', scrollToTarget, false);\n\n            // remove listener, resize is not fired on iOS safari\n            window.setTimeout(() => {\n                window.removeEventListener('resize', scrollToTarget, false);\n            }, 2000);\n        }\n    };\n\n    checkVisibility();\n\n    return (\n        <div\n            className={classNames('fullscreen-dialog', {\n                'fullscreen-dialog--open': visible,\n            })}\n            onClick={handleClick}\n        >\n            <div className='fullscreen-dialog__header'>\n                <h2 className='fullscreen-dialog__title'>\n                    {title}\n                </h2>\n                <div\n                    className='icons btn-close fullscreen-dialog__close-btn'\n                    onClick={props.onClose}\n                >\n                    <IconClose className='ic-close' />\n                </div>\n            </div>\n            <div className='fullscreen-dialog__header-shadow-cover' />\n            <div className='fullscreen-dialog__header-shadow' />\n            <div className='fullscreen-dialog__content'>\n                <div className='contracts-modal-list'>\n                    {children}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nFullScreenDialog.propTypes = {\n    children: PropTypes.any,\n    onClose : PropTypes.func,\n    title   : PropTypes.string,\n    visible : PropTypes.bool,\n};\n\nexport default FullScreenDialog;\n","import React            from 'react';\nimport FullScreenDialog from './full_screen_dialog.jsx';\nimport TradeParams      from '../../Containers/trade_params.jsx';\n\nclass MobileWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.handleWidgetClick = this.handleWidgetClick.bind(this);\n    }\n\n    handleWidgetClick() {\n        this.setState({\n            open: true,\n        });\n    }\n\n    handleDialogClose() {\n        this.setState({\n            open: false,\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className='mobile-widget' onClick={this.handleWidgetClick}>\n                    <TradeParams is_minimized />\n                </div>\n\n                <FullScreenDialog\n                    title='Set parameters'\n                    visible={this.state.open}\n                    onClose={this.handleDialogClose}\n                >\n                    <TradeParams is_nativepicker />\n                </FullScreenDialog>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default MobileWidget;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport FullScreenDialog  from '../../Elements/full_screen_dialog.jsx';\n\nconst ContractTypeDialog = ({\n    children,\n    is_mobile,\n    open,\n    onClose,\n}) => (\n    is_mobile ?\n        <React.Fragment>\n            <span className='select-arrow' />\n            <FullScreenDialog\n                title='Select Trading Type'\n                visible={open}\n                onClose={onClose}\n            >\n                {children}\n            </FullScreenDialog>\n        </React.Fragment>\n        :\n        <CSSTransition\n            in={open}\n            timeout={100}\n            classNames='contracts-popup-list'\n            unmountOnExit\n        >\n            <div className='contracts-popup-list'>\n                <div className='list-container'>\n                    {children}\n                </div>\n            </div>\n        </CSSTransition>\n);\n\nContractTypeDialog.propTypes = {\n    children : PropTypes.element,\n    is_mobile: PropTypes.bool,\n    onClose  : PropTypes.func,\n    open     : PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { IconTradeCategory }          from 'Assets/Trading/Categories';\n\nconst ContractTypeItem = ({\n    contracts,\n    name,\n    value,\n    handleSelect,\n}) => (\n    contracts.map((contract, idx) => (\n        <div\n            key={idx}\n            className={`list-item ${value === contract.value ? 'selected' : ''}`}\n            name={name}\n            value={contract.value}\n            onClick={() => handleSelect(contract)}\n        >\n            <IconTradeCategory category={contract.value} />\n            <span className='contract-title'>\n                {contract.text}\n            </span>\n        </div>\n    ))\n);\n\nContractTypeItem.propTypes = {\n    contracts   : MobxPropTypes.arrayOrObservableArray,\n    handleSelect: PropTypes.func,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeItem;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport ContractTypeItem               from './contract_type_item.jsx';\n\nconst ContractTypeList = ({\n    handleSelect,\n    list,\n    name,\n    value,\n}) =>\n    (\n        Object.keys(list).map(key => (\n            <React.Fragment key={key}>\n                <div className='list-group'>\n                    <div className='list-label'><span>{key}</span></div>\n                    <div className='list-items'>\n                        <ContractTypeItem\n                            contracts={list[key]}\n                            name={name}\n                            value={value}\n                            handleSelect={handleSelect}\n                        />\n                    </div>\n                </div>\n            </React.Fragment>\n        ))\n    );\n\nContractTypeList.propTypes = {\n    handleSelect: PropTypes.func,\n    list        : MobxPropTypes.objectOrObservableObject,\n    name        : PropTypes.string,\n    value       : PropTypes.string,\n};\n\nexport default ContractTypeList;\n","import PropTypes             from 'prop-types';\nimport React                 from 'react';\nimport { IconArrow }         from 'Assets/Common';\nimport { IconTradeCategory } from 'Assets/Trading/Categories';\nimport ContractTypeDialog    from './contract_type_dialog.jsx';\nimport ContractTypeList      from './contract_type_list.jsx';\n\nclass ContractTypeWidget extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_dialog_open: false,\n        };\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    handleSelect = (item) => {\n        if (item.value !== this.props.value) {\n            this.props.onChange({ target: { name: this.props.name, value: item.value } });\n        }\n        this.handleVisibility();\n    };\n\n    setWrapperRef = (node) => {\n        this.wrapper_ref = node;\n    };\n\n    handleClickOutside = (event) => {\n        if (this.wrapper_ref && !this.wrapper_ref.contains(event.target) && this.state.is_dialog_open) {\n            this.setState({ is_dialog_open: false });\n        }\n    };\n\n    handleVisibility = () => {\n        this.setState({ is_dialog_open: !this.state.is_dialog_open });\n    };\n\n    getDisplayText = () => {\n        const { list, value } = this.props;\n        const findInArray = (arr_list) => (arr_list.find(item => item.value === value) || {}).text;\n        let text = '';\n        if (list) {\n            Object.keys(list).some(key => {\n                text = findInArray(list[key]);\n                return text;\n            });\n        }\n        return text;\n    };\n\n    getStyles = () => {\n        const container_classes = ['contracts-popup-container'];\n        if (this.props.is_mobile) {\n            container_classes.push('mobile-only');\n        } else {\n            container_classes.push('desktop-only');\n        }\n        if (this.state.is_dialog_open) container_classes.push('show');\n        return container_classes;\n    }\n\n    render() {\n        const container_classes = this.getStyles();\n\n        return (\n            <div\n                ref={this.setWrapperRef}\n                className={container_classes.join(' ')}\n                tabIndex='0'\n            >\n                <div\n                    className={`contracts-popup-display ${this.state.is_dialog_open ? 'clicked' : ''}`}\n                    onClick={this.handleVisibility}\n                >\n                    <IconTradeCategory category={this.props.value} />\n                    <span name={this.props.name} value={this.props.value}>\n                        {this.getDisplayText()}\n                    </span>\n                </div>\n\n                <IconArrow className='select-arrow' />\n\n                <ContractTypeDialog\n                    is_mobile={this.props.is_mobile}\n                    open={this.state.is_dialog_open}\n                    onClose={this.handleVisibility}\n                >\n                    <ContractTypeList\n                        list={this.props.list}\n                        name={this.props.name}\n                        value={this.props.value}\n                        handleSelect={this.handleSelect}\n                    />\n                </ContractTypeDialog>\n            </div>\n        );\n    }\n}\n\nContractTypeWidget.propTypes = {\n    is_mobile: PropTypes.bool,\n    list     : PropTypes.object,\n    name     : PropTypes.string,\n    onChange : PropTypes.func,\n    value    : PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import React               from 'react';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorBalance = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('You have an insufficient amount of balance.')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('Deposit')}\n        />\n    </div>\n);\n\nexport { ErrorBalance };\n","import PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst ErrorGeneral = ({ message }) => (\n    <div className='purchase-error-wrapper'>\n        <span className='info-text'>{message}</span>\n    </div>\n);\n\nErrorGeneral.propTypes = {\n    message: PropTypes.string,\n};\n\nexport { ErrorGeneral };\n","import React               from 'react';\nimport { redirectToLogin } from '_common/base/login';\nimport { localize }        from '_common/localize';\nimport Button              from 'App/Components/Form/button.jsx';\n\nconst ErrorLogin = () => (\n    <div className='purchase-login-wrapper'>\n        <span className='info-text'>{localize('Please log in to purchase the contract')}</span>\n        <Button\n            className='secondary orange'\n            has_effect\n            text={localize('log in')}\n            onClick={redirectToLogin}\n        />\n        <p>{localize('Don\\'t have a [_1] account?', ['Binary.com'])}</p>\n        <a href='javascript:;'><span className='info-text'>{localize('Create one now')}</span></a>\n    </div>\n);\n\nexport { ErrorLogin };\n","export * from './error_balance.jsx';\nexport * from './error_general.jsx';\nexport * from './error_login.jsx';\n","export default from './message_box.jsx';\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { getPropertyValue } from '_common/utility';\nimport { IconClose }        from 'Assets/Common/icon_close.jsx';\nimport PurchaseResult       from './purchase_result.jsx';\nimport {\n    ErrorBalance,\n    ErrorGeneral,\n    ErrorLogin }            from './Templates';\n\nconst MessageBox = ({ currency, purchase_info, onClick }) => {\n    const has_error = !!purchase_info.error;\n    let ErrorComponent;\n    if (has_error) {\n        const error_code = getPropertyValue(purchase_info, ['error', 'code']);\n        switch (error_code) {\n            case 'AuthorizationRequired':\n                ErrorComponent = <ErrorLogin />;\n                break;\n            case 'InsufficientBalance':\n                ErrorComponent = <ErrorBalance />;\n                break;\n            default:\n                ErrorComponent = <ErrorGeneral message={purchase_info.error.message} />;\n                break;\n        }\n    }\n\n    return (\n        <div className='purchase-error'>\n            <div className='close-btn-container' onClick={onClick}>\n                <IconClose className='ic-close' />\n            </div>\n            {has_error ?\n                ErrorComponent\n                :\n                <PurchaseResult\n                    purchase_info={purchase_info.buy}\n                    currency={currency}\n                />\n            }\n        </div>\n    );\n};\n\nMessageBox.propTypes = {\n    currency     : PropTypes.string,\n    onClick      : PropTypes.func,\n    purchase_info: PropTypes.object,\n};\n\nexport default MessageBox;\n","import classNames      from 'classnames';\nimport PropTypes       from 'prop-types';\nimport React           from 'react';\nimport { localize }    from '_common/localize';\nimport { toGMTFormat } from 'Utils/Date';\n\nconst PurchaseResult = ({ currency, purchase_info }) => (\n    <div className='purchase-result-wrapper'>\n        <div>\n            <strong>{localize('Purchase Info')}</strong>\n        </div>\n        <div>\n            <span className='label'>{localize('Buy Price')}:</span>\n            <span className='buy-price'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.buy_price}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Payout')}:</span>\n            <span className='payout'>\n                <i className={classNames('symbols', currency.toLowerCase())} />\n                {purchase_info.payout}\n            </span>\n        </div>\n        <div>\n            <span className='label'>{localize('Start')}:</span> {toGMTFormat(purchase_info.start_time * 1000)}\n        </div>\n        <div>\n            <span className='label'>{localize('Contract ID')}:</span> {purchase_info.contract_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Transaction ID')}:</span> {purchase_info.transaction_id}\n        </div>\n        <div>\n            <span className='label'>{localize('Description')}:</span> {purchase_info.longcode}\n        </div>\n    </div>\n);\n\nPurchaseResult.propTypes = {\n    currency     : PropTypes.string,\n    purchase_info: PropTypes.object,\n};\n\nexport default PurchaseResult;\n","export default from './purchase_lock.jsx';\n","import React           from 'react';\nimport PropTypes       from 'prop-types';\nimport { localize }    from '_common/localize';\nimport Button          from 'App/Components/Form/button.jsx';\nimport { IconLock }    from 'Assets/Trading/icon_lock.jsx';\n\nconst PurchaseLock = ({ onClick }) => (\n    <div className='purchase-lock-container'>\n        <div className='lock-container'>\n            <IconLock className='ic-lock' />\n        </div>\n        <h4>{localize('Purchase Locked')}</h4>\n        <Button\n            className='flat secondary orange'\n            has_effect\n            onClick={onClick}\n            text={localize('Unlock')}\n        />\n        <span className='lock-message'>\n            {localize('You can lock/unlock the purchase button from the Settings menu')}\n        </span>\n    </div>\n);\n\nPurchaseLock.propTypes = {\n    onClick: PropTypes.func,\n};\n\nexport default PurchaseLock;\n","import PropTypes         from 'prop-types';\nimport React             from 'react';\nimport { localize }      from '_common/localize';\nimport Money             from 'App/Components/Elements/money.jsx';\nimport Tooltip           from 'App/Components/Elements/tooltip.jsx';\nimport { IconTradeType } from 'Assets/Trading/Types';\n\nconst ContractInfo = ({\n    barrier_count,\n    contract_title,\n    contract_type,\n    currency,\n    proposal_info,\n}) => {\n    const icon_type = `${contract_type}${/^(call|put)$/i.test(contract_type) && barrier_count > 0 ? '_barrier' : ''}`.toLowerCase();\n\n    return (\n        <div className='box'>\n            <div className='left-column'>\n                <div className='type-wrapper'>\n                    <IconTradeType type={icon_type} className='type' />\n                </div>\n                <h4 className='trade-type'>{contract_title}</h4>\n            </div>\n            {(proposal_info.has_error || !proposal_info.id) ?\n                <div className={proposal_info.has_error ? 'error-info-wrapper' : ''}>\n                    <span>{proposal_info.message}</span>\n                </div>\n                :\n                <div className='purchase-info-wrapper'>\n                    <span className='purchase-tooltip'>\n                        <Tooltip alignment='left' icon='info' message={proposal_info.message} />\n                    </span>\n                    <div className='info-wrapper'>\n                        <div>{localize('Stake')}:</div>\n                        <div><Money amount={proposal_info.stake} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Payout')}:</div>\n                        <div><Money amount={proposal_info.payout} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Net Profit')}:</div>\n                        <div><Money amount={proposal_info.profit} currency={currency} /></div>\n                    </div>\n                    <div className='info-wrapper'>\n                        <div>{localize('Return')}:</div>\n                        <div>{proposal_info.returns}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    barrier_count : PropTypes.number,\n    contract_title: PropTypes.string,\n    contract_type : PropTypes.string,\n    currency      : PropTypes.string,\n    proposal_info : PropTypes.object,\n};\n\nexport default ContractInfo;\n","import classNames                from 'classnames';\nimport {\n    observer,\n    PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                 from 'prop-types';\nimport React                     from 'react';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport { localize }              from '_common/localize';\nimport Dropdown                  from 'App/Components/Form/DropDown';\nimport Fieldset                  from 'App/Components/Form/fieldset.jsx';\nimport InputField                from 'App/Components/Form/input_field.jsx';\n\nconst Amount = ({\n    amount,\n    basis,\n    basis_list,\n    currencies_list,\n    currency,\n    is_minimized,\n    is_nativepicker,\n    is_single_currency,\n    onChange,\n    validation_errors,\n}) => {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized amount'>\n                <span className='icon invest-amount' />\n                <span className='fieldset-minimized__basis'>{(basis_list.find(o => o.value === basis) || {}).text}</span>\n                &nbsp;\n                <i><span className={`symbols ${(currency || '').toLowerCase()}`} /></i>\n                {addComma(amount, 2)}\n            </div>\n        );\n    }\n    const amount_container_class = classNames('amount-container', {\n        'three-columns': !is_single_currency,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Invest Amount')}\n            icon='invest-amount'\n        >\n            <div className={amount_container_class}>\n                <Dropdown\n                    list={basis_list}\n                    value={basis}\n                    name='basis'\n                    onChange={onChange}\n                    is_nativepicker={is_nativepicker}\n                />\n                {!is_single_currency &&\n                    <Dropdown\n                        list={currencies_list}\n                        value={currency}\n                        name='currency'\n                        onChange={onChange}\n                        is_nativepicker={is_nativepicker}\n                    />\n                }\n                <InputField\n                    error_messages = {validation_errors.amount}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    is_float\n                    is_nativepicker={is_nativepicker}\n                    max_length={10}\n                    name='amount'\n                    onChange={onChange}\n                    prefix={is_single_currency ? currency : null}\n                    type='number'\n                    value={amount}\n                />\n            </div>\n        </Fieldset>\n    );\n};\n\nAmount.propTypes = {\n    amount: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    basis             : PropTypes.string,\n    basis_list        : MobxPropTypes.arrayOrObservableArray,\n    currencies_list   : MobxPropTypes.observableObject,\n    currency          : PropTypes.string,\n    is_minimized      : PropTypes.bool,\n    is_nativepicker   : PropTypes.bool,\n    is_single_currency: PropTypes.bool,\n    onChange          : PropTypes.func,\n    validation_errors : PropTypes.object,\n};\n\nexport default observer(Amount);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\nimport InputField   from 'App/Components/Form/input_field.jsx';\n\nconst Barrier = ({\n    barrier_1,\n    barrier_2,\n    barrier_count,\n    is_minimized,\n    onChange,\n    validation_errors,\n}) =>  {\n    if (is_minimized) {\n        if (barrier_count !== 2) {\n            return (\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n            );\n        }\n        return (\n            <React.Fragment>\n                <div className='fieldset-minimized barrier1'>\n                    <span className='icon barriers' />\n                    {barrier_1}\n                </div>\n                <div className='fieldset-minimized barrier2'>\n                    <span className='icon barriers' />\n                    {barrier_2}\n                </div>\n            </React.Fragment>\n        );\n    }\n    return (\n        <Fieldset\n            header={barrier_count > 1 ? localize('Barriers') : localize('Barrier')}\n            icon='barriers'\n        >\n            <InputField\n                type='number'\n                name='barrier_1'\n                value={barrier_1}\n                onChange={onChange}\n                error_messages = {validation_errors.barrier_1 || []}\n                is_float\n                is_signed\n            />\n\n            {barrier_count === 2 &&\n                <InputField\n                    type='number'\n                    name='barrier_2'\n                    value={barrier_2}\n                    onChange={onChange}\n                    error_messages = {validation_errors.barrier_2}\n                    is_float\n                    is_signed\n                />\n            }\n        </Fieldset>\n    );\n};\n\nBarrier.propTypes = {\n    barrier_1        : PropTypes.string,\n    barrier_2        : PropTypes.string,\n    barrier_count    : PropTypes.number,\n    is_minimized     : PropTypes.bool,\n    onChange         : PropTypes.func,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Barrier);\n","import classNames               from 'classnames';\nimport {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport moment                   from 'moment';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Datepicker               from 'App/Components/Form/DatePicker';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport InputField               from 'App/Components/Form/input_field.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\nimport { convertDurationUnit }  from 'Stores/Modules/Trading/Helpers/duration';\n\n/* TODO:\n      1. disable days other than today and tomorrow if start date is forward starting\n*/\n\nconst expiry_list = [\n    { text: localize('Duration'), value: 'duration' },\n];\n\nlet now_date,\n    min_date_duration,\n    max_date_duration,\n    min_date_expiry,\n    min_day,\n    max_day,\n    start_date_time;\n\nconst Duration = ({\n    contract_expiry_type,\n    duration,\n    duration_unit,\n    duration_units_list,\n    duration_min_max,\n    expiry_date,\n    expiry_time,\n    expiry_type,\n    onChange,\n    is_minimized,\n    is_nativepicker,\n    server_time,\n    sessions,\n    start_date,\n    start_time,\n    validation_errors,\n}) => {\n    if (duration_min_max[contract_expiry_type]) {\n        const moment_now  = moment(server_time);\n        const new_min_day = convertDurationUnit(duration_min_max[contract_expiry_type].min, 's', 'd');\n        const new_max_day = convertDurationUnit(duration_min_max[contract_expiry_type].max, 's', 'd');\n        if (!now_date || moment_now.date() !== now_date.date() || (duration_unit === 'd' && (min_day !== new_min_day || max_day !== new_max_day))) {\n            if (duration_unit === 'd') {\n                min_day = new_min_day;\n                max_day = new_max_day;\n            }\n\n            const moment_today = moment_now.clone().startOf('day');\n\n            now_date          = moment_now.clone();\n            min_date_duration = moment_today.clone().add(min_day || 1, 'd');\n            max_date_duration = moment_today.clone().add(max_day || 365, 'd');\n            min_date_expiry   = moment_today.clone();\n        }\n    }\n\n    const moment_expiry = moment.utc(expiry_date);\n    const is_same_day   = moment_expiry.isSame(moment(start_date * 1000 || undefined).utc(), 'day');\n    if (is_same_day) {\n        const date_time = moment.utc(start_date * 1000 || undefined);\n        if (start_date) {\n            const [ hour, minute ] = start_time.split(':');\n            date_time.hour(hour).minute(minute).second(0).add(5, 'minutes');\n        }\n        // only update start time every five minutes, since time picker shows five minute durations\n        const moment_start_date_time = moment.unix(start_date_time);\n        if (!start_date_time || moment_start_date_time.isAfter(date_time) || moment_start_date_time.clone().add(5, 'minutes').isBefore(date_time) ||\n            (moment_start_date_time.minutes() !== date_time.minutes() && date_time.minutes() % 5 === 0)) {\n            start_date_time = date_time.unix();\n        }\n    }\n    if (is_minimized) {\n        const duration_unit_text = (duration_units_list.find(o => o.value === duration_unit) || {}).text;\n        return (\n            <div className='fieldset-minimized duration'>\n                <span className='icon trade-duration' />\n                {expiry_type === 'duration'\n                    ? `${duration} ${duration_unit_text}`\n                    : `${moment_expiry.format('ddd - DD MMM, YYYY')}\\n${expiry_time}`\n                }\n            </div>\n        );\n    }\n    const datepicker_footer = min_day > 1 ?\n        localize('The minimum duration is [_1] days', [min_day]) :\n        localize('The minimum duration is [_1] day',  [min_day]);\n\n    const has_end_time = expiry_list.find(expiry => expiry.value === 'endtime');\n    if (duration_units_list.length === 1 && duration_unit === 't') {\n        if (has_end_time) {\n            expiry_list.pop(); // remove end time for contracts with only tick duration\n        }\n    } else if (!has_end_time) {\n        expiry_list.push({ text: localize('End Time'), value: 'endtime' });\n    }\n\n    const endtime_container_class = classNames('endtime-container', {\n        'has-time': is_same_day,\n    });\n\n    return (\n        <Fieldset\n            header={localize('Trade Duration')}\n            icon='trade-duration'\n        >\n            <Dropdown\n                list={expiry_list}\n                value={expiry_type}\n                name='expiry_type'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n\n            {expiry_type === 'duration' ?\n                <React.Fragment>\n                    <div className='duration-container'>\n                        {duration_unit === 'd' && !is_nativepicker ?\n                            <Datepicker\n                                name='duration'\n                                min_date={min_date_duration}\n                                max_date={max_date_duration}\n                                mode='duration'\n                                onChange={onChange}\n                                value={duration || min_day}\n                                is_read_only\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                                footer={datepicker_footer}\n                            /> :\n                            <InputField\n                                type='number'\n                                name='duration'\n                                value={duration}\n                                onChange={onChange}\n                                is_nativepicker={is_nativepicker}\n                                error_messages = {validation_errors.duration || []}\n                            />\n                        }\n                        <Dropdown\n                            list={duration_units_list}\n                            value={duration_unit}\n                            name='duration_unit'\n                            onChange={onChange}\n                            is_nativepicker={is_nativepicker}\n                        />\n                    </div>\n                </React.Fragment> :\n                <React.Fragment>\n                    <div className={endtime_container_class}>\n                        <Datepicker\n                            name='expiry_date'\n                            has_today_btn\n                            min_date={min_date_expiry}\n                            max_date={max_date_duration}\n                            start_date={start_date}\n                            onChange={onChange}\n                            value={expiry_date}\n                            is_read_only\n                            is_clearable={false}\n                            is_nativepicker={is_nativepicker}\n                        />\n                        {is_same_day &&\n                            <TimePicker\n                                onChange={onChange}\n                                is_align_right\n                                name='expiry_time'\n                                value={expiry_time}\n                                placeholder='12:00'\n                                start_date={start_date_time}\n                                sessions={sessions}\n                                is_clearable={false}\n                                is_nativepicker={is_nativepicker}\n                            />\n                        }\n                    </div>\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\n// ToDo: Refactor Duration.jsx and date_picker.jsx\nDuration.propTypes = {\n    contract_expiry_type: PropTypes.string,\n    duration            : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    duration_min_max   : PropTypes.object,\n    duration_unit      : PropTypes.string,\n    duration_units_list: MobxPropTypes.arrayOrObservableArray,\n    expiry_date        : PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n    ]),\n    expiry_time    : PropTypes.string,\n    expiry_type    : PropTypes.string,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    onChange       : PropTypes.func,\n    server_time    : PropTypes.object,\n    sessions       : MobxPropTypes.arrayOrObservableArray,\n    start_date     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    start_time       : PropTypes.string,\n    validation_errors: PropTypes.object,\n};\n\nexport default observer(Duration);\n","import { observer } from 'mobx-react';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport { localize } from '_common/localize';\nimport Dropdown     from 'App/Components/Form/DropDown';\nimport Fieldset     from 'App/Components/Form/fieldset.jsx';\n\nconst last_digit_numbers = [...Array(10).keys()].map(number => ({\n    text : number,\n    value: number,\n}));\n\nconst LastDigit = ({\n    is_minimized,\n    is_nativepicker,\n    last_digit,\n    onChange,\n}) =>  {\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized'>\n                <span className='icon digits' />\n                {`${localize('Last Digit')}: ${last_digit}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Last Digit Prediction')}\n            icon='digits'\n        >\n            <Dropdown\n                list={last_digit_numbers}\n                value={+last_digit}\n                name='last_digit'\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n        </Fieldset>\n    );\n};\n\nLastDigit.propTypes = {\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    last_digit     : PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.string,\n    ]),\n    onChange: PropTypes.func,\n};\n\nexport default observer(LastDigit);\n","import {\n    PropTypes as MobxPropTypes,\n    observer }                  from 'mobx-react';\nimport PropTypes                from 'prop-types';\nimport React                    from 'react';\nimport { localize }             from '_common/localize';\nimport Dropdown                 from 'App/Components/Form/DropDown';\nimport Fieldset                 from 'App/Components/Form/fieldset.jsx';\nimport TimePicker               from 'App/Components/Form/time_picker.jsx';\n\n/* TODO:\n    1. update sessions list when the selected one doesn’t have any enabled time\n*/\n\nconst StartDate = ({\n    is_minimized,\n    is_nativepicker,\n    onChange,\n    sessions,\n    start_date,\n    start_dates_list,\n    start_time,\n}) => {\n    // Number(0) refers to 'now'\n    const is_today = start_date === Number(0);\n    let current_date_config = '';\n    if (!is_today) {\n        current_date_config = start_dates_list.find(o => o.value === +start_date) || {};\n    }\n    if (is_minimized) {\n        return (\n            <div className='fieldset-minimized start-date'>\n                <span className='icon start-time' />\n                {is_today ? localize('Now') : `${current_date_config.text}\\n${start_time}`}\n            </div>\n        );\n    }\n    return (\n        <Fieldset\n            header={localize('Start time')}\n            icon='start-time'\n        >\n            <Dropdown\n                name='start_date'\n                value={start_date}\n                list={start_dates_list}\n                onChange={onChange}\n                is_nativepicker={is_nativepicker}\n            />\n            {!is_today &&\n                <React.Fragment>\n                    <TimePicker\n                        onChange={onChange}\n                        is_align_right\n                        name='start_time'\n                        value={start_time}\n                        placeholder='12:00'\n                        start_date={start_date}\n                        sessions={sessions}\n                        is_clearable={false}\n                        is_nativepicker={is_nativepicker}\n                    />\n                </React.Fragment>\n            }\n        </Fieldset>\n    );\n};\n\nStartDate.propTypes = {\n    is_minimized    : PropTypes.bool,\n    is_nativepicker : PropTypes.bool,\n    onChange        : PropTypes.func,\n    sessions        : MobxPropTypes.arrayOrObservableArray,\n    start_date      : PropTypes.number,\n    start_dates_list: MobxPropTypes.arrayOrObservableArray,\n    start_time      : PropTypes.string,\n};\n\nexport default observer(StartDate);\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport ScreenLarge  from './screen_large.jsx';\nimport ScreenSmall  from './screen_small.jsx';\n\nconst FormLayout = ({\n    is_contract_visible,\n    is_mobile,\n    is_trade_enabled,\n}) => (\n    is_mobile ?\n        <ScreenSmall\n            is_trade_enabled={is_trade_enabled}\n        />\n        :\n        <ScreenLarge\n            is_contract_visible={is_contract_visible}\n            is_trade_enabled={is_trade_enabled}\n        />\n);\n\nFormLayout.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_mobile          : PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default FormLayout;\n","import classNames   from 'classnames';\nimport PropTypes    from 'prop-types';\nimport React        from 'react';\nimport UILoader     from 'App/Components/Elements/ui_loader.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\nimport TradeParams  from '../../Containers/trade_params.jsx';\n\nconst ScreenLarge = ({ is_contract_visible, is_trade_enabled }) => (\n    <div className={classNames('sidebar-items', {\n        'sidebar-items__slideout': is_contract_visible,\n    })}\n    >\n        {!is_trade_enabled && !is_contract_visible ?\n            <UILoader />\n            :\n            <React.Fragment>\n                <fieldset className='trade-types'>\n                    <ContractType />\n                </fieldset>\n                <TradeParams />\n                <div className='purchase-wrapper'>\n                    <Purchase />\n                </div>\n            </React.Fragment>\n        }\n    </div>\n);\n\nScreenLarge.propTypes = {\n    is_contract_visible: PropTypes.bool,\n    is_trade_enabled   : PropTypes.bool,\n};\n\nexport default ScreenLarge;\n","import PropTypes    from 'prop-types';\nimport React        from 'react';\nimport MobileWidget from '../Elements/mobile_widget.jsx';\nimport ContractType from '../../Containers/contract_type.jsx';\nimport Purchase     from '../../Containers/purchase.jsx';\n\nconst ScreenSmall = (/* { is_trade_enabled } */) => (\n    <React.Fragment>\n        <ContractType />\n        <div className='mobile-only'>\n            <MobileWidget />\n        </div>\n        <div className='purchase-wrapper'>\n            <Purchase />\n        </div>\n    </React.Fragment>\n);\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n","import PropTypes          from 'prop-types';\nimport React              from 'react';\nimport { connect }        from 'Stores/connect';\nimport ContractTypeWidget from '../Components/Form/ContractType/contract_type_widget.jsx';\n\nconst Contract = ({\n    contract_type,\n    contract_types_list,\n    onChange,\n    is_mobile,\n}) => (\n    <ContractTypeWidget\n        name='contract_type'\n        list={contract_types_list}\n        value={contract_type}\n        onChange={onChange}\n        is_mobile={is_mobile}\n    />\n);\n\nContract.propTypes = {\n    contract_type      : PropTypes.string,\n    contract_types_list: PropTypes.object,\n    is_mobile          : PropTypes.bool,\n    onChange           : PropTypes.func,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        contract_type      : modules.trade.contract_type,\n        contract_types_list: modules.trade.contract_types_list,\n        onChange           : modules.trade.onChange,\n        is_mobile          : ui.is_mobile,\n    })\n)(Contract);\n","import PropTypes                  from 'prop-types';\nimport React                      from 'react';\nimport { localize }               from '_common/localize';\nimport { isEmptyObject }          from '_common/utility';\nimport { PopConfirm }             from 'App/Components/Elements/PopConfirm';\nimport UILoader                   from 'App/Components/Elements/ui_loader.jsx';\nimport Button                     from 'App/Components/Form/button.jsx';\nimport Fieldset                   from 'App/Components/Form/fieldset.jsx';\nimport { connect }                from 'Stores/connect';\nimport ContractInfo               from '../Components/Form/Purchase/contract_info.jsx';\nimport MessageBox                 from '../Components/Form/Purchase/MessageBox';\nimport PurchaseLock               from '../Components/Form/Purchase/PurchaseLock';\n\nconst Purchase = ({\n    barrier_count,\n    currency,\n    is_client_allowed_to_visit,\n    is_purchase_confirm_on,\n    is_purchase_enabled,\n    is_purchase_locked,\n    is_trade_enabled,\n    onClickPurchase,\n    onHoverPurchase,\n    togglePurchaseLock,\n    resetPurchase,\n    proposal_info,\n    purchase_info,\n    trade_types,\n}) => (\n    Object.keys(trade_types).map((type, idx) => {\n        const info        = proposal_info[type] || {};\n        const is_disabled = !is_purchase_enabled || !is_trade_enabled || !info.id || !is_client_allowed_to_visit;\n\n        const purchase_button = (\n            <Button\n                is_disabled={is_disabled}\n                id={`purchase_${type}`}\n                className='primary green'\n                has_effect\n                text={localize('Purchase')}\n                onClick={() => { onClickPurchase(info.id, info.stake, type); }}\n                wrapperClassName='submit-section'\n            />\n        );\n\n        const is_purchase_error = (!isEmptyObject(purchase_info) && purchase_info.echo_req.buy === info.id);\n\n        return (\n            <Fieldset\n                className='purchase-option'\n                key={idx}\n                onMouseEnter={() => { onHoverPurchase(true, type); }}\n                onMouseLeave={() => { onHoverPurchase(false); }}\n            >\n                {(is_purchase_locked && idx === 0) &&\n                <PurchaseLock onClick={togglePurchaseLock} />\n                }\n                {(is_purchase_error) ?\n                    <MessageBox\n                        purchase_info={purchase_info}\n                        onClick={resetPurchase}\n                        currency={currency}\n                    />\n                    :\n                    <React.Fragment>\n                        {(!is_purchase_enabled && idx === 0) &&\n                        <UILoader />\n                        }\n                        <ContractInfo\n                            barrier_count={barrier_count}\n                            contract_title={trade_types[type]}\n                            contract_type={type}\n                            currency={currency}\n                            proposal_info={info}\n                        />\n                        {is_purchase_confirm_on ?\n                            <PopConfirm\n                                alignment='left'\n                                cancel_text={localize('Cancel')}\n                                confirm_text={localize('Purchase')}\n                                message={localize('Are you sure you want to purchase this contract?')}\n                            >\n                                {purchase_button}\n                            </PopConfirm>\n                            :\n                            purchase_button\n                        }\n                    </React.Fragment>\n                }\n            </Fieldset>\n        );\n    })\n);\n\nPurchase.propTypes = {\n    barrier_count             : PropTypes.number,\n    currency                  : PropTypes.string,\n    is_client_allowed_to_visit: PropTypes.bool,\n    is_purchase_confirm_on    : PropTypes.bool,\n    is_purchase_enabled       : PropTypes.bool,\n    is_purchase_locked        : PropTypes.bool,\n    is_trade_enabled          : PropTypes.bool,\n    onClickPurchase           : PropTypes.func,\n    onHoverPurchase           : PropTypes.func,\n    proposal_info             : PropTypes.object,\n    purchase_info             : PropTypes.object,\n    resetPurchase             : PropTypes.func,\n    togglePurchaseLock        : PropTypes.func,\n    trade_types               : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, modules, ui }) => ({\n        currency                  : client.currency,\n        is_client_allowed_to_visit: client.is_client_allowed_to_visit,\n        barrier_count             : modules.trade.barrier_count,\n        is_purchase_enabled       : modules.trade.is_purchase_enabled,\n        is_trade_enabled          : modules.trade.is_trade_enabled,\n        onClickPurchase           : modules.trade.onPurchase,\n        onHoverPurchase           : modules.trade.onHoverPurchase,\n        resetPurchase             : modules.trade.requestProposal,\n        proposal_info             : modules.trade.proposal_info,\n        purchase_info             : modules.trade.purchase_info,\n        trade_types               : modules.trade.trade_types,\n        is_purchase_confirm_on    : ui.is_purchase_confirm_on,\n        is_purchase_locked        : ui.is_purchase_lock_on,\n        togglePurchaseLock        : ui.togglePurchaseLock,\n    }),\n)(Purchase);\n","import { toJS }    from 'mobx';\nimport PropTypes   from 'prop-types';\nimport React       from 'react';\nimport { connect } from 'Stores/connect';\n\nclass Test extends React.Component {\n    state         = { is_visible: false };\n    setVisibility = this.stateVisibility.bind(this);\n    styles        = {\n        container: {\n            fontSize  : '10px',\n            lineHeight: '15px',\n            position  : 'absolute',\n            zIndex    : 1,\n            background: 'rgba(0, 0, 0, 0.8)',\n            color     : '#ccc',\n            padding   : '10px',\n            marginTop : '-10px',\n            display   : 'none',\n            overflowY : 'auto',\n            height    : '100%',\n        },\n        prop_name: {\n            color: 'yellowgreen',\n        },\n    };\n\n    componentDidMount = () => {\n        document.addEventListener('keyup', this.setVisibility, false);\n    };\n\n    componentWillUnmount = () => {\n        document.removeEventListener('keyup', this.setVisibility);\n    };\n\n    stateVisibility(e) {\n        if (e.ctrlKey && e.keyCode === 83) { // Ctrl + S\n            this.setState({ is_visible: !this.state.is_visible });\n        }\n    }\n\n    render() {\n        return (\n            <code id='state_info' style={Object.assign({}, this.styles.container, { display: this.state.is_visible ? 'block' : 'none' })}>\n                {this.props.entries.sort().map(([k, v]) => k !== 'root_store' && typeof v !== 'function' && <div key={k}><span style={this.styles.prop_name}>{k}:</span> {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}</div>)}\n            </code>\n        );\n    }\n}\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default connect(\n    ({ modules }) => ({\n        entries: Object.entries(modules.trade),\n    })\n)(Test);\n","import PropTypes            from 'prop-types';\nimport React                from 'react';\nimport { CSSTransition }    from 'react-transition-group';\nimport { getPropertyValue } from '_common/utility';\nimport UILoader             from 'App/Components/Elements/ui_loader.jsx';\nimport { connect }          from 'Stores/connect';\nimport Test                 from './test.jsx';\nimport FormLayout           from '../Components/Form/form_layout.jsx';\nimport ContractDetails      from '../../Contract/Containers/contract_details.jsx';\nimport InfoBox              from '../../Contract/Containers/info_box.jsx';\n\nconst SmartChart = React.lazy(() => import(/* webpackChunkName: \"smart_chart\" */'../../SmartChart'));\n\nclass Trade extends React.Component {\n    componentDidMount() {\n        this.props.onMount();\n    }\n\n    componentWillUnmount() {\n        this.props.onUnmount();\n    }\n\n    render() {\n        const contract_id = getPropertyValue(this.props.purchase_info, ['buy', 'contract_id']);\n        const form_wrapper_class = this.props.is_mobile ? 'mobile-wrapper' : 'sidebar-container desktop-only';\n\n        return (\n            <div id='trade_container' className='trade-container'>\n                <div className='chart-container notice-msg'>\n                    { this.props.symbol &&\n                        <React.Suspense fallback={<UILoader />} >\n                            <SmartChart\n                                chart_id={this.props.chart_id}\n                                InfoBox={<InfoBox is_trade_page />}\n                                onSymbolChange={this.props.onSymbolChange}\n                                symbol={this.props.symbol}\n                                chart_type={this.props.chart_type}\n                                granularity={this.props.granularity}\n                                updateChartType={this.props.updateChartType}\n                                updateGranularity={this.props.updateGranularity}\n                            />\n                        </React.Suspense>\n                    }\n                    <Test />\n                </div>\n                <div\n                    className={form_wrapper_class}\n                >\n                    <FormLayout\n                        is_mobile={this.props.is_mobile}\n                        is_contract_visible={!!contract_id}\n                        is_trade_enabled={this.props.is_trade_enabled}\n                    />\n                    <CSSTransition\n                        in={!!contract_id}\n                        timeout={400}\n                        classNames='contract-wrapper'\n                        unmountOnExit\n                    >\n                        <div className='contract-wrapper'>\n                            <ContractDetails\n                                contract_id={contract_id}\n                                onClickNewTrade={this.props.onClickNewTrade}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n            </div>\n        );\n    }\n}\n\nTrade.propTypes = {\n    chart_id        : PropTypes.number,\n    is_contract_mode: PropTypes.bool,\n    is_mobile       : PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n    onClickNewTrade : PropTypes.func,\n    onMount         : PropTypes.func,\n    onSymbolChange  : PropTypes.func,\n    onUnmount       : PropTypes.func,\n    purchase_info   : PropTypes.object,\n    symbol          : PropTypes.string,\n};\n\nexport default connect(\n    ({ modules, ui }) => ({\n        chart_type       : modules.smart_chart.chart_type,\n        granularity      : modules.smart_chart.granularity,\n        is_contract_mode : modules.smart_chart.is_contract_mode,\n        updateChartType  : modules.smart_chart.updateChartType,\n        updateGranularity: modules.smart_chart.updateGranularity,\n        chart_id         : modules.trade.chart_id,\n        is_trade_enabled : modules.trade.is_trade_enabled,\n        onClickNewTrade  : modules.trade.onClickNewTrade,\n        onMount          : modules.trade.onMount,\n        onSymbolChange   : modules.trade.onChange,\n        onUnmount        : modules.trade.onUnmount,\n        purchase_info    : modules.trade.purchase_info,\n        symbol           : modules.trade.symbol,\n        is_mobile        : ui.is_mobile,\n    })\n)(Trade);\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes                      from 'prop-types';\nimport React                          from 'react';\nimport { connect }                    from 'Stores/connect';\nimport { form_components }            from 'Stores/Modules/Trading/Constants/ui';\nimport { getComponentProperties }     from 'Utils/React/component';\n\nclass TradeParams extends React.Component {\n    isVisible(component_name) {\n        return this.props.form_components.includes(component_name);\n    }\n\n    renderCards() {\n        return form_components\n            .filter(({ name }) => this.isVisible(name))\n            .map(({ name, Component }) => (\n                <Component\n                    key={name}\n                    is_minimized={this.props.is_minimized}\n                    is_nativepicker={this.props.is_nativepicker}\n                    {...getComponentProperties(\n                        Component,\n                        this.props.trade_store,\n                        {\n                            server_time: this.props.server_time,\n                        },\n                        this.props.client_store,\n                    )}\n                />\n            ));\n    }\n\n    render() {\n        return this.renderCards();\n    }\n}\n\nTradeParams.propTypes = {\n    client_store   : PropTypes.object,\n    form_components: MobxPropTypes.arrayOrObservableArray,\n    is_minimized   : PropTypes.bool,\n    is_nativepicker: PropTypes.bool,\n    server_time    : PropTypes.object,\n    trade_store    : PropTypes.object,\n};\n\nexport default connect(\n    ({ client, common, modules }) => ({\n        client_store   : client,\n        server_time    : common.server_time,\n        form_components: modules.trade.form_components,\n        trade_store    : modules.trade,\n    })\n)(TradeParams);\n","export default from './Containers/trade.jsx';\n","export *                   from './logout';\nexport BinarySocketGeneral from './socket_general';\nexport WS                  from './ws_methods';\n","import Client            from '_common/base/client_base';\nimport SocketCache       from '_common/base/socket_cache';\nimport { removeCookies } from '_common/storage';\nimport WS                from './ws_methods';\nimport GTM               from '../Utils/gtm';\n\nexport const requestLogout = () => {\n    WS.logout().then(doLogout);\n};\n\nconst doLogout = (response) => {\n    if (response.logout !== 1) return;\n    GTM.pushDataLayer({ event: 'log_out' });\n    removeCookies('affiliate_token', 'affiliate_tracking');\n    Client.clearAllAccounts();\n    Client.set('loginid', '');\n    SocketCache.clear();\n    window.location.reload();\n};\n","import { action }              from 'mobx';\nimport NetworkMonitorBase      from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = (store) => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.network_status    = status;\n            common_store.is_network_online = is_online;\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { action } from 'mobx';\n\nlet common_store;\n\nconst OutdatedBrowser = (() => {\n    const init = (store) => {\n        common_store = store.common;\n\n        const src = '//browser-update.org/update.min.js';\n        if (document.querySelector(`script[src*=\"${src}\"]`)) return;\n        window.$buoop = {\n            vs       : { i: 11, f: -4, o: -4, s: 9, c: -4 },\n            api      : 4,\n            url      : 'https://whatbrowser.org/',\n            noclose  : true, // Do not show the 'ignore' button to close the notification\n            reminder : 0, // show all the time\n            onshow   : updateStore,\n            nomessage: true,\n            insecure : true,\n        };\n        if (document.body) {\n            const script = document.createElement('script');\n            script.setAttribute('src', src);\n            document.body.appendChild(script);\n        }\n    };\n\n    const updateStore = action('showError', () => {\n        if (common_store) {\n            common_store.showError({\n                str      : 'Your web browser is out of date and may affect your trading experience. Please [_1]update your browser[_2].',\n                replacers: {\n                    '1_2': {\n                        tagName: 'A',\n                        href   : 'http://outdatedbrowser.com',\n                        rel    : 'noopener noreferrer',\n                        target : '_blank',\n                    },\n                },\n            });\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default OutdatedBrowser;\n","import { action, flow }     from 'mobx';\nimport { setCurrencies }    from '_common/base/currency_base';\nimport Login                from '_common/base/login';\nimport ServerTime           from '_common/base/server_time';\nimport BinarySocket         from '_common/base/socket_base';\nimport { State }            from '_common/storage';\nimport { getPropertyValue } from '_common/utility';\nimport { requestLogout }    from './logout';\nimport WS                   from './ws_methods';\n\nlet client_store,\n    common_store;\n\n// TODO: update commented statements to the corresponding functions from app_2\nconst BinarySocketGeneral = (() => {\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    const onOpen = (is_ready) => {\n        // Header.hideNotification();\n        if (is_ready) {\n            if (!Login.isLoginPages()) {\n                if (!client_store.is_valid_login) {\n                    requestLogout();\n                    return;\n                }\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n            ServerTime.init(action('setTime', () => { common_store.server_time = ServerTime.get(); }));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = (response) => {\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    requestLogout();\n                } else if (!Login.isLoginPages() && !/authorize/.test(State.get('skip_response'))) {\n                    if (response.authorize.loginid !== client_store.loginid) {\n                        requestLogout();\n                    } else {\n                        client_store.responseAuthorize(response);\n                        WS.subscribeBalance(ResponseHandlers.balance);\n                        WS.getSettings();\n                        WS.getAccountStatus();\n                        WS.payoutCurrencies();\n                        WS.mt5LoginList();\n                        setResidence(\n                            response.authorize.country ||\n                            client_store.accounts[client_store.loginid].residence\n                        );\n                        if (!client_store.is_virtual) {\n                            WS.getSelfExclusion();\n                        }\n                        BinarySocket.sendBuffered();\n                        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n                            // showPopup({\n                            //     url        : urlFor('user/warning'),\n                            //     popup_id   : 'warning_popup',\n                            //     form_id    : '#frm_warning',\n                            //     content_id : '#warning_content',\n                            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n                            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n                            // });\n                        }\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                // SessionDurationLimit.exclusionResponseHandler(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    // GTM.eventHandler(response.get_settings);\n                    // if (response.get_settings.is_authenticated_payment_agent) {\n                    //     $('#topMenuPaymentAgent').setVisibility(1);\n                    // }\n                }\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response.payout_currencies);\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = (residence) => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence);\n        }\n    };\n\n    const setBalance = flow(function* (balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalance(balance);\n    });\n\n    const handleError = (response) => {\n        const msg_type   = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, { message: 'You have reached the rate limit of requests per second. Please try later.' });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            // no default\n        }\n    };\n\n    const init = (store) => {\n        client_store = store.client;\n        common_store = store.common;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    return {\n        init,\n        setBalance,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    let is_available = false;\n    const websiteStatus = (response) => {\n        if (response.website_status) {\n            is_available = /^up$/i.test(response.website_status.site_status);\n            if (is_available && !BinarySocket.availability()) {\n                window.location.reload();\n                return;\n            }\n            if (response.website_status.message) {\n                // Footer.displayNotification(response.website_status.message);\n            } else {\n                // Footer.clearNotification();\n            }\n            BinarySocket.availability(is_available);\n            setCurrencies(response.website_status);\n        }\n    };\n\n    const balance = (response) => {\n        if (!response.error){\n            BinarySocketGeneral.setBalance(response.balance.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balance,\n    };\n})();\n","import BinarySocket   from '_common/base/socket_base';\nimport {\n    cloneObject,\n    getPropertyValue,\n    isDeepEqual,\n    isEmptyObject }   from '_common/utility';\n\n/**\n * A layer over BinarySocket to handle subscribing to streaming calls\n * in order to keep track of subscriptions, manage forget, prevent multiple subscription at the same time, ...\n *\n * structure of the the subscription object is:\n * {\n *     1: { msg_type: 'proposal', request: { ... }, stream_id: '...', subscribers: [ ... ] },\n *     2: ...\n * }\n * object keys: subscription_id that assigned to each subscription\n * msg_type   : msg_type of the request for faster filtering\n * request    : the request object, used to subscribe to the same stream when there is a new subscribe request with exactly the same values\n * stream_id  : id of the stream which stored from its response and used to forget the stream when needed\n * subscribers: an array of callbacks to dispatch the response to\n */\nconst SubscriptionManager = (() => {\n    const subscriptions    = {};\n    const forget_requested = {};\n\n    let subscription_id = 0;\n\n    /**\n     * To submit request for a new subscription\n     *\n     * @param {String}   msg_type             msg_type of the request\n     * @param {Object}   request_obj          the whole object of the request to be made\n     * @param {Function} fncCallback          callback function to pass the responses to\n     * @param {Boolean}  should_forget_first  when it's true: forgets the previous subscription, then subscribes after receiving the forget response (if any)\n     */\n    const subscribe = (msg_type, request_obj, fncCallback, should_forget_first = false) => {\n        if (should_forget_first) {\n            forget(msg_type, fncCallback).then(() => {\n                subscribe(msg_type, request_obj, fncCallback);\n            });\n            return;\n        }\n\n        let sub_id = Object.keys(subscriptions).find(id => isDeepEqual(request_obj, subscriptions[id].request));\n\n        if (!sub_id) {\n            sub_id = ++subscription_id;\n\n            subscriptions[sub_id] = {\n                msg_type,\n                request    : cloneObject(request_obj),\n                stream_id  : '',             // stream_id will be updated after receiving the response\n                subscribers: [fncCallback],\n            };\n\n            BinarySocket.send(request_obj, {\n                callback: (response) => dispatch(response, sub_id),\n            });\n        } else if (!hasCallbackFunction(sub_id, fncCallback)) {\n            // there is already an active subscription for the very same request which fncCallback is not subscribed to it yet\n            subscriptions[sub_id].subscribers.push(fncCallback);\n        }\n    };\n\n    // dispatches the response to subscribers of the specific subscription id (internal use only)\n    const dispatch = (response, sub_id) => {\n        const stream_id = getPropertyValue(response, [response.msg_type, 'id']);\n\n        if (!subscriptions[sub_id]) {\n            if (!forget_requested[stream_id]) {\n                forgetStream(stream_id);\n            }\n            return;\n        }\n\n        const sub_info = subscriptions[sub_id];\n        // set the stream_id\n        if (!sub_info.stream_id && stream_id) {\n            sub_info.stream_id = stream_id;\n        }\n\n        // callback subscribers\n        const subscribers = sub_info.subscribers;\n        if (subscribers.length) {\n            if (\n                // it is the first response\n                !sub_info.stream_id &&\n                    (\n                        // the first response returned error\n                        response.error\n                        || (\n                            // not a subscription (i.e. subscribed proposal_open_contract for an expired contract)\n                            // also to filter out streams with no stream id but later it will continue streaming (i.e. proposal_open_contract without contract id)\n                            !isEmptyObject(response[response.msg_type]) &&\n                            // check msg_type to filter out those calls which don't return stream `id` on first response (tick_history, ...)\n                            response.msg_type === sub_info.msg_type\n                        )\n                    )\n                ||\n                // remove when response isn't first and response has no stream_id\n                !stream_id && sub_info.stream_id\n            ) {\n                delete subscriptions[sub_id];\n            }\n            sub_info.subscribers.forEach((fnc) => {\n                fnc(response);\n            });\n        } else {\n            delete subscriptions[sub_id];\n            forgetStream(sub_info.stream_id);\n        }\n    };\n\n    /**\n     * To forget a subscription which submitted for a specific callback function\n     *\n     * @param  {String}   msg_type      msg_type to forget\n     * @param  {Function} fncCallback   the same function passed to subscribe()\n     *     (this is the way to distinguish between different subscribers of the same stream at the same time)\n     * @param  {Object}   match_values  optional, to only forget subscriptions having request that \"contains\" provided values\n     * @return {Promise}  the promise object of all possible forget requests\n     */\n    const forget = (msg_type, fncCallback, match_values) => {\n        if (typeof fncCallback !== 'function') {\n            throw new Error(`Missing callback function. To forget all subscriptions of msg_type: ${msg_type}, please call forgetAll().`);\n        }\n\n        // find corresponding id(s)\n        const sub_ids = Object.keys(subscriptions).filter(id => (\n            subscriptions[id].msg_type === msg_type &&\n            hasCallbackFunction(id, fncCallback)\n        ));\n\n        const forgets_list = [];\n        sub_ids.forEach((id) => {\n            if (match_values && !hasValues(subscriptions[id].request, match_values)) {\n                return;\n            }\n            const stream_id = subscriptions[id].stream_id;\n            if (stream_id && subscriptions[id].subscribers.length === 1) {\n                delete subscriptions[id];\n                forgets_list.push(forgetStream(stream_id));\n            } else {\n                // there are other subscribers, or for some reason there is no stream_id:\n                // (i.e. returned an error, or forget() being called before the first response)\n                subscriptions[id].subscribers.splice(subscriptions[id].subscribers.indexOf(fncCallback), 1);\n            }\n        });\n        return Promise.all(forgets_list);\n    };\n\n    /**\n     * To forget all active subscriptions of a list of msg_types\n     *\n     * @param  {String}  msg_types  list of msg_types to forget\n     * @return {Promise} the promise object of all possible forget_all requests\n     */\n    const forgetAll = (...msg_types) => {\n        const types_to_forget = {};\n\n        msg_types.forEach((msg_type) => {\n            const sub_ids = Object.keys(subscriptions).filter(id => subscriptions[id].msg_type === msg_type);\n            if (sub_ids.length) {\n                sub_ids.forEach((id) => {\n                    delete subscriptions[id];\n                });\n                types_to_forget[msg_type] = true;\n            }\n        });\n\n        return Promise.resolve(\n            !isEmptyObject(types_to_forget) ?\n                BinarySocket.send({ forget_all: Object.keys(types_to_forget) }) :\n                {}\n        );\n    };\n\n    const forgetStream = (stream_id) => {\n        forget_requested[stream_id] = true; // to prevent forgetting multiple times\n        return Promise.resolve(\n            stream_id ?\n                BinarySocket.send({ forget: stream_id }).then(() => { delete forget_requested[stream_id]; }) :\n                {}\n        );\n    };\n\n    const hasCallbackFunction = (sub_id, fncCallback) =>\n        (subscriptions[sub_id] && subscriptions[sub_id].subscribers.indexOf(fncCallback) !== -1);\n\n    const hasValues = (request_obj, values_obj) => (\n        typeof request_obj === 'object' &&\n        typeof values_obj  === 'object' &&\n        Object.keys(values_obj).every(key => request_obj[key] === values_obj[key])\n    );\n\n    return {\n        subscribe,\n        forget,\n        forgetAll,\n    };\n})();\n\nexport default SubscriptionManager;\n","import BinarySocket        from '_common/base/socket_base';\nimport { isEmptyObject }   from '_common/utility';\nimport SubscriptionManager from './subscription_manager';\n\nconst WS = (() => {\n    const activeSymbols = () =>\n        BinarySocket.send({ active_symbols: 'brief' });\n\n    const buy = (proposal_id, price) =>\n        BinarySocket.send({ buy: proposal_id, price });\n\n    const contractsFor = (symbol) =>\n        BinarySocket.send({ contracts_for: symbol });\n\n    const getAccountStatus = () =>\n        BinarySocket.send({ get_account_status: 1 });\n\n    const getSelfExclusion = () =>\n        BinarySocket.send({ get_self_exclusion: 1 });\n\n    const getSettings = () =>\n        BinarySocket.send({ get_settings: 1 });\n\n    const landingCompany = (residence) =>\n        BinarySocket.send({ landing_company: residence });\n\n    const logout = () =>\n        BinarySocket.send({ logout: 1 });\n\n    const mt5LoginList = () =>\n        BinarySocket.send({ mt5_login_list: 1 });\n\n    const oauthApps = () =>\n        BinarySocket.send({ oauth_apps: 1 });\n\n    const payoutCurrencies = () =>\n        BinarySocket.send({ payout_currencies: 1 });\n\n    const portfolio = () =>\n        BinarySocket.send({ portfolio: 1 });\n\n    const proposalOpenContract = (contract_id) =>\n        BinarySocket.send({ proposal_open_contract: 1, contract_id });\n\n    const sell = (contract_id, price) =>\n        BinarySocket.send({ sell: contract_id, price });\n\n    const sellExpired = () =>\n        BinarySocket.send({ sell_expired: 1 });\n\n    const sendRequest = (request_object) =>\n        Promise.resolve(!isEmptyObject(request_object) ? BinarySocket.send(request_object) : {});\n\n    const statement = (limit, offset, date_boundaries) =>\n        BinarySocket.send({ statement: 1, description: 1, limit, offset, ...date_boundaries });\n\n    // ----- Streaming calls -----\n    const forget = (msg_type, cb, match_values) =>\n        SubscriptionManager.forget(msg_type, cb, match_values);\n\n    const forgetAll = (...msg_types) =>\n        SubscriptionManager.forgetAll(...msg_types);\n\n    const subscribeBalance = (cb) =>\n        SubscriptionManager.subscribe('balance', { balance: 1, subscribe: 1 }, cb);\n\n    const subscribeProposal = (req, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal', req, cb, should_forget_first);\n\n    const subscribeProposalOpenContract = (contract_id = null, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('proposal_open_contract', { proposal_open_contract: 1, subscribe: 1, ...(contract_id && { contract_id }) }, cb, should_forget_first);\n\n    const subscribeTicks = (symbol, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks', { ticks: symbol, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeTicksHistory = (request_object, cb, should_forget_first) =>\n        SubscriptionManager.subscribe('ticks_history', request_object, cb, should_forget_first);\n\n    const subscribeTransaction = (cb, should_forget_first) =>\n        SubscriptionManager.subscribe('transaction', { transaction: 1, subscribe: 1 }, cb, should_forget_first);\n\n    const subscribeWebsiteStatus = (cb) =>\n        SubscriptionManager.subscribe('website_status', { website_status: 1, subscribe: 1 }, cb);\n\n    return {\n        activeSymbols,\n        buy,\n        contractsFor,\n        getAccountStatus,\n        getSelfExclusion,\n        getSettings,\n        landingCompany,\n        logout,\n        mt5LoginList,\n        oauthApps,\n        portfolio,\n        payoutCurrencies,\n        proposalOpenContract,\n        sell,\n        sellExpired,\n        sendRequest,\n        statement,\n\n        // streams\n        forget,\n        forgetAll,\n        subscribeBalance,\n        subscribeProposal,\n        subscribeProposalOpenContract,\n        subscribeTicks,\n        subscribeTicksHistory,\n        subscribeTransaction,\n        subscribeWebsiteStatus,\n    };\n})();\n\nexport default WS;\n","import React        from 'react';\nimport { localize } from '_common/localize';\nimport IconFlag     from 'Assets/Contract/icon_flag.jsx';\nimport IconTick     from 'Assets/Contract/icon_tick.jsx';\n\nexport const getHeaderConfig = () => ({\n    purchased: { title: localize('Contract Purchased'), icon: <IconTick /> },\n    won      : { title: localize('Contract Won'),       icon: <IconFlag /> },\n    lost     : { title: localize('Contract Lost'),      icon: <IconFlag /> },\n});\n","import { BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\n\nexport const createChartBarrier = (SmartChartStore, contract_info) => {\n    SmartChartStore.removeBarriers();\n\n    if (contract_info) {\n        const { contract_type, barrier, high_barrier, low_barrier } = contract_info;\n\n        if (barrier || high_barrier) { // create barrier only when it's available in response\n            SmartChartStore.createBarriers(\n                contract_type,\n                barrier || high_barrier,\n                low_barrier,\n                null,\n                {\n                    line_style   : BARRIER_LINE_STYLES.SOLID,\n                    not_draggable: true,\n                },\n            );\n\n            SmartChartStore.updateBarrierShade(true, contract_type);\n        }\n    }\n};\n","import extend                  from 'extend';\nimport { MARKER_TYPES_CONFIG } from '../../SmartChart/Constants/markers';\n\nexport const createChartMarkers = (SmartChartStore, contract_info, ContractStore = null) => {\n    if (contract_info) {\n        Object.keys(marker_creators).forEach((marker_type) => {\n            if (marker_type in SmartChartStore.markers) return;\n\n            const marker_config = marker_creators[marker_type](contract_info, ContractStore);\n            if (marker_config) {\n                SmartChartStore.createMarker(marker_config);\n            }\n        });\n    }\n};\n\nconst marker_creators = {\n    [MARKER_TYPES_CONFIG.LINE_END.type]     : createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n    [MARKER_TYPES_CONFIG.LINE_START.type]   : createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]   : createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]    : createMarkerSpotExit,\n};\n\n// -------------------- Lines --------------------\nfunction createMarkerEndTime(contract_info) {\n    if (contract_info.status === 'open' || !contract_info.date_expiry) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_END.type,\n        contract_info.date_expiry,\n    );\n}\n\nfunction createMarkerPurchaseTime(contract_info) {\n    if (!contract_info.purchase_time || !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_PURCHASE.type,\n        contract_info.purchase_time,\n    );\n}\n\nfunction createMarkerStartTime(contract_info) {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.LINE_START.type,\n        contract_info.date_start,\n    );\n}\n\n// -------------------- Spots --------------------\nfunction createMarkerSpotEntry(contract_info, ContractStore) {\n    if (!contract_info.entry_tick_time || ContractStore.is_sold_before_start) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_ENTRY.type,\n        contract_info.entry_tick_time,\n        contract_info.entry_tick,\n        {\n            spot_value: `${contract_info.entry_tick}`,\n        },\n    );\n}\n\nfunction createMarkerSpotExit(contract_info, ContractStore) {\n    if (!ContractStore.end_spot_time) return false;\n\n    return createMarkerConfig(\n        MARKER_TYPES_CONFIG.SPOT_EXIT.type,\n        ContractStore.end_spot_time,\n        ContractStore.end_spot,\n        {\n            spot_value: `${ContractStore.end_spot}`,\n            status    : `${contract_info.profit > 0 ? 'won' : 'lost' }`,\n        },\n    );\n}\n\n// -------------------- Helpers --------------------\nconst createMarkerConfig = (marker_type, x, y, content_config) => (\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    })\n);\n","import React                      from 'react';\nimport { addComma }               from '_common/base/currency_base';\nimport { localize }               from '_common/localize';\nimport Money                      from 'App/Components/Elements/money.jsx';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport { toGMTFormat }            from 'Utils/Date';\n\nconst detailsProps = (() => {\n    let details_props;\n\n    const initDetailsProps = () => ({\n        contract_type : localize('Contract Type'),\n        start_time    : localize('Start Time'),\n        entry_spot    : localize('Entry Spot'),\n        purchase_price: localize('Purchase Price'),\n        end_time      : localize('End Time'),\n        exit_spot     : localize('Exit Spot'),\n        exit_spot_time: localize('Exit Spot Time'),\n        payout        : localize('Payout'),\n    });\n\n    return {\n        get: () => {\n            if (!details_props) {\n                details_props = initDetailsProps();\n            }\n            return details_props;\n        },\n    };\n})();\n\nexport const getDetailsInfo = (contract_info) => {\n    const {\n        buy_price,\n        contract_type,\n        currency,\n        date_start,\n        entry_spot,\n        sell_time,\n    } = contract_info;\n\n    const details_props = detailsProps.get();\n\n    // if a forward starting contract was sold before starting\n    // API will still send entry spot when start time is passed\n    // we will hide it from our side\n    const is_sold_before_start = sell_time && +sell_time < +date_start;\n    const txt_start_time       = date_start && toGMTFormat(+date_start * 1000);\n    const txt_entry_spot       = entry_spot && !is_sold_before_start ? addComma(entry_spot) : '-';\n\n    return {\n        [details_props.contract_type] : getContractTypeDisplay()[contract_type],\n        [details_props.start_time]    : txt_start_time,\n        [details_props.entry_spot]    : txt_entry_spot,\n        [details_props.purchase_price]: <Money amount={buy_price} currency={currency} />,\n    };\n};\n\nexport const getDetailsExpiry = (store) => {\n    if (!store.is_ended) return {};\n\n    const {\n        contract_info,\n        end_spot,\n        end_spot_time,\n        indicative_price,\n        is_user_sold,\n    } = store;\n\n    const details_props = detailsProps.get();\n\n    // for user sold contracts sell spot can get updated when the next tick becomes available\n    // so we only show end time instead of any spot information\n    return {\n        ...(is_user_sold ? {\n            [details_props.end_time]: contract_info.date_expiry && toGMTFormat(+contract_info.date_expiry * 1000),\n        } : {\n            [details_props.exit_spot]     : end_spot ? addComma(end_spot) : '-',\n            [details_props.exit_spot_time]: end_spot_time ? toGMTFormat(+end_spot_time * 1000) : '-',\n        }),\n        [details_props.payout]: <Money amount={indicative_price} currency={contract_info.currency} />,\n    };\n};\n","export const isDigitContract = (contract_type) => /digit/i.test(contract_type);\n\nexport const getDigitInfo = (digits_info, contract_info) => {\n    const start_time = +contract_info.entry_tick_time;\n    if (!start_time) return {}; // filter out the responses before contract start\n\n    const entry = start_time in digits_info ? {} :\n        createDigitInfo(contract_info, contract_info.entry_tick, start_time);\n\n    const spot_time       = +contract_info.current_spot_time;\n    const exit_time       = +contract_info.exit_tick_time;\n    const is_after_expiry = exit_time && spot_time > exit_time;\n\n    const current = (spot_time in digits_info) || is_after_expiry ? {} : // filter out duplicated responses and those after contract expiry\n        createDigitInfo(contract_info, contract_info.current_spot, spot_time);\n\n    return {\n        ...entry,\n        ...current,\n    };\n};\n\nconst createDigitInfo = (contract_info, spot, spot_time) => {\n    const digit = +`${spot}`.slice(-1);\n\n    return {\n        [+spot_time]: {\n            digit,\n            is_win : isWin(contract_info, digit),\n            is_last: spot_time === +contract_info.exit_tick_time,\n        },\n    };\n};\n\nconst isWin = (contract_info, current) =>\n    (win_checker[contract_info.contract_type] || (() => {}))(+contract_info.barrier, current);\n\nconst win_checker = {\n    DIGITMATCH: (barrier, current) => current === barrier,\n    DIGITDIFF : (barrier, current) => current !== barrier,\n    DIGITODD  : (barrier, current) => current % 2,\n    DIGITEVEN : (barrier, current) => !(current % 2),\n    DIGITOVER : (barrier, current) => current > barrier,\n    DIGITUNDER: (barrier, current) => current < barrier,\n};\n","export const getChartConfig = (contract_info) => {\n    const start = contract_info.date_start;\n    const end   = contract_info.date_expiry;\n    const granularity = calculateGranularity(end - start);\n\n    return {\n        granularity,\n        chart_type : granularity ? 'candle' : 'mountain',\n        end_epoch  : end   + (granularity || 3),\n        start_epoch: start - (granularity || 3),\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1      , 0],\n    [2      , 120],\n    [6      , 600],\n    [24     , 900],\n    [5 * 24 , 3600],\n    [30 * 24, 14400],\n];\nconst calculateGranularity = (duration) =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getDisplayStatus = (contract_info) => {\n    let status = 'purchased';\n    if (isEnded(contract_info)) {\n        status = contract_info.profit >= 0 ? 'won' : 'lost';\n    }\n    return status;\n};\n\n// for path dependent contracts the contract is sold from server side\n// so we need to use sell spot and sell spot time instead\nexport const getEndSpot = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot : contract_info.exit_tick\n);\n\nexport const getEndSpotTime = (contract_info) => (\n    contract_info.is_path_dependent ? contract_info.sell_spot_time : contract_info.exit_tick_time\n);\n\nexport const getFinalPrice = (contract_info) => (\n    +(contract_info.sell_price || contract_info.bid_price)\n);\n\nexport const getIndicativePrice = (contract_info) => (\n    getFinalPrice(contract_info) && isEnded(contract_info) ?\n        getFinalPrice(contract_info) :\n        (+contract_info.bid_price || null)\n);\n\nexport const isEnded = (contract_info) => !!(\n    (contract_info.status && contract_info.status !== 'open') ||\n    contract_info.is_expired        ||\n    contract_info.is_settleable\n);\n\nexport const isSoldBeforeStart = (contract_info) => (\n    contract_info.sell_time && +contract_info.sell_time < +contract_info.date_start\n);\n\nexport const isStarted = (contract_info) => (\n    !contract_info.is_forward_starting || contract_info.current_spot_time > contract_info.date_start\n);\n\nexport const isUserSold = (contract_info) => (\n    contract_info.status === 'sold'\n);\n\nexport const isValidToSell = (contract_info) => (\n    !isEnded(contract_info) && !isUserSold(contract_info) && +contract_info.is_valid_to_sell === 1\n);\n","import {\n    action,\n    computed,\n    extendObservable,\n    observable }                 from 'mobx';\nimport { isEmptyObject }         from '_common/utility';\nimport { localize }              from '_common/localize';\nimport { WS }                    from 'Services';\nimport { createChartBarrier }                                                                                                                                                 from './Helpers/chart_barriers';\nimport { createChartMarkers }                                                                                                                                                 from './Helpers/chart_markers';\nimport {\n    getDetailsExpiry,\n    getDetailsInfo }             from './Helpers/details';\nimport {\n    getDigitInfo,\n    isDigitContract }            from './Helpers/digits';\nimport {\n    getChartConfig,\n    getDisplayStatus,\n    getEndSpot,\n    getEndSpotTime,\n    getFinalPrice,\n    getIndicativePrice,\n    isEnded,\n    isSoldBeforeStart,\n    isStarted,\n    isUserSold,\n    isValidToSell }              from './Helpers/logic';\nimport BaseStore                 from '../../base_store';\n\nexport default class ContractStore extends BaseStore {\n    @observable contract_id;\n\n    @observable contract_info = observable.object({});\n    @observable digits_info   = observable.object({});\n    @observable sell_info     = observable.object({});\n    @observable chart_config  = observable.object({});\n\n    @observable has_error         = false;\n    @observable error_message     = '';\n    @observable is_sell_requested = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_config.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.chart_config.granularity = granularity;\n    }\n\n    @action.bound\n    onMount(contract_id) {\n        this.onSwitchAccount(this.accountSwitcherListener.bind(null, contract_id));\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener (contract_id) {\n        this.has_error     = false;\n        this.error_message = '';\n        this.contract_id   = contract_id;\n        this.smart_chart   = this.root_store.modules.smart_chart;\n        this.smart_chart.setContractMode(true);\n\n        if (contract_id) {\n            WS.subscribeProposalOpenContract(this.contract_id, this.updateProposal, false);\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.forgetProposalOpenContract();\n\n        this.contract_id       = null;\n        this.contract_info     = {};\n        this.digits_info       = {};\n        this.sell_info         = {};\n        this.is_sell_requested = false;\n\n        this.smart_chart.removeBarriers();\n        this.smart_chart.removeMarkers();\n        this.smart_chart.setContractMode(false);\n    }\n\n    @action.bound\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error     = true;\n            this.error_message = response.error.message;\n            this.contract_info = {};\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error     = true;\n            this.error_message = localize('Contract does not exist or does not belong to this client.');\n            this.contract_info = {};\n            return;\n        }\n        this.contract_info = response.proposal_open_contract;\n        if (isEnded(this.contract_info)) {\n            this.chart_config = getChartConfig(this.contract_info);\n        } else {\n            delete this.chart_config.end_epoch;\n            delete this.chart_config.start_epoch;\n        }\n        createChartBarrier(this.smart_chart, this.contract_info);\n        createChartMarkers(this.smart_chart, this.contract_info, this);\n        this.handleDigits();\n    }\n\n    @action.bound\n    handleDigits() {\n        if (isDigitContract(this.contract_info.contract_type)) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n    }\n\n    @action.bound\n    onClickSell() {\n        if (this.contract_id && !this.is_sell_requested && isEmptyObject(this.sell_info)) {\n            this.is_sell_requested = true;\n            WS.sell(this.contract_id, this.contract_info.bid_price).then(this.handleSell);\n        }\n    }\n\n    @action.bound\n    handleSell(response) {\n        if (response.error) {\n            this.sell_info = {\n                error_message: response.error.message,\n            };\n\n            this.is_sell_requested = false;\n        } else {\n            this.forgetProposalOpenContract();\n            WS.proposalOpenContract(this.contract_id).then(action((proposal_response) => {\n                this.updateProposal(proposal_response);\n                this.sell_info = {\n                    sell_price    : response.sell.sold_for,\n                    transaction_id: response.sell.transaction_id,\n                };\n            }));\n        }\n    }\n\n    forgetProposalOpenContract() {\n        WS.forget('proposal_open_contract', this.updateProposal, { contract_id: this.contract_id });\n    }\n\n    @action.bound\n    removeSellError() {\n        delete this.sell_info.error_message;\n    }\n\n    // ---------------------------\n    // ----- Computed values -----\n    // ---------------------------\n    // TODO: currently this runs on each response, even if contract_info is deep equal previous one\n\n    @computed\n    get details_expiry() {\n        return getDetailsExpiry(this);\n    }\n\n    @computed\n    get details_info() {\n        return getDetailsInfo(this.contract_info);\n    }\n\n    @computed\n    get display_status() {\n        return getDisplayStatus(this.contract_info);\n    }\n\n    @computed\n    get end_spot() {\n        return getEndSpot(this.contract_info);\n    }\n\n    @computed\n    get end_spot_time() {\n        return getEndSpotTime(this.contract_info);\n    }\n\n    @computed\n    get final_price() {\n        return getFinalPrice(this.contract_info);\n    }\n\n    @computed\n    get indicative_price() {\n        return getIndicativePrice(this.contract_info);\n    }\n\n    @computed\n    get is_ended() {\n        return isEnded(this.contract_info);\n    }\n\n    @computed\n    get is_sold_before_start() {\n        return isSoldBeforeStart(this.contract_info);\n    }\n\n    @computed\n    get is_started() {\n        return isStarted(this.contract_info);\n    }\n\n    @computed\n    get is_user_sold() {\n        return isUserSold(this.contract_info);\n    }\n\n    @computed\n    get is_valid_to_sell() {\n        return isValidToSell(this.contract_info);\n    }\n}\n","export const formatPortfolioPosition = (portfolio_pos) => {\n    const purchase = parseFloat(portfolio_pos.buy_price);\n    const payout   = parseFloat(portfolio_pos.payout);\n\n    return {\n        reference  : +portfolio_pos.transaction_id,\n        type       : portfolio_pos.contract_type,\n        details    : portfolio_pos.longcode.replace(/\\n/g, '<br />'),\n        payout,\n        purchase,\n        expiry_time: portfolio_pos.expiry_time,\n        id         : portfolio_pos.contract_id,\n        indicative : 0,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                   from 'mobx';\nimport { WS }                      from 'Services';\nimport { formatPortfolioPosition } from './Helpers/format_response';\nimport BaseStore                   from '../../base_store';\n\nexport default class PortfolioStore extends BaseStore {\n    @observable data       = [];\n    @observable is_loading = false;\n    @observable error      = '';\n\n    @action.bound\n    initializePortfolio = () => {\n        if (!this.root_store.client.is_logged_in) return;\n        this.is_loading = true;\n\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractHandler, false);\n        WS.subscribeTransaction(this.transactionHandler, false);\n    };\n\n    @action.bound\n    clearTable() {\n        this.data       = [];\n        this.is_loading = false;\n        this.error      = '';\n    }\n\n    @action.bound\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.data = response.portfolio.contracts\n                .map(pos => formatPortfolioPosition(pos))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n        }\n    }\n\n    @action.bound\n    transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act } = response.transaction;\n\n        if (act === 'buy') {\n            WS.portfolio().then((res) => {\n                const new_pos = res.portfolio.contracts.find(pos => +pos.contract_id === +contract_id);\n                if (!new_pos) return;\n                this.pushNewPosition(new_pos);\n            });\n            // subscribe to new contract:\n            WS.subscribeProposalOpenContract(contract_id, this.proposalOpenContractHandler, false);\n        } else if (act === 'sell') {\n            this.removePositionById(contract_id);\n        }\n    }\n\n    @action.bound\n    proposalOpenContractHandler(response) {\n        if ('error' in response) return;\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.data.find((position) => +position.id === +proposal.contract_id);\n\n        if (!portfolio_position) return;\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative  = +proposal.bid_price;\n\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.underlying = proposal.display_name;\n\n        if (!proposal.is_valid_to_sell) {\n            portfolio_position.status = 'no-resale';\n        } else if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'price-moved-up';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'price-moved-down';\n        } else {\n            portfolio_position.status = 'price-stable';\n        }\n    }\n\n    @action.bound\n    pushNewPosition(new_pos) {\n        this.data.unshift(formatPortfolioPosition(new_pos));\n    }\n\n    @action.bound\n    removePositionById(contract_id) {\n        const i = this.data.findIndex(pos => +pos.id === +contract_id);\n        this.data.splice(i, 1);\n    }\n\n    @action.bound\n    accountSwitcherListener () {\n        return new Promise((resolve) => {\n            if (this.data.length === 0) {\n                resolve(this.initializePortfolio());\n            }\n        });\n    }\n\n    @action.bound\n    onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        if (this.data.length === 0) {\n            this.initializePortfolio();\n        }\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // keep data and connections for portfolio drawer on desktop\n        if (this.root_store.ui.is_mobile) {\n            this.clearTable();\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n    }\n\n    @computed\n    get totals() {\n        let indicative = 0;\n        let payout     = 0;\n        let purchase   = 0;\n\n        this.data.forEach((portfolio_pos) => {\n            indicative += (+portfolio_pos.indicative);\n            payout     += (+portfolio_pos.payout);\n            purchase   += (+portfolio_pos.purchase);\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    @computed\n    get active_positions() {\n        return this.data.filter((portfolio_pos) => {\n            const server_epoch = this.root_store.common.server_time.unix();\n            return portfolio_pos.expiry_time > server_epoch;\n        });\n    }\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n}\n","export const CONTRACT_SHADES = {\n    CALL       : 'ABOVE',\n    PUT        : 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS : 'OUTSIDE',\n    RANGE      : 'BETWEEN',\n    UPORDOWN   : 'OUTSIDE',\n    ONETOUCH   : 'NONE_SINGLE', // no shade\n    NOTOUCH    : 'NONE_SINGLE', // no shade\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: 'green',\n    RED  : 'red',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID : 'solid',\n};\n","export const tick_chart_types = [\n    'mountain',\n    'line',\n    'colored_line',\n    'spline',\n    'baseline',\n];\n","import React         from 'react';\nimport { localize }  from '_common/localize';\nimport IconEntrySpot from 'Assets/Contract/icon_entry_spot.jsx';\nimport IconFlag      from 'Assets/Contract/icon_flag.jsx';\nimport MarkerLine    from 'Modules/SmartChart/Components/Markers/marker_line.jsx';\nimport MarkerSpot    from 'Modules/SmartChart/Components/Markers/marker_spot.jsx';\n\nconst MARKER_X_POSITIONER = {\n    EPOCH: 'epoch',\n    NONE : 'none',\n};\n\nconst MARKER_Y_POSITIONER = {\n    VALUE: 'value',\n    NONE : 'none',\n};\n\nconst MARKER_CONTENT_TYPES = {\n    LINE: {\n        ContentComponent: MarkerLine,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.NONE,\n        className       : 'chart-marker-line',\n    },\n    SPOT: {\n        ContentComponent: MarkerSpot,\n        xPositioner     : MARKER_X_POSITIONER.EPOCH,\n        yPositioner     : MARKER_Y_POSITIONER.VALUE,\n    },\n};\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END     : { type: 'LINE_END',      marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'dash',  label: localize('End Time') } },\n    LINE_PURCHASE: { type: 'LINE_PURCHASE', marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Purchase Time') } },\n    LINE_START   : { type: 'LINE_START',    marker_config: MARKER_CONTENT_TYPES.LINE, content_config: { line_style: 'solid', label: localize('Start Time') } },\n    SPOT_ENTRY   : { type: 'SPOT_ENTRY',    marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'left',  icon: <IconEntrySpot /> } },\n    SPOT_EXIT    : { type: 'SPOT_EXIT',     marker_config: MARKER_CONTENT_TYPES.SPOT, content_config: { align: 'right', icon: <IconFlag /> } },\n};\n","import { toJS }            from 'mobx';\nimport { isEmptyObject }   from '_common/utility';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = (contract_type) => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) => barriers_list.map(\n    barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`\n);\n\nexport const barriersObjectToArray = (barriers) => (\n    Object.keys(barriers || {})\n        .map(key => toJS(barriers[key]))\n        .filter(item => !isEmptyObject(item))\n);\n","import {\n    action,\n    computed,\n    observable }            from 'mobx';\nimport {\n    BARRIER_COLORS,\n    BARRIER_LINE_STYLES,\n    CONTRACT_SHADES,\n    DEFAULT_SHADES }        from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    @observable color;\n    @observable lineStyle;\n    @observable shade;\n\n    @observable high;\n    @observable low;\n\n    @observable relative;\n    @observable draggable;\n    @observable hidePriceLines;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, line_style, not_draggable } = {}\n    ) {\n        this.color     = color      || BARRIER_COLORS.GREEN;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.DASHED;\n        this.onChange  = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange = typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = +high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = +low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier   = !!high_barrier;\n        this.relative       = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable      = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    @action.bound\n    updateBarriers(high, low) {\n        this.relative       = /^[+-]/.test(high);\n        this.high = +high || undefined;\n        this.low  = +low  || undefined;\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    @action.bound\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    @computed\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    @computed\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { observable } from 'mobx';\n\nexport class ChartMarkerStore {\n    @observable marker_config  = observable.object({});\n    @observable content_config = observable.object({});\n\n    constructor(marker_config, content_config) {\n        this.marker_config  = marker_config;\n        this.content_config = content_config;\n    }\n}\n","import extend                 from 'extend';\nimport {\n    action,\n    computed,\n    observable }              from 'mobx';\nimport { isEmptyObject }      from '_common/utility';\nimport ServerTime             from '_common/base/server_time';\nimport { WS }                 from 'Services';\nimport { ChartBarrierStore }  from './chart_barrier_store';\nimport { ChartMarkerStore }   from './chart_marker_store';\nimport { tick_chart_types }   from './Constants/chart';\nimport {\n    barriersObjectToArray,\n    isBarrierSupported }      from './Helpers/barriers';\nimport BaseStore              from '../../base_store';\n\nexport default class SmartChartStore extends BaseStore {\n    @observable symbol;\n    @observable barriers = observable.object({});\n    @observable markers  = observable.object({});\n\n    @observable is_title_enabled = true;\n    @observable is_contract_mode = false;\n\n    @observable chart_type = 'mountain';\n    @observable granularity = 0;\n\n    constructor({ root_store }) {\n        const local_storage_properties = ['chart_type', 'granularity'];\n        super({ root_store, local_storage_properties });\n    }\n\n    @action.bound\n    updateChartType(chart_type) {\n        this.chart_type = chart_type;\n    }\n\n    @action.bound\n    updateGranularity(granularity) {\n        this.granularity = granularity;\n        if (granularity === 0 && !tick_chart_types.includes(this.chart_type)) {\n            this.chart_type = 'mountain';\n        }\n    }\n\n    @action.bound\n    setContractMode(is_contract_mode) {\n        this.is_contract_mode = is_contract_mode;\n        this.is_title_enabled = !is_contract_mode;\n    }\n\n    @action.bound\n    onUnmount = () => {\n        this.symbol = null;\n        this.removeBarriers();\n        this.removeMarkers();\n    };\n\n    // ---------- Barriers ----------\n    @action.bound\n    createBarriers = (contract_type, high_barrier, low_barrier, onChartBarrierChange, config) => {\n        if (isEmptyObject(this.barriers.main)) {\n            let main_barrier = {};\n            if (isBarrierSupported(contract_type)) {\n                main_barrier = new ChartBarrierStore(high_barrier, low_barrier, onChartBarrierChange, config);\n            }\n\n            this.barriers = {\n                main: main_barrier,\n            };\n        }\n    };\n\n    @action.bound\n    updateBarriers(barrier_1, barrier_2) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarriers(barrier_1, barrier_2);\n        }\n    }\n\n    @action.bound\n    updateBarrierShade(should_display, contract_type) {\n        if (!isEmptyObject(this.barriers.main)) {\n            this.barriers.main.updateBarrierShade(should_display, contract_type);\n        }\n    }\n\n    @action.bound\n    removeBarriers() {\n        this.barriers = {};\n    }\n\n    @computed\n    get barriers_array() {\n        return barriersObjectToArray(this.barriers);\n    }\n\n    // ---------- Markers ----------\n    @action.bound\n    createMarker(config) {\n        this.markers = extend({}, this.markers, {\n            [config.type]: new ChartMarkerStore(config.marker_config, config.content_config),\n        });\n    }\n\n    @action.bound\n    removeMarkers() {\n        this.markers = {};\n    }\n\n    @computed\n    get markers_array() {\n        return barriersObjectToArray(this.markers);\n    }\n\n    // ---------- Chart Settings ----------\n    @computed\n    get settings() { // TODO: consider moving chart settings from ui_store to chart_store\n        return (({ common, ui } = this.root_store) => ({\n            assetInformation: ui.is_chart_asset_info_visible,\n            countdown       : ui.is_chart_countdown_visible,\n            lang            : common.current_language,\n            position        : ui.is_chart_layout_default ? 'bottom' : 'left',\n            theme           : ui.is_dark_mode_on ? 'dark' : 'light',\n        }))();\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (request_object, callback) => {\n        if (request_object.subscribe !== 1) return;\n        WS.subscribeTicksHistory({ ...request_object }, callback); // use a copy of the request_object to prevent updating the source\n    };\n\n    wsForget = (match_values, callback) => (\n        WS.forget('ticks_history', callback, match_values)\n    );\n\n    wsSendRequest = (request_object) => {\n        if (request_object.time) {\n            return ServerTime.timePromise.then(() => ({\n                msg_type: 'time',\n                time    : ServerTime.get().unix(),\n            }));\n        }\n        return WS.sendRequest(request_object);\n    };\n}\n","import { formatMoney } from '_common/base/currency_base';\nimport { localize }    from '_common/localize';\nimport { toTitleCase } from '_common/string_util';\nimport { toMoment }    from 'Utils/Date';\n\nexport const formatStatementTransaction = (transaction, currency) => {\n    const moment_obj = toMoment(transaction.transaction_time);\n    const date_str   = moment_obj.format('YYYY-MM-DD');\n    const time_str   = `${moment_obj.format('HH:mm:ss')} GMT`;\n    const payout     = parseFloat(transaction.payout);\n    const amount     = parseFloat(transaction.amount);\n    const balance    = parseFloat(transaction.balance_after);\n    const should_exclude_currency = true;\n\n    return {\n        action : localize(toTitleCase(transaction.action_type) /* localize-ignore */), // handled in static_strings_app_2.js: 'Buy', 'Sell', 'Deposit', 'Withdrawal'\n        date   : `${date_str}\\n${time_str}`,\n        refid  : transaction.transaction_id,\n        payout : isNaN(payout)  ? '-' : formatMoney(currency, payout,  should_exclude_currency),\n        amount : isNaN(amount)  ? '-' : formatMoney(currency, amount,  should_exclude_currency),\n        balance: isNaN(balance) ? '-' : formatMoney(currency, balance, should_exclude_currency),\n        desc   : transaction.longcode.replace(/\\n/g, '<br />'),\n        id     : transaction.contract_id,\n        app_id : transaction.app_id,\n    };\n};\n","import {\n    action,\n    computed,\n    observable }                        from 'mobx';\nimport moment                           from 'moment';\nimport { WS }                           from 'Services';\nimport { formatStatementTransaction }   from './Helpers/format_response';\nimport BaseStore                        from '../../base_store';\n\nconst batch_size = 100; // request response limit\n\nexport default class StatementStore extends BaseStore {\n    @observable data           = [];\n    @observable is_loading     = false;\n    @observable has_loaded_all = false;\n    @observable date_from      = '';\n    @observable date_to        = '';\n    @observable error          = '';\n\n    @computed\n    get is_empty() {\n        return !this.is_loading && this.data.length === 0;\n    }\n\n    @computed\n    get has_selected_date() {\n        return !!(this.date_from || this.date_to);\n    }\n\n    @action.bound\n    clearTable() {\n        this.data           = [];\n        this.has_loaded_all = false;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    clearDateFilter() {\n        this.date_from = '';\n        this.date_to   = '';\n    }\n\n    @action.bound\n    async fetchNextBatch() {\n        if (this.has_loaded_all || this.is_loading) return;\n\n        this.is_loading = true;\n\n        const response = await WS.statement(\n            batch_size,\n            this.data.length,\n            {\n                ...this.date_from && { date_from: moment(this.date_from).unix() },\n                ...this.date_to && { date_to: moment(this.date_to).add(1, 'd').subtract(1, 's').unix() },\n            },\n        );\n        this.statementHandler(response);\n    }\n\n    @action.bound\n    statementHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n\n        const formatted_transactions = response.statement.transactions\n            .map(transaction => formatStatementTransaction(transaction,\n                this.root_store.client.currency,\n            ));\n\n        this.data           = [...this.data, ...formatted_transactions];\n        this.has_loaded_all = formatted_transactions.length < batch_size;\n        this.is_loading     = false;\n    }\n\n    @action.bound\n    handleDateChange(e) {\n        if (e.target.value !== this[e.target.name]) {\n            this[e.target.name] = e.target.value;\n            this.clearTable();\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    handleScroll(event) {\n        const { scrollTop, scrollHeight, clientHeight } = event.target;\n        const left_to_scroll                            = scrollHeight - (scrollTop + clientHeight);\n\n        if (left_to_scroll < 2000) {\n            this.fetchNextBatch();\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise((resolve) => {\n            this.clearTable();\n            this.clearDateFilter();\n            return resolve(this.fetchNextBatch());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        this.onSwitchAccount(this.accountSwitcherListener);\n        await this.fetchNextBatch();\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        this.clearTable();\n        this.clearDateFilter();\n    }\n}\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => (\n    ContractType.getContractType(contract_types_list, contract_type)\n);\n\nexport const onChangeContractType = (store) => (\n    ContractType.getContractValues(store)\n);\n","import ContractType      from '../Helpers/contract_type';\nimport { getExpiryType } from '../Helpers/duration';\n\nexport const onChangeExpiry = (store) => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers = store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n","import { WS } from 'Services';\n\nexport const processPurchase = async(proposal_id, price) => WS.buy(proposal_id, price);\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeStartDate = (store) => {\n    const { contract_type, start_date, duration_unit, expiry_time } = store;\n    let { start_time, expiry_date } = store;\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type     = obj_contract_start_type.contract_start_type;\n    const obj_sessions            = ContractType.getSessions(contract_type, start_date);\n    const sessions                = obj_sessions.sessions;\n    const obj_start_time          = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time                    = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const obj_duration_unit       = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_date = ContractType.getExpiryDate(expiry_date, start_date);\n    expiry_date           = obj_expiry_date.expiry_date;\n    const obj_expiry_time = ContractType.getExpiryTime(sessions, start_date, start_time, expiry_date, expiry_time);\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_time,\n    };\n};\n","import ContractType from '../Helpers/contract_type';\n\nexport const onChangeSymbolAsync = async(symbol) => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize } from '_common/localize';\n\nexport const getLocalizedBasis = () => ({\n    payout    : localize('Payout'),\n    stake     : localize('Stake'),\n    multiplier: localize('Multiplier'),\n});\n\n/**\n * components can be undef or an array containing any of: 'start_date', 'barrier', 'last_digit'\n *     ['duration', 'amount'] are omitted, as they're available in all contract types\n */\nexport const getContractTypesConfig = () => (\n    {\n        rise_fall  : { title: localize('Rise/Fall'),                  trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['start_date'], barrier_count: 0 },\n        high_low   : { title: localize('Higher/Lower'),               trade_types: ['CALL', 'PUT'],               basis: ['payout', 'stake'], components: ['barrier'],    barrier_count: 1 },\n        touch      : { title: localize('Touch/No Touch'),             trade_types: ['ONETOUCH', 'NOTOUCH'],       basis: ['payout', 'stake'], components: ['barrier'] },\n        end        : { title: localize('Ends Between/Ends Outside'),  trade_types: ['EXPIRYMISS', 'EXPIRYRANGE'], basis: ['payout', 'stake'], components: ['barrier'] },\n        stay       : { title: localize('Stays Between/Goes Outside'), trade_types: ['RANGE', 'UPORDOWN'],         basis: ['payout', 'stake'], components: ['barrier'] },\n        asian      : { title: localize('Asians'),                     trade_types: ['ASIANU', 'ASIAND'],          basis: ['payout', 'stake'], components: [] },\n        match_diff : { title: localize('Matches/Differs'),            trade_types: ['DIGITMATCH', 'DIGITDIFF'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        even_odd   : { title: localize('Even/Odd'),                   trade_types: ['DIGITODD', 'DIGITEVEN'],     basis: ['payout', 'stake'], components: [] },\n        over_under : { title: localize('Over/Under'),                 trade_types: ['DIGITOVER', 'DIGITUNDER'],   basis: ['payout', 'stake'], components: ['last_digit'] },\n        lb_call    : { title: localize('Close-Low'),                  trade_types: ['LBFLOATCALL'],               basis: ['multiplier'],      components: [] },\n        lb_put     : { title: localize('High-Close'),                 trade_types: ['LBFLOATPUT'],                basis: ['multiplier'],      components: [] },\n        lb_high_low: { title: localize('High-Low'),                   trade_types: ['LBHIGHLOW'],                 basis: ['multiplier'],      components: [] },\n    }\n);\n\nexport const getContractCategoriesConfig = () => (\n    {\n        [localize('Up/Down')]       : ['rise_fall', 'high_low'],\n        [localize('Touch/No Touch')]: ['touch'],\n        [localize('In/Out')]        : ['end', 'stay'],\n        [localize('Asians')]        : ['asian'],\n        [localize('Digits')]        : ['match_diff', 'even_odd', 'over_under'],\n        // [localize('Lookback')]      : ['lb_call', 'lb_put', 'lb_high_low'],\n    }\n);\n","// list of trade's options that should be used in query string of trade page url.\nexport const allowed_query_string_variables = [\n    'amount',\n    'barrier_1',\n    'barrier_2',\n    'basis',\n    'contract_start_type',\n    'contract_type',\n    'duration',\n    'duration_unit',\n    'expiry_date',\n    'expiry_type',\n    'last_digit',\n    'start_date',\n    'symbol',\n];\n\nexport const non_proposal_query_string_variable = [\n    'contract_start_type',\n    'expiry_type',\n];\n\nexport const proposal_properties_alternative_names = {\n    barrier    : is_digit => is_digit ? 'last_digit' : 'barrier_1',\n    barrier2   : 'barrier_2',\n    date_expiry: 'expiry_date',\n    date_start : 'start_date',\n};\n\nexport const removable_proposal_properties = [\n    'currency',\n    'passthrough',\n    'proposal',\n    'req_id',\n    'subscribe',\n];\n","import Amount    from 'Modules/Trading/Components/Form/TradeParams/amount.jsx';\nimport Barrier   from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport Duration  from 'Modules/Trading/Components/Form/TradeParams/duration.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last_digit.jsx';\nimport StartDate from 'Modules/Trading/Components/Form/TradeParams/start_date.jsx';\n\nexport const form_components = [\n    { name: 'start_date', Component: StartDate },\n    { name: 'duration',   Component: Duration },\n    { name: 'barrier',    Component: Barrier },\n    { name: 'last_digit', Component: LastDigit },\n    { name: 'amount',     Component: Amount },\n];\n","import { localize } from '_common/localize';\n\nconst getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req'    , { message: localize('Amount is a required field.') }],\n            ['number' , { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom' , { func: (value, options, store, inputs) => store.barrier_count > 1 ? +value > +inputs.barrier_2 : true, message: localize('Higher barrier must be higher than lower barrier.') }],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            ['req'    , { condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1, message: localize('Barrier is a required field.') }],\n            ['barrier', { condition: store => store.contract_expiry_type !== 'daily' && store.barrier_count }],\n            ['number' , { condition: store => store.contract_expiry_type === 'daily' && store.barrier_count, type: 'float' }],\n            ['custom', { func: (value, options, store, inputs) => (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) || (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)), message: localize('Both barriers should be relative or absolute') }],\n            ['custom' , { func: (value, options, store, inputs) => +inputs.barrier_1 > +value, message: localize('Lower barrier must be lower than higher barrier.') }],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [\n            ['req'    , { message: localize('Duration is a required field.') }],\n        ],\n    },\n});\n\nexport default getValidationRules;\n","export const buildBarriersConfig = (contract, barriers = { count: contract.barriers }) => {\n    if (!contract.barriers) {\n        return undefined;\n    }\n\n    const obj_barrier = {};\n\n    ['barrier', 'low_barrier', 'high_barrier'].forEach((field) => {\n        if (field in contract) obj_barrier[field] = contract[field];\n    });\n\n    return Object.assign(barriers || {}, {\n        [contract.expiry_type]: obj_barrier,\n    });\n};\n","export const setChartBarrier = (SmartChartStore, proposal_response, onBarrierChange) => {\n    const { barrier, barrier2, contract_type } = proposal_response.echo_req;\n    SmartChartStore.createBarriers(\n        contract_type,\n        barrier,\n        barrier2,\n        onBarrierChange,\n    );\n};\n","import moment                    from 'moment';\nimport { localize }              from '_common/localize';\nimport {\n    cloneObject,\n    getPropertyValue }           from '_common/utility';\nimport { WS }                    from 'Services';\nimport { buildBarriersConfig }   from './barrier';\nimport { buildDurationConfig }   from './duration';\nimport {\n    buildForwardStartingConfig,\n    isSessionAvailable }         from './start_date';\nimport {\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis }          from '../Constants/contract';\n\nconst ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories     = {};\n    let contract_types;\n\n    const buildContractTypesConfig = (symbol) => WS.contractsFor(symbol).then(r => {\n        const contract_categories = getContractCategoriesConfig();\n        contract_types = getContractTypesConfig();\n\n        available_contract_types = {};\n        available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n\n        r.contracts_for.available.forEach((contract) => {\n            const type = Object.keys(contract_types).find(key => (\n                contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                (typeof contract_types[key].barrier_count === 'undefined' || +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n            ));\n\n            if (!type) return; // ignore unsupported contract types\n\n            /*\n            add to this config if a value you are looking for does not exist yet\n            accordingly create a function to retrieve the value\n            config: {\n                has_spot: 1,\n                durations: {\n                    min_max: {\n                        spot: {\n                            tick    : { min: 5,     max: 10 },    // value in ticks, as cannot convert to seconds\n                            intraday: { min: 18000, max: 86400 }, // all values converted to seconds\n                            daily   : { min: 86400, max: 432000 },\n                        },\n                        forward: {\n                            intraday: { min: 18000, max: 86400 },\n                        },\n                    },\n                    units_display: {\n                        spot: [\n                            { text: 'ticks',   value: 't' },\n                            { text: 'seconds', value: 's' },\n                            { text: 'minutes', value: 'm' },\n                            { text: 'hours',   value: 'h' },\n                            { text: 'days',    value: 'd' },\n                        ],\n                        forward: [\n                            { text: 'days',    value: 'd' },\n                        ],\n                    },\n                },\n                forward_starting_dates: [\n                    { text: 'Mon - 19 Mar, 2018', value: 1517356800, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Tue - 20 Mar, 2018', value: 1517443200, sessions: [{ open: obj_moment, close: obj_moment }] },\n                    { text: 'Wed - 21 Mar, 2018', value: 1517529600, sessions: [{ open: obj_moment, close: obj_moment }] },\n                ],\n                trade_types: {\n                    'CALL': 'Higher',\n                    'PUT' : 'Lower',\n                },\n                barriers: {\n                    count   : 2,\n                    tick    : { high_barrier: '+1.12', low_barrier : '-1.12' },\n                    intraday: { high_barrier: '+2.12', low_barrier : '-2.12' },\n                    daily   : { high_barrier: 1111,    low_barrier : 1093 },\n                },\n            }\n            */\n\n            if (!available_contract_types[type]) {\n                // extend contract_categories to include what is needed to create the contract list\n                const sub_cats = available_categories[Object.keys(available_categories)\n                    .find(key => available_categories[key].indexOf(type) !== -1)];\n\n                if (!sub_cats) return;\n\n                sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                // populate available contract types\n                available_contract_types[type] = cloneObject(contract_types[type]);\n            }\n            const config = available_contract_types[type].config || {};\n\n            // set config values\n            config.has_spot               = config.has_spot || contract.start_type === 'spot';\n            config.durations              = buildDurationConfig(contract, config.durations);\n            config.trade_types            = buildTradeTypesConfig(contract, config.trade_types);\n            config.barriers               = buildBarriersConfig(contract, config.barriers);\n            config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n\n            available_contract_types[type].config = config;\n        });\n\n        // cleanup categories\n        Object.keys(available_categories).forEach((key) => {\n            available_categories[key] = available_categories[key].filter(item => typeof item === 'object');\n            if (available_categories[key].length === 0) {\n                delete available_categories[key];\n            }\n        });\n    });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) => (\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0]\n    );\n\n    const getContractValues = (store) => {\n        const { contract_expiry_type, contract_type, basis, duration_unit, start_date } = store;\n        const form_components   = getComponents(contract_type);\n        const obj_basis         = getBasis(contract_type, basis);\n        const obj_trade_types   = getTradeTypes(contract_type);\n        const obj_start_dates   = getStartDates(contract_type, start_date);\n        const obj_start_type    = getStartType(obj_start_dates.start_date);\n        const obj_barrier       = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list    = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => ([...k, ...list[l].map(ct => ct.value)]), []);\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = (c_type) => ({ form_components: ['duration', 'amount', ...contract_types[c_type].components] });\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => ({\n        duration_units_list: getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [],\n    });\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'units_display', contract_start_type]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max = getPropertyValue(available_contract_types, [contract_type, 'config', 'durations', 'min_max', contract_start_type]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getStartType = (start_date) => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config           = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date) ?\n            current_start_date : start_dates_list[0].value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config   = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions =\n                  ((config.forward_starting_dates || []).find(option => option.value === start_date) || {}).sessions;\n        return { sessions };\n    };\n\n    const hours   = [...Array(24).keys()].map((a)=>`0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map((a)=>`0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) || compare_moment.format('HH'));\n                compare_moment.minute(minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm'));\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [ hour, minute ] = time.split(':');\n        return moment.utc(isNaN(date) ? date : +date * 1000).hour(hour).minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: getValidTime(sessions, buildMoment(start_date, start_time)),\n    });\n\n    const getExpiryDate = (expiry_date, start_date) => {\n        const moment_start  = moment.utc(start_date ? start_date * 1000 : undefined);\n        const moment_expiry = moment.utc(expiry_date || undefined);\n        // forward starting contracts should only show today and tomorrow as expiry date\n        const is_invalid = moment_expiry.isBefore(moment_start, 'day') || (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n        return {\n            expiry_date: (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD'),\n        };\n    };\n\n    // has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is after start time\n    const getExpiryTime = (sessions, start_date, start_time, expiry_date, expiry_time) => {\n        const start_moment = start_date ? buildMoment(start_date, start_time) : moment().utc();\n        const end_moment   = buildMoment(expiry_date, expiry_time);\n\n        let end_time = expiry_time;\n        if (sessions && !isSessionAvailable(sessions, end_moment)) {\n            end_time = getValidTime(sessions, end_moment, start_moment);\n        }\n        if (end_moment.isSameOrBefore(start_moment)) {\n            const is_end_of_day     = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n            const is_end_of_session = sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n            end_time = start_moment.clone().add((is_end_of_day || is_end_of_session) ? 0 : 5, 'minutes').format('HH:mm');\n        }\n        return { expiry_time: end_time };\n    };\n\n    const getTradeTypes = (contract_type) => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers       = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1      = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2      = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1    : barrier_1.toString(),\n            barrier_2    : barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis  = getPropertyValue(available_contract_types, [contract_type, 'basis']) || {};\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => (\n            [...cur, { text: localized_basis[bas], value: bas }]\n        ), []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getExpiryDate,\n        getExpiryTime,\n        getSessions,\n        getStartTime,\n        getStartType,\n\n        getContractCategories: () => ({ contract_types_list: available_categories }),\n    };\n})();\n\nexport default ContractType;\n","import { isCryptocurrency } from '_common/base/currency_base';\nimport { localize }         from '_common/localize';\n\nexport const buildCurrenciesList = (payout_currencies) => {\n    const fiat   = [];\n    const crypto = [];\n\n    payout_currencies.forEach((cur) => {\n        (isCryptocurrency(cur) ? crypto : fiat).push({ text: cur, value: cur });\n    });\n\n    return {\n        [localize('Fiat')]  : fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b]);\n    const default_currency =\n              supported_currencies.find(c => c.value === currency) ? currency : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\nconst getDurationMaps = () => ({\n    t: { display: localize('ticks'),   order: 1 },\n    s: { display: localize('seconds'), order: 2, to_second: 1 },\n    m: { display: localize('minutes'), order: 3, to_second: 60 },\n    h: { display: localize('hours'),   order: 4, to_second: 60 * 60 },\n    d: { display: localize('days'),    order: 5, to_second: 60 * 60 * 24 },\n});\n\nexport const buildDurationConfig = (contract, durations = { min_max: {}, units_display: {} }) => {\n    durations.min_max[contract.start_type]       = durations.min_max[contract.start_type] || {};\n    durations.units_display[contract.start_type] = durations.units_display[contract.start_type] || [];\n\n    const obj_min = getDurationFromString(contract.min_contract_duration);\n    const obj_max = getDurationFromString(contract.max_contract_duration);\n\n    durations.min_max[contract.start_type][contract.expiry_type] = {\n        min: convertDurationUnit(obj_min.duration, obj_min.unit, 's'),\n        max: convertDurationUnit(obj_max.duration, obj_max.unit, 's'),\n    };\n\n    const arr_units = [];\n    durations.units_display[contract.start_type].forEach(obj => {\n        arr_units.push(obj.value);\n    });\n\n    const duration_maps = getDurationMaps();\n\n    if (/^tick|daily$/.test(contract.expiry_type)) {\n        if (arr_units.indexOf(obj_min.unit) === -1) {\n            arr_units.push(obj_min.unit);\n        }\n    } else {\n        Object.keys(duration_maps).forEach(u => {\n            if (\n                u !== 'd' && // when the expiray_type is intraday, the supported units are seconds, minutes and hours.\n                arr_units.indexOf(u) === -1 &&\n                duration_maps[u].order >= duration_maps[obj_min.unit].order &&\n                duration_maps[u].order <= duration_maps[obj_max.unit].order) {\n                arr_units.push(u);\n            }\n        });\n    }\n\n    durations.units_display[contract.start_type] = arr_units\n        .sort((a, b) => (duration_maps[a].order > duration_maps[b].order ? 1 : -1))\n        .reduce((o, c) => (\n            [...o, { text: duration_maps[c].display, value: c }]\n        ), []);\n\n    return durations;\n};\n\nexport const convertDurationUnit = (value, from_unit, to_unit) => {\n    if (!value || !from_unit || !to_unit || isNaN(parseInt(value))) {\n        return null;\n    }\n\n    const duration_maps = getDurationMaps();\n\n    if (from_unit === to_unit || !('to_second' in duration_maps[from_unit])) {\n        return value;\n    }\n\n    return (value * duration_maps[from_unit].to_second) / duration_maps[to_unit].to_second;\n};\n\nconst getDurationFromString = (duration_string) => {\n    const duration = duration_string.toString().match(/[a-zA-Z]+|[0-9]+/g);\n    return {\n        duration: duration[0],\n        unit    : duration[1],\n    };\n};\n\nexport const getExpiryType = (store) => {\n    const { duration_unit, expiry_date, expiry_type } = store;\n    const server_time = store.root_store.common.server_time;\n\n    const duration_is_day       = expiry_type === 'duration' && duration_unit === 'd';\n    const expiry_is_after_today = expiry_type === 'endtime' && moment.utc(expiry_date).isAfter(moment(server_time).utc(), 'day');\n\n    let contract_expiry_type = 'daily';\n    if (!duration_is_day && !expiry_is_after_today) {\n        contract_expiry_type = duration_unit === 't' ? 'tick' : 'intraday';\n    }\n\n    return contract_expiry_type;\n};\n\nexport const convertDurationLimit = (value, unit) => {\n    if (!(value >= 0) || !unit || !Number.isInteger(value)) {\n        return null;\n    }\n\n    if (unit === 'm') {\n        const minute = value / 60;\n        return minute >= 1 ? Math.floor(minute) : 1;\n    } else if (unit === 'h') {\n        const hour = value / (60 * 60);\n        return hour >= 1 ? Math.floor(hour) : 1;\n    } else if (unit === 'd') {\n        const day = value / (60 * 60 * 24);\n        return day >= 1 ? Math.floor(day) : 1;\n    }\n\n    return value;\n};\n","import extend from 'extend';\n\nimport ContractTypeHelper from './contract_type';\nimport * as ContractType  from '../Actions/contract_type';\nimport * as Duration      from '../Actions/duration';\nimport * as StartDate     from '../Actions/start_date';\n\nexport const processTradeParams = async(store, new_state) => {\n    const snapshot = store.getSnapshot();\n\n    getMethodsList(store, new_state).forEach((fnc) => {\n        extendOrReplace(snapshot, fnc(snapshot));\n    });\n\n    return snapshot;\n};\n\nconst getMethodsList = (store, new_state) => ([\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type)\\b/.test(Object.keys(new_state)) || !store.contract_type ? // symbol/contract_type changed or contract_type not set yet\n        [ContractType.onChangeContractType] : []),\n    Duration.onChangeExpiry,\n    StartDate.onChangeStartDate,\n]);\n\n// Some values need to be replaced, not extended\nconst extendOrReplace = (source, new_values) => {\n    const to_replace = ['contract_types_list', 'duration_units_list', 'form_components', 'trade_types'];\n\n    to_replace.forEach((key) => {\n        if (key in new_values) {\n            source[key] = undefined;\n        }\n    });\n\n    extend(true, source, new_values);\n};\n","import moment                                                                   from 'moment';\nimport { getDecimalPlaces }                                                     from '_common/base/currency_base';\nimport { isDeepEqual }                                                          from '_common/utility';\nimport { convertToUnix }                                                        from 'Utils/Date';\nimport { proposal_properties_alternative_names, removable_proposal_properties } from '../Constants/query_string';\n\nexport const getProposalInfo = (store, response) => {\n    const proposal = response.proposal || {};\n    const profit   = (proposal.payout - proposal.ask_price) || 0;\n    const returns  = profit * 100 / (proposal.ask_price || 1);\n\n    return {\n        profit   : profit.toFixed(getDecimalPlaces(store.currency)),\n        returns  : `${returns.toFixed(2)}%`,\n        stake    : proposal.display_value,\n        payout   : proposal.payout,\n        id       : proposal.id || '',\n        message  : proposal.longcode || response.error.message,\n        has_error: !!response.error,\n    };\n};\n\nexport const createProposalRequests = (store) => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach((type) => {\n        const new_req     = createProposalRequestForContract(store, type);\n        const current_req = store.proposal_requests[type];\n        if (!isDeepEqual(new_req, current_req)) {\n            requests[type] = new_req;\n        }\n    });\n\n    return requests;\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_expiry = {};\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = moment.utc(store.expiry_date);\n        const start_date  = moment.unix(store.start_date || (store.root_store.common.server_time / 1000)).utc();\n        const is_same_day = expiry_date.isSame(start_date, 'day');\n        const expiry_time = is_same_day ? store.expiry_time : '23:59:59';\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), expiry_time);\n    }\n\n    return {\n        proposal     : 1,\n        subscribe    : 1,\n        amount       : parseFloat(store.amount),\n        basis        : store.basis,\n        contract_type: type_of_contract,\n        currency     : store.root_store.client.currency,\n        symbol       : store.symbol,\n        ...(\n            store.start_date &&\n            { date_start: convertToUnix(store.start_date, store.start_time) }\n        ),\n        ...(\n            store.expiry_type === 'duration' ?\n                {\n                    duration     : parseInt(store.duration),\n                    duration_unit: store.duration_unit,\n                }\n                :\n                obj_expiry\n        ),\n        ...(\n            (store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            { barrier: store.barrier_1 || store.last_digit }\n        ),\n        ...(\n            store.barrier_count === 2 &&\n            { barrier2: store.barrier_2 }\n        ),\n    };\n};\n\nexport const getProposalParametersName = (proposal_requests) => {\n    const proper_param_name = [];\n    const is_digit = Object.keys(proposal_requests)\n        .findIndex(i => i.toUpperCase().indexOf('DIGIT') > -1) > -1;\n\n    const keys = Object.keys(Object.values(proposal_requests)[0]);\n\n    keys.forEach(name => {\n        const alternative_name = proposal_properties_alternative_names[name];\n\n        if (alternative_name) {\n            proper_param_name.push(typeof alternative_name === 'string' ? alternative_name : alternative_name(is_digit));\n        } else if (removable_proposal_properties.indexOf(name) === -1) {\n            proper_param_name.push(name);\n        }\n    });\n\n    proper_param_name.sort();\n    return proper_param_name;\n};\n","import moment from 'moment';\n\nexport const buildForwardStartingConfig = (contract, forward_starting_dates) => {\n    const forward_starting_config = [];\n\n    if ((contract.forward_starting_options || []).length) {\n        contract.forward_starting_options.forEach(option => {\n            const duplicated_option = forward_starting_config.find(opt => opt.value === parseInt(option.date));\n            const current_session   = { open: moment.unix(option.open).utc(), close: moment.unix(option.close).utc() };\n            if (duplicated_option) {\n                duplicated_option.sessions.push(current_session);\n            } else {\n                forward_starting_config.push({\n                    text    : moment.unix(option.date).format('ddd - DD MMM, YYYY'),\n                    value   : parseInt(option.date),\n                    sessions: [current_session],\n                });\n            }\n        });\n    }\n\n    return forward_starting_config.length ? forward_starting_config : forward_starting_dates;\n};\n\n// returns false if same as now\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = moment.utc(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions               = [],\n    compare_moment         = moment.utc(),\n    start_moment           = moment.utc(),\n    should_only_check_hour = false,\n) => (\n    !isBeforeDate(compare_moment, undefined, should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n        (!sessions.length ||\n            !!sessions.find(session =>\n                compare_moment.isBetween(should_only_check_hour ? session.open.clone().minute(0) : session.open, session.close, null, '[]')))\n);\n","export const pickDefaultSymbol = (active_symbols = []) => {\n    if (!active_symbols.length) return '';\n    return active_symbols.filter(symbol_info => /major_pairs|random_index/.test(symbol_info.submarket))[0].symbol;\n};\n","import debounce                          from 'lodash.debounce';\nimport {\n    action,\n    observable,\n    reaction,\n    runInAction }                        from 'mobx';\nimport BinarySocket                      from '_common/base/socket_base';\nimport { localize }                      from '_common/localize';\nimport {\n    cloneObject,\n    isEmptyObject }                      from '_common/utility';\nimport {\n    getMinPayout,\n    isCryptocurrency }                   from '_common/base/currency_base';\nimport { WS }                            from 'Services';\nimport GTM                               from 'Utils/gtm';\nimport URLHelper                         from 'Utils/URL/url_helper';\nimport { processPurchase }               from './Actions/purchase';\nimport * as Symbol                       from './Actions/symbol';\nimport {\n    allowed_query_string_variables,\n    non_proposal_query_string_variable } from './Constants/query_string';\nimport getValidationRules                from './Constants/validation_rules';\nimport { setChartBarrier }               from './Helpers/chart';\nimport ContractType                      from './Helpers/contract_type';\nimport { convertDurationLimit }          from './Helpers/duration';\nimport { processTradeParams }            from './Helpers/process';\nimport {\n    createProposalRequests,\n    getProposalInfo,\n    getProposalParametersName }          from './Helpers/proposal';\nimport { pickDefaultSymbol }             from './Helpers/symbol';\nimport BaseStore                         from '../../base_store';\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    @observable is_trade_component_mounted = false;\n    @observable is_purchase_enabled        = false;\n    @observable is_trade_enabled           = false;\n\n    // Underlying\n    @observable symbol;\n\n    // Contract Type\n    @observable contract_expiry_type = '';\n    @observable contract_start_type  = '';\n    @observable contract_type        = '';\n    @observable contract_types_list  = {};\n    @observable form_components      = [];\n    @observable trade_types          = {};\n\n    // Amount\n    @observable amount          = 10;\n    @observable basis           = '';\n    @observable basis_list      = [];\n\n    // Duration\n    @observable duration            = 5;\n    @observable duration_unit       = '';\n    @observable duration_units_list = [];\n    @observable duration_min_max    = {};\n    @observable expiry_date         = '';\n    @observable expiry_time         = '09:40';\n    @observable expiry_type         = 'duration';\n\n    // Barrier\n    @observable barrier_1     = '';\n    @observable barrier_2     = '';\n    @observable barrier_count = 0;\n\n    // Start Time\n    @observable start_date       = Number(0); // Number(0) refers to 'now'\n    @observable start_dates_list = [];\n    @observable start_time       = '12:30';\n    @observable sessions         = [];\n\n    // Last Digit\n    @observable last_digit = 5;\n\n    // Purchase\n    @observable proposal_info = {};\n    @observable purchase_info = {};\n\n    // Chart\n    chart_id = 1;\n\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    @action.bound\n    init = async () => {\n        // To be sure that the website_status response has been received before processing trading page.\n        await BinarySocket.wait('website_status');\n    };\n\n    constructor({ root_store }) {\n        URLHelper.pruneQueryString(allowed_query_string_variables);\n\n        super({\n            root_store,\n            session_storage_properties: allowed_query_string_variables,\n            validation_rules          : getValidationRules(),\n        });\n\n        Object.defineProperty(\n            this,\n            'is_query_string_applied',\n            {\n                enumerable: false,\n                value     : false,\n                writable  : true,\n            },\n        );\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            },\n        );\n    }\n\n    @action.bound\n    refresh() {\n        this.symbol = null;\n        WS.forgetAll('proposal');\n    }\n\n    @action.bound\n    async prepareTradeStore() {\n        let query_string_values = this.updateQueryString();\n        this.smart_chart        = this.root_store.modules.smart_chart;\n        const active_symbols    = await WS.activeSymbols();\n        if (!active_symbols.active_symbols || active_symbols.active_symbols.length === 0) {\n            this.root_store.common.showError(localize('Trading is unavailable at this time.'));\n        }\n\n        // Checks for finding out that the current account has access to the defined symbol in quersy string or not.\n        const is_invalid_symbol = !!query_string_values.symbol &&\n            !active_symbols.active_symbols.find(s => s.symbol === query_string_values.symbol);\n\n        // Changes the symbol in query string to default symbol since the account doesn't have access to the defined symbol.\n        if (is_invalid_symbol) {\n            this.root_store.ui.addToastMessage({\n                message: localize('Certain trade parameters have been changed due to your account settings.'),\n                type   : 'info',\n            });\n            URLHelper.setQueryParam({ 'symbol': pickDefaultSymbol(active_symbols.active_symbols) });\n            query_string_values = this.updateQueryString();\n        }\n\n        if (!this.symbol) {\n            await this.processNewValuesAsync({\n                symbol: pickDefaultSymbol(active_symbols.active_symbols),\n                ...query_string_values,\n            });\n        }\n\n        if (this.symbol) {\n            ContractType.buildContractTypesConfig(query_string_values.symbol || this.symbol).then(action(async () => {\n                await this.processNewValuesAsync({\n                    ...ContractType.getContractValues(this),\n                    ...ContractType.getContractCategories(),\n                    ...query_string_values,\n                });\n            }));\n        }\n    }\n\n    @action.bound\n    onChange(e) {\n        const { name, value } = e.target;\n        if (name === 'currency') {\n            this.root_store.client.selectCurrency(value);\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        this.processNewValuesAsync({ [name]: value }, true);\n    }\n\n    @action.bound\n    onHoverPurchase(is_over, contract_type) {\n        this.smart_chart.updateBarrierShade(is_over, contract_type);\n    }\n\n    @action.bound\n    onPurchase(proposal_id, price, type) {\n        if (proposal_id) {\n            processPurchase(proposal_id, price).then(action((response) => {\n                if (this.proposal_info[type].id !== proposal_id) {\n                    throw new Error('Proposal ID does not match.');\n                }\n                if (response.buy) {\n                    const contract_data = {\n                        ...this.proposal_requests[type],\n                        ...this.proposal_info[type],\n                        buy_price: response.buy.buy_price,\n                    };\n                    GTM.pushPurchaseData(contract_data, this.root_store);\n                }\n                WS.forgetAll('proposal');\n                this.purchase_info = response;\n            }));\n        }\n    }\n\n    @action.bound\n    onClickNewTrade(e) {\n        this.requestProposal();\n        e.preventDefault();\n    }\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    @action.bound\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state)).forEach((key) => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled    = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                // Add changes to queryString of the url\n                if (\n                    allowed_query_string_variables.indexOf(key) !== -1 &&\n                    this.is_trade_component_mounted\n                ) {\n                    URLHelper.setQueryParam({ [key]: new_state[key] });\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n\n        return new_state;\n    }\n\n    async processNewValuesAsync(obj_new_values = {}, is_changed_by_user = false) {\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (is_changed_by_user &&\n            /\\bcurrency\\b/.test(Object.keys(obj_new_values)) &&\n            isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(this.currency)\n        ) {\n            obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n        }\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            if ('symbol' in new_state) {\n                await Symbol.onChangeSymbolAsync(new_state.symbol);\n            }\n\n            this.updateStore({ // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info      : {},\n            });\n\n            if (!this.smart_chart.is_contract_mode) {\n                const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n                if (is_barrier_changed) {\n                    this.smart_chart.updateBarriers(this.barrier_1, this.barrier_2);\n                } else {\n                    this.smart_chart.removeBarriers();\n                }\n            }\n\n            const snapshot            = await processTradeParams(this, new_state);\n            const query_string_values = this.updateQueryString();\n            snapshot.is_trade_enabled = true;\n\n            this.updateStore({\n                ...snapshot,\n                ...(this.is_query_string_applied ? {} : query_string_values), // Applies the query string values again to set barriers.\n            });\n\n            this.is_query_string_applied = true;\n\n            if (/\\bcontract_type\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n\n            this.debouncedProposal();\n        }\n    }\n\n    @action.bound\n    requestProposal() {\n        const requests = createProposalRequests(this);\n\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            WS.forgetAll('proposal');\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            const proper_proposal_params_for_query_string = getProposalParametersName(requests);\n\n            URLHelper.pruneQueryString(\n                [\n                    ...proper_proposal_params_for_query_string,\n                    ...non_proposal_query_string_variable,\n                ],\n            );\n\n            this.proposal_requests = requests;\n            this.proposal_info     = {};\n            this.purchase_info     = {};\n\n            WS.forgetAll('proposal').then(() => {\n                Object.keys(this.proposal_requests).forEach((type) => {\n                    WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n                });\n            });\n        }\n    }\n\n    @action.bound\n    onProposalResponse(response) {\n        const contract_type = response.echo_req.contract_type;\n        this.proposal_info  = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response),\n        };\n\n        if (!this.smart_chart.is_contract_mode) {\n            setChartBarrier(this.smart_chart, response, this.onChartBarrierChange);\n        }\n\n        this.is_purchase_enabled = true;\n    }\n\n    @action.bound\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    @action.bound\n    updateQueryString() {\n\n        // Update the url's query string by default values of the store\n        const query_params = URLHelper.updateQueryString(\n            this,\n            allowed_query_string_variables,\n            this.is_trade_component_mounted,\n        );\n\n        // update state values from query string\n        const config = {};\n        [...query_params].forEach(param => config[param[0]] = param[1]);\n        return config;\n    }\n\n    @action.bound\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        const index  = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    @action.bound\n    accountSwitcherListener() {\n        return new Promise(async (resolve) => {\n            await this.refresh();\n            await this.prepareTradeStore();\n            return resolve(this.debouncedProposal());\n        });\n    }\n\n    @action.bound\n    async onMount() {\n        await this.prepareTradeStore();\n        this.debouncedProposal();\n        runInAction(() => {\n            this.is_trade_component_mounted = true;\n        });\n        this.updateQueryString();\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n        WS.forgetAll('proposal');\n        this.is_trade_component_mounted = false;\n    }\n}\n","import ContractStore   from './Contract/contract_store';\nimport PortfolioStore  from './Portfolio/portfolio_store';\nimport SmartChartStore from './SmartChart/smart_chart_store';\nimport StatementStore  from './Statement/statement_store';\nimport TradeStore      from './Trading/trade_store';\n\nexport default class ModulesStore {\n    constructor(root_store) {\n        this.contract    = new ContractStore({ root_store });\n        this.portfolio   = new PortfolioStore({ root_store });\n        this.smart_chart = new SmartChartStore({ root_store });\n        this.statement   = new StatementStore({ root_store });\n        this.trade       = new TradeStore({ root_store });\n    }\n}\n","import {\n    action,\n    intercept,\n    observable,\n    reaction,\n    toJS,\n    when }               from 'mobx';\nimport { isEmptyObject } from '_common/utility';\nimport Validator         from 'Utils/Validator';\nimport { isProduction }  from '../../config';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE  : Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    @observable\n    validation_errors = {};\n\n    @observable\n    validation_rules = {};\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     */\n    constructor(options = {}) {\n        const {\n            root_store,\n            local_storage_properties,\n            session_storage_properties,\n            validation_rules,\n        } = options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable  : true,\n        });\n\n        this.root_store                 = root_store;\n        this.local_storage_properties   = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n        this.setValidationRules(validation_rules);\n\n        this.setupReactionForLocalStorage();\n        this.setupReactionForSessionStorage();\n        this.retrieveFromStorage();\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce(\n                (result, p) => Object.assign(result, { [p]: snapshot[p] }),\n                {},\n            );\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE),\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties));\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.constructor.name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.constructor.name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    @action\n    retrieveFromStorage() {\n        const local_storage_snapshot   = JSON.parse(localStorage.getItem(this.constructor.name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.constructor.name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach((k) => this[k] = snapshot[k]);\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param {String} messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    @action\n    setValidationErrorMessages(propertyName, messages) {\n        this.validation_errors[propertyName] = messages;\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    @action\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    @action\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    @action\n    validateProperty(property, value) {\n        const trigger          = this.validation_rules[property].trigger;\n        const inputs           = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: (this.validation_rules[property].rules || []) };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger]           = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(\n            inputs,\n            validation_rules,\n            this,\n        );\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    @action\n    validateAllProperties() {\n        this.validation_errors = {};\n        Object.keys(this.validation_rules).forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n    }\n\n    @action.bound\n    onSwitchAccount(listener) {\n        this.switchAccountDisposer = when(\n            () => this.root_store.client.switch_broadcast,\n            async () => {\n                try {\n                    const result = this.switch_account_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.switchEndSignal();\n                            this.onSwitchAccount(this.switch_account_listener);\n                        });\n                    } else {\n                        throw new Error('Switching account listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            },\n        );\n        this.switch_account_listener = listener;\n    }\n\n    @action.bound\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    @action.bound\n    onUnmount() {\n        this.disposeSwitchAccount();\n    }\n\n}\n\n","import {\n    action,\n    computed,\n    observable,\n    when }                     from 'mobx';\nimport moment                  from 'moment';\nimport {\n    requestLogout,\n    WS }                       from 'Services';\nimport { getAccountTitle }     from '_common/base/client_base';\nimport GTM                     from '_common/base/gtm';\nimport BinarySocket            from '_common/base/socket_base';\nimport * as SocketCache        from '_common/base/socket_cache';\nimport { localize }            from '_common/localize';\nimport {\n    LocalStore,\n    State }                    from '_common/storage';\nimport BaseStore               from './base_store';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\n\nconst storage_key = 'client.accounts';\nexport default class ClientStore extends BaseStore {\n    @observable loginid;\n    @observable upgrade_info;\n    @observable accounts;\n    @observable switched         = '';\n    @observable switch_broadcast = false;\n    @observable currencies_list  = {};\n    @observable selected_currency = '';\n\n    constructor(root_store) {\n        super({ root_store });\n    }\n\n    @computed\n    get balance() {\n        if (!this.accounts) return '';\n        return (this.accounts[this.loginid] && this.accounts[this.loginid].balance) ?\n            this.accounts[this.loginid].balance.toString() :\n            '';\n    }\n\n    /**\n     * Temporary property. should be removed once we are fully migrated from the old app.\n     *\n     * @returns {boolean}\n     */\n    @computed\n    get is_client_allowed_to_visit() {\n        return !!(\n            !this.is_logged_in || this.is_virtual ||\n            this.accounts[this.loginid].landing_company_shortcode === 'costarica'\n        );\n    }\n\n    @computed\n    get account_list() {\n        return this.all_loginids.map(id => (\n            id !== this.loginid &&\n            !this.isDisabled(id) &&\n            this.getToken(id) ?\n                this.getAccountInfo(id) :\n                undefined\n        )).filter(account => account);\n    }\n\n    @computed\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    @computed\n    get all_loginids() {\n        return this.accounts instanceof Object ? Object.keys(this.accounts) : [];\n    }\n\n    @computed\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    @computed\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n        return this.default_currency;\n\n    }\n\n    @computed\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        } return 'USD';\n    }\n\n    @computed\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MX|MF|VRTC|MLT|CR|FOG)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    @computed\n    get is_logged_in() {\n        return !!(\n            this.accounts instanceof Object &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    @computed\n    get is_virtual() {\n        return !!this.accounts[this.loginid].is_virtual;\n    }\n\n    @computed\n    get can_upgrade() {\n        return this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi;\n    }\n\n    @computed\n    get virtual_account_loginid() {\n        return this.all_loginids\n            .filter(loginid => !!this.accounts[loginid].is_virtual)\n            .reduce(loginid => loginid);\n    }\n\n    @computed\n    get is_single_currency() {\n        return Object.keys(this.currencies_list).map(type => Object.values(this.currencies_list[type]).length)\n            .reduce((acc, cur) => acc + cur, 0) === 1;\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    @action.bound\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].cashier_confirmed = 0;\n        this.accounts[loginid].accepted_bch      = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.loginid = loginid;\n    }\n\n    @action.bound\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = State.getResponse('authorize.upgradeable_landing_companies');\n        let can_open_multi                  = false;\n        let type,\n            can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi   = upgradeable_landing_companies.indexOf(\n                this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) => landing_companies.find(landing_company => (\n                landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                upgradeable_landing_companies.indexOf(landing_company) !== -1\n            ));\n            can_upgrade_to   = canUpgrade('costarica', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    @action.bound\n    responsePayoutCurrencies(response) {\n        const list = response.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(list);\n        this.selectCurrency('');\n    }\n\n    @action.bound\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email                     = response.authorize.email;\n        this.accounts[this.loginid].currency                  = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual                = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start             = parseInt(moment().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.updateAccountList(response.authorize.account_list);\n    }\n\n    @action.bound\n    updateAccountList(account_list) {\n        account_list.forEach((account) => {\n            this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n            Object.keys(account).forEach((param) => {\n                const param_to_set = param === 'country' ? 'residence' : param;\n                const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                if (param_to_set !== 'loginid') {\n                    this.accounts[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    @action.bound\n    switchAccount(loginid) {\n        this.switched = loginid;\n    }\n\n    @action.bound\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     * This will probably be the only place we are fetching data from Client_base.\n     */\n    @action.bound\n    async init() {\n        this.loginid      = LocalStore.get('active_loginid');\n        this.accounts     = LocalStore.getObject(storage_key);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.switched     = '';\n\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.payoutCurrencies());\n\n        this.registerReactions();\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account      = this.getAccount(loginid);\n        const currency     = account.currency;\n        const is_virtual   = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : getAccountTitle(loginid);\n\n        return {\n            loginid,\n            is_virtual,\n            icon : account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    @action.bound\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    @action.bound\n    async switchAccountHandler () {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched).token) {\n            // Logout if the switched_account doesn't belong to any loginid.\n            if (!this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid) {\n                this.root_store.ui.addToastMessage({\n                    message: localize('Could not switch to default account.'),\n                    type   : 'error',\n                });\n                // request a logout\n                requestLogout();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.ui.addToastMessage({\n                message: localize('Switching to default account.'),\n                type   : 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n        sessionStorage.setItem('active_tab', '1');\n        // set local storage\n        GTM.setLoginFlag();\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n        await BinarySocket.send({ 'authorize': this.getToken() }, { forced: true });\n        await this.init();\n        this.broadcastAccountChange();\n    }\n\n    @action.bound\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            this.switchAccountHandler\n        );\n    }\n\n    @action.bound\n    setBalance(balance) {\n        this.accounts[this.loginid].balance = balance;\n    }\n\n    @action.bound\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    @action.bound\n    setResidence(residence) {\n        this.accounts[this.loginid].residence = residence;\n    }\n\n    @action.bound\n    setEmail(email) {\n        this.accounts[this.loginid].email = email;\n    }\n}\n","import {\n    action,\n    observable }           from 'mobx';\nimport moment              from 'moment';\nimport { currentLanguage } from 'Utils/Language/index';\nimport BaseStore           from './base_store';\n\nexport default class CommonStore extends BaseStore {\n    @observable server_time      = moment.utc();\n    @observable current_language = currentLanguage;\n    @observable has_error        = false;\n\n    @observable error = {\n        type   : 'info',\n        message: '',\n    };\n\n    @observable network_status    = {};\n    @observable is_network_online = false;\n    @observable is_socket_opened  = false;\n\n    @action.bound\n    setIsSocketOpened(is_socket_opened) {\n        this.is_socket_opened = is_socket_opened;\n    }\n\n    @action.bound\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error     = {\n            type   : error ? error.type : 'info',\n            message: error ? error.message : '',\n        };\n    }\n\n    @action.bound\n    showError(message) {\n        this.setError(true, {\n            message,\n            type: 'error',\n        });\n    }\n}\n","import {\n    inject,\n    Provider,\n    observer }   from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React     from 'react';\n\nconst SPECIAL_REACT_KEYS = { children: true, key: true, ref: true };\n\nexport class MobxProvider extends Provider {\n    getChildContext() {\n        const stores = {};\n\n        // inherit stores\n        const baseStores = this.context.mobxStores;\n        if (baseStores) {\n            for (const key in baseStores) { // eslint-disable-line\n                stores[key] = baseStores[key];\n            }\n        }\n\n        // add own stores\n        for (const key in this.props.store) { // eslint-disable-line\n            if (!SPECIAL_REACT_KEYS[key]) {\n                stores[key] = this.props.store[key];\n            }\n        }\n\n        return {\n            mobxStores: stores,\n            ...stores,\n        };\n    }\n\n    static childContextTypes = {\n        mobxStores: PropTypes.object,\n        client    : PropTypes.object,\n        common    : PropTypes.object,\n        modules   : PropTypes.object,\n        ui        : PropTypes.object,\n    };\n}\n\nconst connect_global_store = (mapper) => Component => inject(mapper)(observer(Component));\n\nexport const connect = (StoreClass, mapper) => Component => {\n    if (!mapper) {\n        return connect_global_store(StoreClass)(Component);\n    }\n\n    const observed = observer(Component);\n\n    class StoredComponent extends Component {\n        store = new StoreClass();\n\n        render() {\n            return React.createElement(\n                observed,\n                {\n                    ...this.props,\n                    store: this.store,\n                },\n                this.props.children,\n            );\n        }\n\n        propTypes = {\n            children: PropTypes.object,\n        }\n    }\n\n    const wrappedDisplayName = Component.displayName\n        || Component.name\n        || (Component.constructor && Component.constructor.name)\n        || 'Unknown';\n    StoredComponent.displayName = `store-${wrappedDisplayName}`;\n\n    return inject(mapper)(StoredComponent);\n};\n","import ClientStore  from './client_store';\nimport CommonStore  from './common_store';\nimport ModulesStore from './Modules';\nimport UIStore      from './ui_store';\n\nexport default class RootStore {\n    constructor() {\n        this.client  = new ClientStore(this);\n        this.common  = new CommonStore();\n        this.modules = new ModulesStore(this);\n        this.ui      = new UIStore();\n    }\n}\n","import {\n    action,\n    autorun,\n    computed,\n    observable }       from 'mobx';\nimport {\n    MAX_MOBILE_WIDTH,\n    MAX_TABLET_WIDTH } from 'Constants/ui';\nimport BaseStore       from './base_store';\n\nexport default class UIStore extends BaseStore {\n    @observable is_main_drawer_on          = false;\n    @observable is_notifications_drawer_on = false;\n    @observable is_portfolio_drawer_on     = false;\n\n    @observable is_dark_mode_on         = true;\n    @observable is_language_dialog_on   = false;\n    @observable is_settings_dialog_on   = false;\n    @observable is_accounts_switcher_on = false;\n\n    // Purchase Controls\n    @observable is_purchase_confirm_on = false;\n    @observable is_purchase_lock_on    = false;\n\n    // SmartCharts Controls\n    @observable is_chart_asset_info_visible = true;\n    @observable is_chart_countdown_visible  = false;\n    @observable is_chart_layout_default     = true;\n\n    // PWA event and config\n    @observable is_install_button_visible = false;\n    @observable pwa_prompt_event          = null;\n\n    @observable screen_width = window.innerWidth;\n\n    @observable toast_messages = [];\n\n    constructor() {\n        const local_storage_properties = [\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_portfolio_drawer_on',\n            'is_purchase_confirm_on',\n            'is_purchase_lock_on',\n        ];\n\n        super({ local_storage_properties });\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => document.body.classList[this.is_dark_mode_on ? 'add' : 'remove']('dark'));\n    }\n\n    @action.bound\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        if (this.is_mobile) {\n            this.is_portfolio_drawer_on = false;\n        }\n    }\n\n    @computed\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    @computed\n    get is_tablet() {\n        return this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    @action.bound\n    toggleAccountsDialog() {\n        this.is_accounts_switcher_on = !this.is_accounts_switcher_on;\n    }\n\n    @action.bound\n    toggleChartLayout() {\n        this.is_chart_layout_default = !this.is_chart_layout_default;\n    }\n\n    @action.bound\n    toggleChartAssetInfo() {\n        this.is_chart_asset_info_visible = !this.is_chart_asset_info_visible;\n    }\n\n    @action.bound\n    toggleChartCountdown() {\n        this.is_chart_countdown_visible = !this.is_chart_countdown_visible;\n    }\n\n    @action.bound\n    togglePurchaseLock() {\n        this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    }\n\n    @action.bound\n    togglePurchaseConfirmation() {\n        this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    }\n\n    @action.bound\n    toggleDarkMode() {\n        this.is_dark_mode_on = !this.is_dark_mode_on;\n    }\n\n    @action.bound\n    toggleSettingsDialog() {\n        this.is_settings_dialog_on = !this.is_settings_dialog_on;\n        if (!this.is_settings_dialog_on) this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    showLanguageDialog() {\n        this.is_language_dialog_on = true;\n    }\n\n    @action.bound\n    hideLanguageDialog() {\n        this.is_language_dialog_on = false;\n    }\n\n    @action.bound\n    togglePortfolioDrawer() { // show and hide Portfolio Drawer\n        this.is_portfolio_drawer_on = !this.is_portfolio_drawer_on;\n    }\n\n    @action.bound\n    showMainDrawer() { // show main Drawer\n        this.is_main_drawer_on = true;\n    }\n\n    @action.bound\n    showNotificationsDrawer() { // show nofitications Drawer\n        this.is_notifications_drawer_on = true;\n    }\n\n    @action.bound\n    hideDrawers() { // hide both menu drawers\n        this.is_main_drawer_on = false;\n        this.is_notifications_drawer_on = false;\n    }\n\n    @action.bound\n    showInstallButton() {\n        this.is_install_button_visible = true;\n    }\n\n    @action.bound\n    hideInstallButton() {\n        this.is_install_button_visible = false;\n        this.pwa_prompt_event = null;\n    }\n\n    @action.bound\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    @action.bound\n    addToastMessage(toast_message) {\n        this.toast_messages.push(toast_message);\n    }\n\n    @action.bound\n    removeToastMessage(toast_message) {\n        const index = this.toast_messages.indexOf(toast_message);\n        if (index > -1) {\n            this.toast_messages.splice(index, 1);\n        }\n    }\n\n    @action.bound\n    removeAllToastMessages() {\n        this.toast_messages = [];\n    }\n}\n","import moment       from 'moment';\nimport { localize } from '_common/localize';\n\n/**\n * Convert epoch to moment object\n * @param  {Number} epoch\n * @return {moment} the moment object of provided epoch\n */\nexport const toMoment = epoch => moment.unix(epoch).utc();\n\n/**\n * Set specified time on moment object\n * @param  {moment} moment_obj  the moment to set the time on\n * @param  {String} time        24 hours format, may or may not include seconds\n * @return {moment} a new moment object of result\n */\nconst setTime = (moment_obj, time) => {\n    const [hour, minute, second] = time.split(':');\n    moment_obj.hour(hour).minute(minute || 0).second(second || 0);\n    return moment_obj;\n};\n\n/**\n * return the unix value of provided epoch and time\n * @param  {Number} epoch  the date to update with provided time\n * @param  {String} time   the time to set on the date\n * @return {Number} unix value of the result\n */\nexport const convertToUnix = (epoch, time) => setTime(toMoment(epoch), time).unix();\n\nexport const toGMTFormat = (time) => moment(time || undefined).utc().format('YYYY-MM-DD HH:mm:ss [GMT]');\n\nexport const formatDate = (date, date_format = 'YYYY-MM-DD') => moment(date || undefined, date_format).format(date_format);\n\n/**\n * return the number of days from today to date specified\n * @param  {String} date   the date to calculate number of days from today\n * @return {Number} an integer of the number of days\n */\nexport const daysFromTodayTo = (date) => {\n    const diff = moment(date).utc().diff(moment().utc(), 'days');\n    return (!date || diff < 0) ? '' : diff + 1;\n};\n\n/**\n * return moment duration between two dates\n * @param  {Number} epoch start time\n * @param  {Number} epoch end time\n * @return {moment.duration} moment duration between start time and end time\n */\nexport const getDiffDuration = (start_time, end_time) =>\n    moment.duration(moment.unix(end_time).diff(moment.unix(start_time)));\n\n/**\n * return formatted duration `2 days 01:23:59`\n * @param  {moment.duration} moment duration object\n * @return {String} formatted display string\n */\nexport const formatDuration = (duration) => {\n    const d = Math.floor(duration.asDays()); // duration.days() does not include months/years\n    const h = duration.hours();\n    const m = duration.minutes();\n    const s = duration.seconds();\n    let formatted_str = moment(0).hour(h).minute(m).seconds(s).format('HH:mm:ss');\n    if (d > 0) {\n        formatted_str = `${d} ${d > 1 ? localize('days') : localize('day')} ${formatted_str}`;\n    }\n    return formatted_str;\n};\n","export * from './date_time';\n","export const setStorageEvents = () => {\n    window.addEventListener('storage', (evt) => {\n        switch (evt.key) {\n            case 'active_loginid':\n                if (document.hidden && (evt.newValue === '' || !window.is_logging_in)) {\n                    window.location.reload();\n                }\n                break;\n            // no default\n        }\n    });\n};\n","import React from 'react';\n\nconst convertObjectToReactElement = (props) => {\n    const { tagName, ...other_props } = props;\n\n    if (!tagName) throw new Error('Missing tagName');\n\n    return React.createElement(\n        tagName.toLowerCase(),\n        other_props,\n    );\n};\n\nexport const fillTemplate = (template, replacers) => {\n    const res       = [];\n    let str         = template;\n    let open_tag_id = null;\n\n    while (str.length) {\n        const match = str.match(/\\[_(\\d+)\\]/);\n\n        if (!match) {\n            res.push(str);\n            break;\n        }\n\n        const {\n            0: tag,\n            1: tag_id,\n            index,\n        } = match;\n\n        const before = str.slice(0, index);\n        str = str.slice(index + tag.length);\n\n        if (open_tag_id) {\n            const pair_code = `${open_tag_id}_${tag_id}`;\n            const element   = replacers[pair_code];\n            const wrapper   = React.isValidElement(element) ? element : convertObjectToReactElement(element);\n\n            if (!React.isValidElement(wrapper)) throw new Error(`Localize: pair tag ${pair_code} must be replaced with a react element.`);\n            if (!wrapper) throw new Error(`Localize: no ${open_tag_id} or ${pair_code} replacer for \"${template}\" template.`);\n\n            res.push(React.cloneElement(wrapper, { key: index, children: before }));\n            open_tag_id = null;\n        } else {\n            if (before.length) res.push(before);\n\n            if (tag_id in replacers) {\n                res.push(replacers[tag_id]);\n            } else {\n                open_tag_id = tag_id;\n            }\n        }\n    }\n    if (open_tag_id) throw new Error(`Localize: no ${open_tag_id} replacer for \"${template}\" template.`);\n\n    // concat adjacent strings in result array\n    return res.reduce((arr, current) => {\n        const last = arr[arr.length - 1];\n        if (typeof last === 'string' && typeof current === 'string') {\n            arr[arr.length - 1] = last + current;\n        } else {\n            arr.push(current);\n        }\n        return arr;\n    }, []);\n};\n","export * from './language';\n","import { get, getAll, urlFor } from '_common/language';\n\nexport const currentLanguage = get();\n\nexport const getAllowedLanguages = () => {\n    const exclude_languages = ['ACH'];\n    const language_list = Object.keys(getAll())\n        .filter(key => !(exclude_languages.includes(key)))\n        .reduce((obj, key) => {\n            obj[key] = getAll()[key];\n            return obj;\n        }, {});\n\n    return language_list;\n};\n\nexport const getURL = lang => urlFor(lang);\n","/**\n * Returns an object that maps component properties to corresponding values from the store\n * @param  {Object} Component - the react presentational component\n * @param  {Object} stores    - the store objects to look for the property to get its value\n * @return {Object}\n */\nexport const getComponentProperties = (Component, ...stores) => (\n    Object.getOwnPropertyNames(Component.propTypes || {}).reduce(\n        (acc, prop) => ({\n            ...acc,\n            ...getPropFromStores(prop, ...stores),\n        }),\n        {}\n    )\n);\n\n/**\n * Find the property among provided stores and return an object {prop: value}\n * @param  {Object} stores - the store objects to look for the property to get its value\n * @param  {String} prop   - the property to find among stores\n * @return {Object}\n */\nconst getPropFromStores = (prop, ...stores) => {\n    const store = stores.find(item => prop in item) || {};\n    return (prop in store ? { [prop]: store[prop] } : {});\n};\n","import { getAll as getAllLanguages } from '_common/language';\n\n/*\n * Retrieves basename from current url\n *\n * @return {string} returns the basename of current url\n */\nconst getBaseName = () => {\n    const regex_string = `(.*app/(${Object.keys(getAllLanguages()).join('|')})(/index\\\\.html)?).*`;\n    const basename = new RegExp(regex_string, 'ig').exec(window.location.pathname);\n\n    if (basename && basename.length) {\n        return basename[1];\n    }\n\n    return '/app/en/';\n};\n\nexport default getBaseName;\n","import { isEmptyObject } from '_common/utility';\n\nexport default class URLHelper {\n    /**\n     * Get query string of the url\n     *\n     * @param {String|null} url\n     *\n     * @return {Object} returns a key-value object that contains all query string of the url.\n     */\n    static getQueryParams(url) {\n        const query_string =  url ? new URL(url).search : window.location.search;\n        const query_params = new URLSearchParams(query_string.slice(1));\n\n        return query_params;\n    }\n\n    /**\n     * append params to url query string\n     *\n     * @param {Object} params - a key value object that contains all query strings should be added to the url\n     * @param {String} url - the url that should query strings add to\n     *\n     * @return {Object} returns modified url object.\n     */\n    static setQueryParam(params, url = null) {\n        const url_object = url ? new URL(url) : window.location;\n        const param_object = new URLSearchParams(url_object.search.slice(1));\n        Object.keys(params).forEach((name) => {\n            param_object.delete(name);\n\n            const value = params[name];\n\n            if (value && typeof value !== 'object' && value !== '') {\n                param_object.append(name, params[name]);\n            }\n        });\n\n        if (param_object.length) {\n            param_object.sort();\n        }\n\n        if (!url) {\n            window.history.replaceState(null, null, `?${param_object.toString()}`);\n        } else {\n            url_object.search = param_object.toString();\n        }\n\n        return url_object;\n    }\n\n    /**\n     * Update query string by values of passing object\n     *\n     * @param {Object} store - an object that contains values which should be added to the query string\n     * @param {string[]} allowed_query_string_variables - a list of variables those are allowed to add to query string.\n     *\n     * @return {Object} returns an iterator object of updated query string\n     */\n    static updateQueryString(store, allowed_query_string_variables, set_query_string = false) {\n        const query_params = URLHelper.getQueryParams();\n\n        if (!isEmptyObject(store)) {\n\n            // create query string by default values in trade_store if the param doesn't exist in query string.\n            allowed_query_string_variables\n                .filter(p => !query_params.get(p)).forEach(key => {\n                    if (store[key]) {\n                        if (set_query_string) {\n                            URLHelper.setQueryParam({ [key]: store[key] });\n                        }\n\n                        query_params.set(key, store[key]);\n                    }\n                });\n        }\n\n        return query_params;\n    }\n\n    /**\n     * Prunes the query string values\n     *\n     * @param {string[]} keys - A list of variable's name which should be in url's query string.\n     */\n    static pruneQueryString(keys = []) {\n        const query_params = URLHelper.getQueryParams();\n\n        [...query_params].forEach(value => keys.indexOf(value[0]) <= -1 && query_params.delete(value[0]));\n\n        const query_string = [...query_params].length ? `?${query_params.toString()}` : '';\n\n        window.history.replaceState(null, null, query_string);\n    }\n}\n","import Client                    from '_common/base/client_base';\nimport {\n    addComma,\n    getDecimalPlaces }           from '_common/base/currency_base';\nimport Password                  from '_common/check_password';\nimport { localize }              from '_common/localize';\nimport { compareBigUnsignedInt } from '_common/string_util';\nimport { cloneObject }           from '_common/utility';\n\n// ------------------------------\n// ----- Validation Methods -----\n// ------------------------------\nconst validRequired     = (value/* , options, field */) => {\n    if (value === undefined || value === null) {\n        return false;\n    }\n\n    const str = String(value).replace(/\\s/g, '');\n    return str.length > 0;\n};\nconst validEmail        = value => /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/.test(value);\nconst validPassword     = (value, options, field) => {\n    if (/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]+/.test(value)) {\n        Password.checkPassword(field.selector);\n        return true;\n    }\n    // else\n    return false;\n};\nconst validLetterSymbol = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><,|\\d]+/.test(value);\nconst validGeneral      = value => !/[`~!@#$%^&*)(_=+[}{\\]\\\\/\";:?><|]+/.test(value);\nconst validAddress      = value => !/[`~!$%^&*_=+[}{\\]\\\\\"?><|]+/.test(value);\nconst validPostCode     = value => /^[a-zA-Z\\d-\\s]*$/.test(value);\nconst validPhone        = value => /^\\+?[0-9\\s]*$/.test(value);\nconst validRegular      = (value, options) => options.regex.test(value);\nconst validEmailToken   = value => value.trim().length === 8;\nconst validTaxID        = value => /^[a-zA-Z0-9]*[\\w-]*$/.test(value);\nconst validBarrier      = value => /^[+-]?\\d+\\.?\\d*$/.test(value);\n\nconst validCompare  = (value, options) => value === $(options.to).val();\nconst validNotEqual = (value, options) => value !== $(options.to).val();\nconst validMin      = (value, options) => (options.min ? value.length >= options.min : true);\nconst validLength   = (value, options) => (\n    (options.min ? value.length >= options.min : true) &&\n    (options.max ? value.length <= options.max : true)\n);\n\nconst validNumber = (value, opts) => {\n    const options = cloneObject(opts);\n    let message = null;\n    if (options.allow_empty && value.length === 0) {\n        return true;\n    }\n\n    let is_ok = true;\n    if ('min' in options && typeof options.min === 'function') {\n        options.min = options.min();\n    }\n    if ('max' in options && typeof options.max === 'function') {\n        options.max = options.max();\n    }\n\n    if (!(options.type === 'float' ? /^\\d*(\\.\\d+)?$/ : /^\\d+$/).test(value) || isNaN(value)) {\n        is_ok   = false;\n        message = localize('Should be a valid number.');\n    } else if (options.type === 'float' && options.decimals &&\n        !(new RegExp(`^\\\\d+(\\\\.\\\\d{0,${options.decimals}})?$`).test(value))) {\n        is_ok   = false;\n        message = localize('Up to [_1] decimal places are allowed.', [options.decimals]);\n    } else if ('min' in options && 'max' in options && +options.min === +options.max && +value !== +options.min) {\n        is_ok   = false;\n        message = localize('Should be [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && 'max' in options && (+value < +options.min || isMoreThanMax(value, options))) {\n        is_ok   = false;\n        message = localize('Should be between [_1] and [_2]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined), addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('min' in options && +value < +options.min) {\n        is_ok   = false;\n        message = localize('Should be more than [_1]', [addComma(options.min, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    } else if ('max' in options && isMoreThanMax(value, options)) {\n        is_ok   = false;\n        message = localize('Should be less than [_1]', [addComma(options.max, options.format_money ? getDecimalPlaces(Client.get('currency')) : undefined)]);\n    }\n\n    getPreBuildDVRs().number.message = message;\n    return is_ok;\n};\n\nconst isMoreThanMax = (value, options) =>\n    (options.type === 'float' ? +value > +options.max : compareBigUnsignedInt(value, options.max) === 1);\n\nconst initPreBuildDVRs = () => ({\n    address      : { func: validAddress,      message: localize('Only letters, numbers, space, and these special characters are allowed: [_1]', ['- . \\' # ; : ( ) , @ /']) },\n    barrier      : { func: validBarrier,      message: localize('Only numbers and these special characters are allowed: [_1]', ['+ - .']) },\n    compare      : { func: validCompare,      message: localize('The two passwords that you entered do not match.') },\n    email        : { func: validEmail,        message: localize('Invalid email address.') },\n    general      : { func: validGeneral,      message: localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.') },\n    length       : { func: validLength,       message: localize('You should enter [_1] characters.', ['[_1]']) },\n    letter_symbol: { func: validLetterSymbol, message: localize('Only letters, space, hyphen, period, and apostrophe are allowed.') },\n    min          : { func: validMin,          message: localize('Minimum of [_1] characters required.', ['[_1]']) },\n    not_equal    : { func: validNotEqual,     message: localize('[_1] and [_2] cannot be the same.', ['[_1]', '[_2]']) },\n    number       : { func: validNumber,       message: '' },\n    password     : { func: validPassword,     message: localize('Password should have lower and uppercase letters with numbers.') },\n    phone        : { func: validPhone,        message: localize('Only numbers and spaces are allowed.') },\n    postcode     : { func: validPostCode,     message: localize('Only letters, numbers, space, and hyphen are allowed.') },\n    regular      : { func: validRegular,      message: '' },\n    req          : { func: validRequired,     message: '' },\n    signup_token : { func: validEmailToken,   message: localize('The length of token should be 8.') },\n    tax_id       : { func: validTaxID,        message: localize('Should start with letter or number, and may contain hyphen and underscore.') },\n});\n\nlet pre_build_dvrs;\nexport const getPreBuildDVRs = () => {\n    if (!pre_build_dvrs) {\n        pre_build_dvrs = initPreBuildDVRs();\n    }\n    return pre_build_dvrs;\n};\n\nexport const getPasswordLengthConfig = type => ({ min: (/^mt$/.test(type) ? 8 : 6), max: 25 });\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","export default from './validator';\n","import { template }        from '_common/utility';\nimport { getPreBuildDVRs } from './declarative_validation_rules';\nimport Error               from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input  = input;\n        this.rules  = rules;\n        this.store  = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule) {\n        let message = rule.options.message || getPreBuildDVRs()[rule.name].message;\n        if (rule.name === 'length') {\n            message = template(message, [rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                const is_valid = ruleObject.validator(\n                    this.input[attribute],\n                    ruleObject.options,\n                    this.store,\n                    this.input\n                );\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name   : is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import GTMBase from '../../_common/base/gtm';\n\nconst GTM = (() => {\n    const pushPurchaseData = (contract_data, root_store) => {\n        const data = {\n            event   : 'buy_contract',\n            bom_ui  : 'new',\n            contract: {\n                amount       : contract_data.amount,\n                barrier1     : contract_data.barrier,\n                barrier2     : contract_data.barrier2,\n                basis        : contract_data.basis,\n                buy_price    : contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency     : contract_data.currency,\n                date_expiry  : contract_data.date_expiry,\n                date_start   : contract_data.date_start,\n                duration     : contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout       : contract_data.payout,\n                symbol       : contract_data.symbol,\n            },\n            settings: {\n                theme           : root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                portfolio_drawer: root_store.ui.is_portfolio_drawer_on ? 'open' : 'closed',\n                purchase_confirm: root_store.ui.is_purchase_confirm_on ? 'enabled' : 'disabled',\n                chart           : {\n                    toolbar_position: root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type      : root_store.modules.smart_chart.chart_type,\n                    granularity     : root_store.modules.smart_chart.granularity,\n                },\n            },\n        };\n        GTMBase.pushDataLayer(data);\n    };\n\n    return {\n        ...GTMBase,\n        pushPurchaseData,\n    };\n})();\n\nexport default GTM;\n","export default        from './register_service_worker';\nexport { unregister } from './register_service_worker';\n","export default function register () { // Register the service worker\n    if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\n        window.addEventListener('load', () => {\n            let path_name = window.location.pathname;\n            path_name = /index\\.html/g.test(path_name) ? window.location.pathname.replace('index.html', '') : '';\n            const sw_url = `${path_name}service-worker.js`;\n            navigator.serviceWorker\n                .register(sw_url)\n                .then(registration => {\n                    registration.onupdatefound = () => {\n                        const installingWorker = registration.installing;\n                        installingWorker.onstatechange = () => {\n                            if (installingWorker.state === 'installed') {\n                                if (navigator.serviceWorker.controller) {\n                                    // At this point, the old content will have been purged and\n                                    // the fresh content will have been added to the cache.\n                                    // It's the perfect time to display a \"New content is\n                                    // available; please refresh.\" message in your web app.\n                                    console.log('New content is available; please refresh.'); // eslint-disable-line no-console\n                                } else {\n                                    // At this point, everything has been precached.\n                                    // It's the perfect time to display a\n                                    // \"Content is cached for offline use.\" message.\n                                    console.log('Content is cached for offline use.'); // eslint-disable-line no-console\n                                }\n                            }\n                        };\n                    };\n                })\n                .catch(error => {\n                    console.error('Error during service worker registration:', error); // eslint-disable-line no-console\n                });\n        });\n    }\n}\n\nexport function unregister () {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import 'babel-polyfill';\nimport 'promise-polyfill';\n\nimport { checkNewRelease } from '_common/check_new_release';\nimport initApp             from './App/app';\nimport registerServiceWorker from './Utils/pwa';\n\nwindow.check_new_release = checkNewRelease; // used by GTM to update page after a new release\n\nregisterServiceWorker();\ninitApp();\n\n// TODO Remove the below comments\n/**\n * The below lines are not necessary anymore since we are using `defer` in script tags.\n * It tells the browser to download the scripts without blocking the HTML parsing and\n * execute them after parsing is completely finished in the order they appear in the HTML.\n * Please let me know if you think we need to listen to this two events; otherwise, I will remove them totally in the next PR.\n */\n\n// document.addEventListener('DOMContentLoaded', initApp);\n// window.addEventListener('pageshow', (e) => { // Safari doesn't fire load event when using back button\n//     if (e.persisted) {\n//         initApp();\n//     }\n// });\n","// const Cookies = require('js-cookie');\n\n/*\n * Configuration values needed in js codes\n *\n * NOTE:\n * Please use the following command to avoid accidentally committing personal changes\n * git update-index --assume-unchanged src/javascript/config.js\n *\n */\nconst domain_app_ids = { // these domains also being used in '_common/url.js' as supported \"production domains\"\n    'binary.com': 1,\n    'binary.me' : 15284,\n};\n\nconst getCurrentBinaryDomain = () =>\n    Object.keys(domain_app_ids).find(domain => new RegExp(`.${domain}$`, 'i').test(window.location.hostname));\n\nconst isProduction = () => {\n    const all_domains = Object.keys(domain_app_ids).map(domain => `www\\\\.${domain.replace('.', '\\\\.')}`);\n    return new RegExp(`^(${all_domains.join('|')})$`, 'i').test(window.location.hostname);\n};\n\nconst binary_desktop_app_id = 14473;\n\nconst getAppId = () => {\n    let app_id = null;\n    const user_app_id   = ''; // you can insert Application ID of your registered application here\n    const config_app_id = window.localStorage.getItem('config.app_id');\n    const is_new_app    = /\\/app\\//.test(window.location.pathname);\n    if (config_app_id) {\n        app_id = config_app_id;\n    } else if (/desktop-app/i.test(window.location.href) || window.localStorage.getItem('config.is_desktop_app')) {\n        window.localStorage.removeItem('config.default_app_id');\n        window.localStorage.setItem('config.is_desktop_app', 1);\n        app_id = binary_desktop_app_id;\n    } else if (/staging\\.binary\\.com/i.test(window.location.hostname)) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 1098;\n    } else if (user_app_id.length) {\n        window.localStorage.setItem('config.default_app_id', user_app_id); // it's being used in endpoint chrome extension - please do not remove\n        app_id = user_app_id;\n    } else if (/localhost/i.test(window.location.hostname)) {\n        app_id = 1159;\n    } else if (is_new_app) {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = 15265;\n    } else {\n        window.localStorage.removeItem('config.default_app_id');\n        app_id = domain_app_ids[getCurrentBinaryDomain()] || 1;\n    }\n    return app_id;\n};\n\nconst isBinaryApp = () => +getAppId() === binary_desktop_app_id;\n\nconst getSocketURL = () => {\n    let server_url = window.localStorage.getItem('config.server_url');\n    if (!server_url) {\n        // const to_green_percent = { real: 100, virtual: 0, logged_out: 0 }; // default percentage\n        // const category_map     = ['real', 'virtual', 'logged_out'];\n        // const percent_values   = Cookies.get('connection_setup'); // set by GTM\n        //\n        // // override defaults by cookie values\n        // if (percent_values && percent_values.indexOf(',') > 0) {\n        //     const cookie_percents = percent_values.split(',');\n        //     category_map.map((cat, idx) => {\n        //         if (cookie_percents[idx] && !isNaN(cookie_percents[idx])) {\n        //             to_green_percent[cat] = +cookie_percents[idx].trim();\n        //         }\n        //     });\n        // }\n\n        // let server = 'blue';\n        // if (/www\\.binary\\.com/i.test(window.location.hostname)) {\n        //     const loginid = window.localStorage.getItem('active_loginid');\n        //     let client_type = category_map[2];\n        //     if (loginid) {\n        //         client_type = /^VRT/.test(loginid) ? category_map[1] : category_map[0];\n        //     }\n        //\n        //     const random_percent = Math.random() * 100;\n        //     if (random_percent < to_green_percent[client_type]) {\n        //         server = 'green';\n        //     }\n        // }\n\n        // TODO: in order to use connection_setup config, uncomment the above section and remove next lines\n\n        const loginid       = window.localStorage.getItem('active_loginid');\n        const is_real       = loginid && !/^VRT/.test(loginid);\n        const server        = isProduction() && is_real ? 'green' : 'blue';\n\n        server_url = `${server}.binaryws.com`;\n    }\n    return `wss://${server_url}/websockets/v3`;\n};\n\nmodule.exports = {\n    getCurrentBinaryDomain,\n    isProduction,\n    getAppId,\n    isBinaryApp,\n    getSocketURL,\n};\n"],"sourceRoot":""}